{"version":3,"sources":["services/pathology.tsx","hooks/useFormValues.ts","../node_modules/@ant-design/icons-svg/es/asn/EyeOutlined.js","../node_modules/@ant-design/icons/es/icons/EyeOutlined.js","containers/radiol-report-list/radiol-report-list.tsx"],"names":["compose","require","useDoctors","division","Divisions","PATH","variables","useSWR","data","rest","_data","map","x","id","doctorId","doctorById","forEach","s","doctorEnums","DoctorSelect","props","loading","disabled","Option","key","value","doctor","pathOr","BodyPartSelect","uuid","name","useBodyParts","BedroomSelect","useBedrooms","AppointmentTypeSelect","useAppointmentTypes","useFormValues","startDateField","endDateField","format","values","date","getRangeDate","startDate","endDate","evolve","createDate","ifElse","isNil","identity","invoker","reportDate","EyeOutlined","ref","React","AntdIcon","Object","assign","icon","EyeOutlinedSvg","displayName","formItemLayout","createFormItemLayout","ReportList","useTitle","setBreadcrumb","useBreadcrumb","useForm","form","useReports","refetch","transform","handleToReport","evt","report","find","propEq","currentTarget","dataset","isFinish","equals","__","path","isUntype","isTyped","hasORReqno","hasPath","allPass","history","push","replace","orreqno","REPORT_EDIT","REPORT_INQUIRY","handleToImageViewer","url","env","radiolViewerUrl","window","open","columns","title","dataIndex","render","v","r","data-id","className","onClick","sorter","spinning","style","minHeight","justify","md","xs","layout","hideRequiredMark","labelAlign","colon","gutter","Item","label","allowClear","reportStatusEnums","color","width","resetFields","validateFields","then","length","content","total","rowKey","dataSource"],"mappings":"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","file":"static/js/11.04bac468.chunk.js","sourcesContent":["import React from 'react'\nimport { SelectProps } from 'antd/lib/select'\nimport useSwr from 'swr'\nimport { pathOr, head, forEach, map } from 'ramda'\nimport request from '@/utils/request'\nimport useSWR from '@/hooks/useSWR'\nimport Select from '@/components/select'\nimport { QueryVariables, MedicalOrder } from '@/constants/types'\nimport { uuid } from '@/utils/webHelper'\nimport { Divisions } from '@/constants/enums'\nconst { compose } = require('ramda')\n\nexport type Doctor = {\n  id: number\n  doctorId: number\n  doctor: string\n  division: Divisions\n}\n\nexport function usePathology() {\n  const { data, ...others } = useSwr(`/api/b2/getPathologyResult`, url =>\n    request(url, {\n      method: 'POST',\n      body: {\n        classification: 'pathorderview',\n        noType: 'HHISNUM',\n        no: '16685033',\n      },\n    })\n  )\n\n  return {\n    ...others,\n    data: compose(head, pathOr([], []))(data) as MedicalOrder,\n  }\n}\n\nexport function useDoctors({\n  division = Divisions.PATH,\n  ...variables\n}: QueryVariables = {}) {\n  const { data = [], ...rest } = useSWR<Doctor[]>(\n    '/api/v1/c2/getC2DoctorList/{division}',\n    {\n      variables: { division, ...variables },\n    }\n  )\n\n  const _data = data?.map(x => ({ ...x, id: x.doctorId }))\n\n  const doctorById: { [key: string]: any } = {}\n\n  forEach(s => (doctorById[s.doctorId] = s), _data)\n\n  return {\n    ...rest,\n    doctorById,\n    data: _data,\n    doctorEnums: _data,\n  }\n}\n\nexport function DoctorSelect(props: SelectProps<any>) {\n  const { data, loading } = useDoctors()\n  return (\n    <Select disabled={loading} loading={loading} {...props}>\n      {compose(\n        map((x: Doctor) => (\n          <Select.Option key={x.id} value={x.doctor}>\n            {x.doctor}\n          </Select.Option>\n        )),\n        pathOr([], [])\n      )(data)}\n    </Select>\n  )\n}\n\nexport function useBodyParts() {\n  const { data = [], ...rest } = useSWR<string[]>('/api/v1/b1/getBodyParts')\n\n  const _data = data?.map(x => ({ id: uuid(), name: x }))\n\n  return {\n    ...rest,\n    data: _data,\n  }\n}\n\nexport function BodyPartSelect(props: SelectProps<any>) {\n  const { data } = useBodyParts()\n  return (\n    <Select {...props}>\n      {data.map(x => (\n        <Select.Option key={x.id} value={x.name}>\n          {x.name}\n        </Select.Option>\n      ))}\n    </Select>\n  )\n}\n\nexport function useBedrooms() {\n  const { data = [], ...rest } = useSWR<string[]>('/api/v1/b1/getWards')\n\n  const _data = data?.map(x => ({ id: uuid(), name: x }))\n\n  return {\n    ...rest,\n    data: _data,\n  }\n}\n\nexport function BedroomSelect(props: SelectProps<any>) {\n  const { data } = useBedrooms()\n  return (\n    <Select {...props}>\n      {data.map(x => (\n        <Select.Option key={x.id} value={x.name}>\n          {x.name}\n        </Select.Option>\n      ))}\n    </Select>\n  )\n}\n\nexport function useAppointmentTypes() {\n  const { data = [], ...rest } = useSWR<string[]>(\n    '/api/v1/b1/getAppointmentTypes'\n  )\n\n  const _data = data?.map(x => ({ id: uuid(), name: x }))\n\n  return {\n    ...rest,\n    data: _data,\n  }\n}\n\nexport function AppointmentTypeSelect(props: SelectProps<any>) {\n  const { data } = useAppointmentTypes()\n  return (\n    <Select {...props}>\n      {data.map(x => (\n        <Select.Option key={x.id} value={x.name}>\n          {x.name}\n        </Select.Option>\n      ))}\n    </Select>\n  )\n}\n","import { evolve, ifElse, isNil, identity, invoker } from 'ramda'\nimport { getRangeDate } from '@/utils/webHelper'\n\nexport default function useFormValues({\n  startDateField = 'startDate',\n  endDateField = 'endDate',\n  format,\n}: {\n  format?: string\n  startDateField?: string\n  endDateField?: string\n}) {\n  return (values: { [key: string]: any }) => {\n    if (!values) {\n      return {}\n    }\n\n    const { date = [], ...rest } = values\n\n    const [startDate, endDate] = getRangeDate(date, format)\n\n    return evolve({\n      createDate: ifElse(isNil, identity, invoker(1, 'format')('YYYY-MM-DD')),\n      reportDate: ifElse(isNil, identity, invoker(1, 'format')('YYYY-MM-DD')),\n    })({\n      ...rest,\n      [startDateField]: startDate,\n      [endDateField]: endDate,\n    })\n  }\n}\n","// This icon file is generated automatically.\nvar EyeOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" } }] }, \"name\": \"eye\", \"theme\": \"outlined\" };\nexport default EyeOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EyeOutlinedSvg from \"@ant-design/icons-svg/es/asn/EyeOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EyeOutlined = function EyeOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: EyeOutlinedSvg\n  }));\n};\n\nEyeOutlined.displayName = 'EyeOutlined';\nexport default /*#__PURE__*/React.forwardRef(EyeOutlined);","import React from 'react'\nimport {\n  pathOr,\n  replace,\n  length,\n  propEq,\n  find,\n  hasPath,\n  equals,\n  __,\n  path,\n  allPass,\n  map,\n} from 'ramda'\nimport { Row, Col, Form, Tooltip, Spin } from 'antd'\nimport { ColumnProps } from 'antd/lib/table'\nimport { EyeOutlined, EditOutlined } from '@ant-design/icons'\nimport useTitle from '@/hooks/useTitle'\nimport { useBreadcrumb } from '@/hooks/useApp'\nimport useFormValues from '@/hooks/useFormValues'\nimport { useReports } from '@/services/report'\nimport {\n  DoctorSelect,\n  AppointmentTypeSelect,\n  BedroomSelect,\n  BodyPartSelect,\n} from '@/services/pathology'\nimport Select from '@/components/select'\nimport Input from '@/components/input'\nimport { DatePicker } from '@/components/datepicker'\nimport { Page } from '@/components/layout'\nimport Table from '@/components/query-table'\nimport Button from '@/components/button'\nimport history from '@/utils/history'\nimport { sorter } from '@/utils/webHelper'\nimport { REPORT_EDIT, REPORT_INQUIRY } from '@/constants/routes'\nimport { reportStatusEnums } from '@/constants/enums'\nimport { createFormItemLayout } from '@/utils/form'\nimport env from '@/constants/env'\nconst { compose } = require('ramda')\n\nconst formItemLayout = createFormItemLayout(7)\n\nexport default function ReportList() {\n  useTitle('報告查詢')\n\n  const setBreadcrumb = useBreadcrumb([{ name: '報告查詢' }])\n\n  const [form] = Form.useForm()\n\n  const { data, refetch, loading } = useReports()\n\n  const transform = useFormValues({ format: 'YYYY-MM-DD' })\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      refetch(transform(values))\n      setBreadcrumb([{ name: '報告查詢' }, { name: '查詢結果' }])\n    })\n  }\n\n  const handleToReport = (evt: React.MouseEvent<HTMLElement>) => {\n    const report = compose(\n      find(propEq('orreqno', evt.currentTarget.dataset.id)),\n      pathOr([], ['content'])\n    )(data)\n\n    if (!report) {\n      return\n    }\n\n    const isFinish = compose(equals(__, '完成'), path(['orstatus']))\n    const isUntype = compose(equals(__, '未輸'), path(['orstatus']))\n    const isTyped = compose(equals(__, '已輸'), path(['orstatus']))\n    const hasORReqno = hasPath(['orreqno'])\n\n    if (allPass([hasORReqno, isFinish])(report)) {\n      history.push(`${replace(':id', report.orreqno)(REPORT_EDIT)}?finish=1`)\n    }\n    if (allPass([hasORReqno, isTyped])(report)) {\n      history.push(replace(':id', report.orreqno)(REPORT_EDIT))\n    }\n    if (allPass([hasORReqno, isUntype])(report)) {\n      history.push(`${REPORT_INQUIRY}?orreqno=${report.orreqno}`)\n    }\n  }\n\n  const handleToImageViewer = (evt: React.MouseEvent<HTMLElement>) => {\n    const url = replace(':id', '')(env.radiolViewerUrl)\n    window.open(\n      `${url}?AccessionNumber=${evt.currentTarget.dataset.id}`,\n      '__blank'\n    )\n  }\n\n  // const handleToMedicalOrder = (evt: React.MouseEvent<HTMLElement>) => {\n  //   history.push(\n  //     replace(':id', `${evt.currentTarget.dataset.id}`)(MEDICAL_ORDER)\n  //   )\n  // }\n\n  const handleResetFields = () => form.resetFields()\n\n  const columns: ColumnProps<any>[] = [\n    {\n      title: '編號',\n      dataIndex: 'orreqno',\n    },\n    {\n      title: '報告',\n      dataIndex: 'x',\n      render: (v, r) => (\n        <Tooltip title=\"編輯、查看報告內容\">\n          <EditOutlined\n            data-id={r.orreqno}\n            className=\"cursor-pointer text-lg\"\n            onClick={handleToReport}\n          />\n        </Tooltip>\n      ),\n    },\n    {\n      title: '影像',\n      dataIndex: 'createAt',\n      render: (v, r) => (\n        <Tooltip title=\"開啟新視窗查看影像\">\n          <EyeOutlined\n            data-id={r.orreqno}\n            className=\"cursor-pointer text-lg\"\n            onClick={handleToImageViewer}\n          />\n        </Tooltip>\n      ),\n    },\n    // { title: '開單醫師', dataIndex: 'serialNo', sorter: sorter('') },\n    { title: '病患姓名', dataIndex: 'hnamec' },\n    { title: '掛號別', dataIndex: 'csect', sorter: sorter('csect') },\n    { title: '檢查部位', dataIndex: 'orproced' },\n    { title: '病房', dataIndex: 'hnursta', sorter: sorter('hnursta') },\n    // { title: '檢查時間', dataIndex: 'creditTime', sorter: sorter('') },\n    { title: '開單日期', dataIndex: 'ordate', sorter: sorter('ordate') },\n    { title: '狀態', dataIndex: 'orstatus', sorter: sorter('orstatus') },\n    // { title: '排班醫師', dataIndex: 'ORWORKNO', sorter: sorter('') },\n    // { title: '排班類別', dataIndex: 'hhisnum', sorter: sorter('') },\n    { title: '報告時間', dataIndex: 'zrdorder', sorter: sorter('zrdorder') },\n    // { title: '入帳時間', dataIndex: 'createAt', sorter: sorter('') },\n    // {\n    //   title: '醫囑',\n    //   dataIndex: 'ORPROCED',\n    //   render: (v, r) => (\n    //     <Tooltip title=\"查看醫囑內容\">\n    //       <EyeOutlined\n    //         data-id={r.id}\n    //         className=\"cursor-pointer text-lg\"\n    //         onClick={handleToMedicalOrder}\n    //       />\n    //     </Tooltip>\n    //   ),\n    // },\n  ]\n\n  return (\n    <Spin spinning={loading}>\n      <Page style={{ minHeight: 'calc(100vh - 203px)' }}>\n        <Row justify=\"center\">\n          <Col md={22} xs={24}>\n            <Form\n              form={form}\n              layout=\"horizontal\"\n              hideRequiredMark={true}\n              labelAlign=\"right\"\n              colon={false}>\n              <Row gutter={12} justify=\"space-between\">\n                <Col md={6} xs={24}>\n                  <Form.Item {...formItemLayout} label=\"病歷號\" name=\"hhisnum\">\n                    <Input />\n                  </Form.Item>\n                </Col>\n                {/* <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"開單醫生\" name=\"doctor\">\n                  <DoctorSelect allowClear />\n                </Form.Item>\n              </Col> */}\n                <Col md={6} xs={24}>\n                  <Form.Item\n                    {...formItemLayout}\n                    label=\"開單日期\"\n                    name=\"createDate\">\n                    <DatePicker className=\"w-full\" />\n                  </Form.Item>\n                </Col>\n                <Col md={6} xs={24}>\n                  <Form.Item\n                    {...formItemLayout}\n                    label=\"掛號別\"\n                    name=\"appointmentType\">\n                    <AppointmentTypeSelect className=\"w-full\" />\n                  </Form.Item>\n                </Col>\n              </Row>\n              <Row gutter={12} justify=\"space-between\">\n                <Col md={6} xs={24}>\n                  <Form.Item\n                    {...formItemLayout}\n                    label=\"申請序號\"\n                    name=\"orreqno\">\n                    <Input />\n                  </Form.Item>\n                </Col>\n                <Col md={6} xs={24}>\n                  <Form.Item {...formItemLayout} label=\"報告醫生\" name=\"doctor\">\n                    <DoctorSelect allowClear />\n                  </Form.Item>\n                </Col>\n                <Col md={6} xs={24}>\n                  <Form.Item\n                    {...formItemLayout}\n                    label=\"報告日期\"\n                    name=\"reportDate\">\n                    <DatePicker className=\"w-full\" />\n                  </Form.Item>\n                </Col>\n                {/* <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"急照別\" name=\"createAt\">\n                  <Select className=\"w-full\" />\n                </Form.Item>\n              </Col> */}\n              </Row>{' '}\n              {/* <Row gutter={12} justify=\"space-between\">\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"病人姓名\" name=\"name\">\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item\n                  {...formItemLayout}\n                  label=\"報告排班醫師\"\n                  name=\"doctor\">\n                  <DoctorSelect allowClear />\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"檢查日期\" name=\"createAt\">\n                  <DatePicker className=\"w-full\" />\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"逾期\" name=\"createAt\">\n                  <Select className=\"w-full\" />\n                </Form.Item>\n              </Col>\n            </Row> */}\n              <Row gutter={12} justify=\"space-between\">\n                {/* <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"身分證號\" name=\"idCard\">\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"輸入人員\" name=\"doctor\">\n                  <DoctorSelect allowClear />\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"入帳日期\" name=\"createAt\">\n                  <DatePicker className=\"w-full\" />\n                </Form.Item>\n              </Col> */}\n                <Col md={6} xs={24}>\n                  <Form.Item {...formItemLayout} label=\"病房\" name=\"ward\">\n                    <BedroomSelect className=\"w-full\" />\n                  </Form.Item>\n                </Col>\n                <Col md={6} xs={24}>\n                  <Form.Item\n                    {...formItemLayout}\n                    label=\"檢查部位\"\n                    name=\"bodypart\">\n                    <BodyPartSelect />\n                  </Form.Item>\n                </Col>\n\n                <Col md={6} xs={24}>\n                  <Form.Item {...formItemLayout} label=\"報告狀態\" name=\"status\">\n                    <Select allowClear>\n                      {map((x: { id: number; name: string }) => (\n                        <Select.Option key={x.id} value={x.id}>\n                          {x.name}\n                        </Select.Option>\n                      ))(reportStatusEnums)}\n                    </Select>\n                  </Form.Item>\n                </Col>\n              </Row>\n              <Row gutter={12} justify=\"end\">\n                {/* <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"檢查部位\" name=\"bodypart\">\n                  <BodyPartSelect />\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"排班類別\" name=\"doctor\">\n                  <Select allowClear />\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"報告狀態\" name=\"status\">\n                  <Select allowClear>\n                    <Select.Option value={1}>未輸入</Select.Option>\n                    <Select.Option value={2}>複審</Select.Option>\n                    <Select.Option value={3}>暫存</Select.Option>\n                    <Select.Option value={4}>不確定</Select.Option>\n                    <Select.Option value={5}>正式</Select.Option>\n                    <Select.Option value={6}>全部</Select.Option>\n                  </Select>\n                </Form.Item>\n              </Col> */}\n                <Col md={6} xs={24}>\n                  <Form.Item className=\"ml-4\">\n                    <Button\n                      color=\"primary\"\n                      style={{ width: 96 }}\n                      className=\"mr-3\"\n                      onClick={handleResetFields}>\n                      重設\n                    </Button>\n                    <Button\n                      color=\"primary\"\n                      style={{ width: 96 }}\n                      onClick={handleOk}>\n                      搜尋\n                    </Button>\n                  </Form.Item>\n                </Col>\n              </Row>\n            </Form>\n          </Col>\n        </Row>\n        {length(data.content) > 0 && (\n          <>\n            <Row className=\"mb-2 mt-4\" justify=\"center\">\n              <Col md={24} xs={24} className=\"text-sm\">\n                檢索結果共 <span className=\"text-primary\">{data.total}</span> 筆\n              </Col>\n            </Row>\n            <Row justify=\"center\">\n              <Col md={24} xs={24}>\n                <Table rowKey=\"id\" dataSource={data} columns={columns} />\n              </Col>\n            </Row>\n          </>\n        )}\n      </Page>\n    </Spin>\n  )\n}\n"],"sourceRoot":""}