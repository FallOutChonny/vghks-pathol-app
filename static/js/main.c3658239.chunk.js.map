{"version":3,"sources":["hooks/useAuth.tsx","components/snippet-template-modal.tsx","components/snippet-template-wrapper.tsx","components/form.tsx","components/radlex-list-modal.tsx","services/radlex.tsx","components/snippet-template-input-text.tsx","components/input-number.tsx","components/snippet-template-input-number.tsx","components/editable-table.tsx","components/snippet-template-selection-modal.tsx","components/snippet-template-multiple-selection.tsx","components/snippet-template-single-selection.tsx","components/snippet-template-date.tsx","components/snippet-template-time.tsx","components/snippet-template-select.tsx","components/snippet-template-section-header.tsx","components/snippet-template-cloze.tsx","components/snippet-template-list.tsx","bootstrap.ts","utils/createPack.tsx","components/error-boundary.tsx","components/exception.tsx","components/loading.tsx","components/breadcrumb.tsx","components/logout-confirm-modal.tsx","components/app-header.tsx","containers/home/index.ts","containers/login/index.tsx","app.tsx","serviceWorker.ts","index.tsx","data/useReportTemplate.ts","components/checkbox.tsx","components/modal.tsx","components/collapse.ts","utils/history.ts","components/select.tsx","hooks/useApp.ts","theme.ts","utils/message.tsx","utils/camelcase.ts","utils/request.ts","components/radio.tsx","hooks/useVisible.ts","constants/item-types.ts","components/datepicker.tsx","services/authService.ts","components/snippet-utils.tsx","components/query-table.tsx","data/useReport.ts","services/report.ts","utils/webHelper.ts","components/table.tsx","hooks/useSWR.tsx","utils/get-display-name.ts","components/snippet-toolbar.tsx","components/withTinyMCE.js","components/snippet.tsx","components/tabs.ts","components/draggable-tabs.js","hooks/useDelete.tsx","hooks/useTableRowSelection.ts","components/input.tsx","hooks/useTitle.ts","components/layout.tsx","components/withScroll.js","components/snippet-scrollable-container.tsx","hooks/useRouteLeaveConfirm.ts","services/pathology.tsx","components/snippet-block-placeholder.ts","components/snippets-container.tsx","components/snippet-list-menu-item.tsx","components/snippet-list-menu.tsx","data/usePhrase.ts","services/phrase.ts","containers/report-template-editor/index.ts","containers/report-template-list/index.ts","containers/report-inquiry/index.ts","containers/report-typing/autoHeight.tsx","containers/report-typing/report-typing-header.tsx","containers/report-typing/components.tsx","containers/report-typing/pie.tsx","constants/enums.ts","containers/report-typing/report-typing-medical-order.tsx","containers/report-typing/report-typing-affix.tsx","containers/report-typing/report-typing-preview.tsx","containers/report-typing/phrase-list-modal.tsx","containers/report-typing/report-typing.tsx","containers/report-typing/index.ts","containers/report-list/index.ts","containers/radiol-report-list/index.ts","containers/yellow-card-inquiry/index.ts","containers/blood-bank-review/index.ts","containers/medical-order/index.ts","containers/phrase-list/index.ts","containers/report-version-comparison/index.ts","containers/image-scheduler/index.ts","constants/routes.ts","components/app-footer.tsx","../theme.js","components/button.tsx","constants/env.ts","utils/form.ts","services/reportTemplate.ts"],"names":["AuthContext","React","createContext","isAuthenticated","user","logout","setUser","_","setIsAuthenticated","_user","Cookies","getJSON","AuthProvider","props","useState","id","division","divisions","RAD","useCallback","onCompleted","remove","value","useMemo","Provider","useAuth","context","useContext","undefined","Error","TemplateModal","onCancel","onOk","children","item","visible","width","maskClosable","keyboard","footer","key","color","style","minWidth","marginRight","onClick","StyledCard","styled","p","theme","darkGrey","SnippetTemplateWrapper","title","onDelete","onEdit","titleVisible","bodyVisible","useReportPreview","isPreview","className","FontColorsOutlined","cx","FormItem","Item","compose","require","useRadlex","Radlex","onSelect","inline","field","useVisible","radlexModalVisible","handleRadlexModalVisible","radlexCode","ifElse","is","Array","idx","path","RadlexListModal","selected","radlex","options","update","pathOr","code","always","noStyle","label","name","isNil","LinkOutlined","variables","useSWR","data","rest","_data","dataSource","content","total","length","totalPages","Math","floor","useRadlexes","loading","keyword","setKeyword","useTableRowSelection","multiple","defaultRowKeys","identity","of","rowSelection","selectedRowCount","selectedRows","_dataSource","filter","x","includes","bodyStyle","paddingTop","paddingLeft","paddingRight","head","span","placeholder","onChange","evt","target","rowKey","size","pagination","columns","dataIndex","InputTextModal","useForm","form","handleSelect","validateFields","then","values","createFormItemLayout","labelAlign","initialValues","valuePropName","StyledInputNumber","attrs","min","primary","ThousandSeprartorInput","forwardRef","ref","thosandSeprartor","CurrencyInput","currency","PercentInput","percent","displayName","InputNumberModal","EditableTable","onRowAdd","onRowDelete","triggerChange","changedValue","onAddRowClick","onDeleteRowClick","editable","defaultValue","uuid","text","freetext","SnippetTemplateSelectionModal","freetextVisible","render","v","r","align","useEffect","setFieldsValue","JSON","stringify","concat","__","invoker","SnippetTemplateMultipleSelection","editModalVisible","handleEditModalVisible","onUpdate","useUpdateSnippet","setting","handleOk","mapIndexed","defaultChecked","bordered","SnippetTemplateSingleSelection","Group","InputDateModal","allowClear","picker","InputTimeModal","format","SnippetTemplateCloze","input","html","Component","snippetTemplateList","type","componentType","icon","BoldOutlined","FontSizeOutlined","inputProps","tooltip","multipleLine","autoSize","minRows","NumberOutlined","max","formatter","units","String","getNumberFromString","parser","replace","RegExp","DatabaseOutlined","map","Option","UnorderedListOutlined","TemplateMultipleSelection","OrderedListOutlined","TemplateSingleSelection","CalendarOutlined","ClockCircleOutlined","Cloze","snippetTemplateById","mergeAll","setComponentByTab","s","keys","setComponent","dayjs","extend","isSameOrBefore","isSameOrAfter","advancedFormat","customParseFormat","weekYear","weekOfYear","isMoment","localeData","badMutable","weekday","locale","pack","components","ErrorFallbackWrapper","div","ErrorFallback","error","componentStack","resetErrorBoundary","role","message","initialState","info","ErrorBoundary","state","args","onReset","setState","this","onError","prevProps","resetKeys","a","b","some","index","Object","changedArray","onResetKeysChange","fallbackRender","FallbackComponent","fallback","isValidElement","Exception","ExceptionWrapper","backgroundImage","envStore","publicUrl","to","Wrapper","memo","justify","Loading3QuartersOutlined","spin","StyledBreadcrumb","StyledModal","Modal","LogoutConfirmModal","centered","closable","ExclamationCircleFilled","fontSize","AppHeader","useBreadcrumbState","items","useHeaderContentValue","history","location","pathname","current","setCurrentPath","logoutModalVisible","handleLogoutModalVisible","handleTo","push","getMenuClassName","targetUrl","Header","Logo","src","alt","mode","borderBottom","lineHeight","MenuItem","routes","SettingOutlined","SubMenu","popupOffset","popupClassName","CaretDownOutlined","display","suffixIcon","prev","PATH","CLINICIAN","ExportOutlined","borderColor","separator","minHeight","alignItems","HomeOutlined","top","href","purple150","lazy","Login","ForgetPassword","LoginRoute","Suspense","exact","component","App","useRoutes","renderRouteItem","param","renderRoute","hide","Home","Boolean","window","hostname","match","redirect","EnhancedApp","createPack","initializeState","set","zhTW","suspense","fetcher","request","revalidateOnFocus","DndProvider","backend","HTML5Backend","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","useSnippetCategoryOfReport","PATHOLOGICAL_DIAGNOSIS","GROSS","MICROSCOPY","NOTES","REFERENCES","PROCEDURE_INFORMATION","CLINICAL_INFORMATION","COMPARISON","FINDINGS","IMPRESSION","fakeReportTemplateList","Store","get","reportTemplateListState","atom","default","reportPreviewState","selectorFamily","find","useReportTemplateState","useRecoilState","useReportTemplate","reportTemplateList","defaultSnippetsOfReport","snippetCategoryOfReport","useDefaultSnippetsOfReport","reportTemplate","setReportTemplate","_snippetList","setSnippetList","snippetList","snippetById","categoryCountById","categoryCount","flatten","setIsPreview","useToggleReportPreview","useCurrentCategoryOfSnippet","categoryState","useCategoryState","CheckboxGroup","StyledCheckbox","secondary","CheckboxComponent","ModalComponent","confirm","success","StyledCollapse","createHashHistory","basename","appBaseName","StyledSelect","SelectComponent","breadcrumbState","useBreadcrumb","setter","useSetRecoilState","headerContentState","useHeaderContent","node","useRecoilValue","marginTop","marginBottom","modalDefaultProps","okText","cancelText","autoFocusButton","okButtonProps","cancelButtonProps","preserveCamelCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","toUpperCase","slice","toLowerCase","camelCase","isArray","TypeError","assign","pascalCase","postProcess","charAt","trim","join","hasUpperCase","p1","m","cond","url","params","regex","_params","_url","propName","replacedValue","fullUrl","toQueryString","paramsObject","val","encodeURIComponent","contentTypeIs","c","convertObjectKeys","object","keypath","o","reduce","acc","nestedKeyPath","camelcase","body","headers","msg","errorMsg","withToken","throwable","successMessage","endpoint","T","apiBaseUrl","fetch","FormData","merge","Authorization","Accept","response","status","Promise","reject","statusText","json","result","ok","blob","err","StyledRadio","RadioComponent","onRequestOpen","setVisible","handleVisible","handleClose","CARD","BOARD","SNIPPET","borderLess","css","RangePicker","StyledDatePicker","StyledTimePicker","DatePickerComponent","hasClassName","nodes","n","canMoveSnippet","element","elem","parentNode","unshift","getPlaceHolderIndex","clientOffset","overSnippet","findSnippet","classList","contains","parentElement","elementFromPoint","y","snippetIndex","dataset","placeholderIndex","Number","isOverSnippet","padding","renderSnippets","wrapperId","draggable","tabSize","dangerouslySetInnerHTML","__html","QueryTable","pageNum","paginationConfig","mergeDeepRight","pageSize","showSizeChanger","reportListState","useReportList","useReports","setData","reportList","setReportList","refetch","useReportItem","valueById","useAddNewReport","handler","newList","createdAt","moment","createdAtStr","updatedAt","updatedAtStr","store","useUpdateReport","findIndex","forEach","addIndex","isEmpty","either","not","RisNil","queryString","search","URLSearchParams","d","Date","now","performance","random","toString","hasPath","namedPath","str","isEnvDev","appUrl","downloadAsJson","filename","dataStr","downloadAnchorNode","createElement","setAttribute","appendChild","click","readFile","file","resolve","fileReader","FileReader","addEventListener","onerror","readAsText","StyledTable","TableComponent","isRowDeletable","isCanEdit","_columns","canEdit","placement","emptyText","image","PRESENTED_IMAGE_SIMPLE","description","Column","config","fn","query","setQuery","called","setIsCalled","useRef","_fn","_key","_useSWR","dedupingInterval","shouldRetryOnError","onSuccess","isValidating","getDisplayName","ToolbarWrapper","SHIFT_TYPES","SnippetToolbar","tabIndex","onShift","handleShift","shift","hidden","LeftOutlined","RightOutlined","EditOutlined","DeleteOutlined","defaultConfig","block_formats","menubar","external_plugins","dropdown","inputtext","fontsize_formats","force_br_newlines","force_p_newlines","forced_root_block","plugins","tinymce","link_title","table_toolbar","textcolor_cols","content_security_policy","allow_unsafe_link_target","relative_urls","convert_urls","valid_elements","valid_children","toolbar1","withDragSource","DragSource","ItemTypes","beginDrag","fromMenu","originalIndex","canDrag","connect","monitor","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","Snippet","componentDidMount","getEmptyImage","shiftSnippet","handleRemove","removeSnippet","_onMouseOver","_onMouseOut","styles","mergeRight","isFocus","borderRadius","border","outlineColor","cursor","position","marginLeft","getItemStyles","onMouseOver","onMouseOut","data-index","Children","child","cloneElement","ComposedComponent","withTinyMCE","editor","toolbarMouseOver","toolbarVisible","initialize","snippet","_get","_config","clone","init","selector","language_url","setup","on","e","onEditorBlur","onEditorFocus","Function","execInit","setContent","init_instance_callback","undoManager","add","updateSnippet","getContent","offsetTop","onBlur","prevState","equals","defaultProps","hoist","bg","TabNode","connectDropTarget","isOver","draggingItem","moveTabNode","withDropTarget","DropTarget","drop","dragKey","getItem","hoverKey","dropTarget","WrapTabNode","DraggableTabs","order","newOrder","indexOf","dragIndex","hoverIndex","splice","renderTabBar","DefaultTabBar","TabPane","Tabs","modal","useDelete","isDeletable","onRequestDelete","onBeforeDelete","refetchQueries","deleteItem","modalProps","onAfterDelete","onAfterDeleteResolve","handleConfirm","currentTarget","handleConfirmDeletion","handleDeleteFailure","useRowSelection","limit","defaultRows","selectedRowKeys","setSelectedRowKeys","setSelectedRows","onSelectChange","rowKeys","rows","takeLast","clearSelection","StyledInput","TextArea","DEFAULT_USE_TITLE_OPTIONS","restoreOnUnmount","prevTitleRef","appTitle","_title","background","Page","Content","noop","intBetween","createVerticalStrength","_buffer","point","h","w","buffer","defaultHorizontalStrength","defaultVerticalStrength","ScrollableComponent","WrappedComponent","ScrollingComponent","ctx","handleEvent","dragging","attached","attach","updateScrolling","throttle","container","getBoundingClientRect","box","left","height","coords","changedTouches","clientX","clientY","getCoords","scaleX","horizontalStrength","scaleY","verticalStrength","frame","startScrolling","trailing","useScroll","_initial","findDOMNode","wrappedInstance","clearMonitorSubscription","dragDropManager","getMonitor","subscribeToStateChange","handleMonitorChange","_remove","removeEventListener","stopScrolling","tick","strengthMultiplier","onScrollChange","scrollLeft","scrollTop","scrollWidth","scrollHeight","clientWidth","clientHeight","raf","detach","cancel","contextType","DndContext","withScroll","vStrength","ReactDndProvider","useRouteLeaveConfirm","usePathology","useSwr","method","classification","noType","no","others","DoctorSelect","doctorId","doctorById","doctorEnums","useDoctors","doctor","canDrop","handleSnippetDrop","handleSnippetMove","getClientOffset","hover","hoverBoundingRect","hoverMiddleY","bottom","didDrop","SnippetsContainer","atIndex","handleFindSnippet","isPlaced","onSnippetUpdate","droppedItem","nextIndex","insert","handleSnippetRemove","handleSnippetShift","handleSnippetUpdate","gt","lt","isPlaceHold","cardList","withRouter","endDrag","SnippetListMenuItem","SnippetListMenuWrapper","comp","SnippetListMenu","fakePhraseTemplateList","phraseTemplateListState","usePhraseTemplates","usePhraseList","phraseTemplates","useAddNewPhrase","setPhraseTemplates","useUpdatePhrase","useRemovePhrase","usePhraseItem","phraseTemplateList","phraseTemplate","setPhraseTemplate","usePhraseTemplate","computeHeight","parseInt","getComputedStyle","paddingBottom","autoHeight","menuState","computedHeight","root","handleRoot","getAutoHeight","StyledAnchor","PieChart","chartWidth","legendWidth","ReactFitText","DataView","Pie","legendData","legendBlock","requestRef","chart","getG2Instance","requestAnimationFrame","getLegendData","resize","geom","getAllGeoms","origin","_origin","checked","handleLegendClick","newItem","filteredLegendData","l","Debounce","hasLegend","passive","preProps","cancelAnimationFrame","formatColor","valueFormat","subTitle","forceFit","inner","animate","colors","lineWidth","pieClassName","classNames","propsData","propsSelected","defaultColors","parseFloat","dv","source","transform","dimension","as","maxFontSize","scale","range","onGetG2Instance","showTitle","innerRadius","stroke","toFixed","backgroundColor","isNaN","PureComponent","html2pdf","isExport","onToggleExport","REPORT_INQUIRY","exporting","setIsExporting","handleExport","querySelector","opt","margin","quality","html2canvas","jsPDF","unit","orientation","from","save","env","viewerUrl","open","ActionTypes","reportAnnotations","ReportMedicalOrder","reviewDoctor","onToggle","activeKey","expandIcon","Panel","header","DoubleRightOutlined","ORREQNO","ORWORKNO","HNAMEC","HSEX","CSECT","HHISNUM","HNURSTA","HBED","HBIRTHDT","ORPROCED","Link","Anchor","ReportTypingAffix","affixed","showInkInFixed","affix","getAnchorStyles","borderBottomLeftRadius","borderBottomRightRadius","formItemLayout","shortFormItemLayout","Divider","SnippetPreviewWrapper","ReportTypingPreview","medical","gutter","readOnly","offset","ORWORD","maxWidth","whiteSpace","oIdx","padEnd","PhraseListModal","pluck","col","right","ReportTyping","useTitle","handleExportable","useAllReportTemplates","reportTemplates","exportable","phraseListModalVisible","handlePhraseListModalVisible","VISIBLE_LEFT","VISIBLE_RIGHT","visibleLayouts","setVisibleLayouts","qs","templateId","setCurrentTemplateId","category","handleTabEdit","handleTabChange","handleTabMove","handleTabNameChange","handleKeyPress","ctrlKey","keyCode","serialNo","handleLayoutChange","leftContentVisible","rightContentVisible","REPORT_EDIT","handleAdd","handleUpdate","payload","setIsAffixed","percentage","setPercentage","handleValuesChange","round","getFieldsValue","colSpan","filterReportTemplates","onValuesChange","defaultActiveKey","DoubleLeftOutlined","showSearch","filterOption","onSearch","link","preventDefault","tab","split","scroll","behavior","BulbOutlined","tabBarGutter","contentEditable","suppressContentEditableWarning","spellCheck","renderCategory","template","PhraseList","PhraseEdit","REPORT_TEMPLATE_LIST","REPORT_INPUT","REPORT_TEMPLATE_EDIT","REPORT_TEMPLATE_CREATE","REPORT_VERSION_COMPARISON","REPORT_LIST","RADIOL_REPORT_LIST","PHRASE_LIST","PHRASE_CREATE","PHRASE_EDIT","BLOOD_BANK_REVIEW","YELLOW_CARD_INQUIRY","MEDICAL_ORDER","IMAGE_SCHEDULER","ImageScheduler","ReportList","RadiolReportList","ReportInquiry","ReportVersionComparison","YellowCardInquiry","BloodBankReview","MedicalOrder","ReportTemplateList","ReportTemplateBuilder","AppFooter","Footer","module","exports","danger","cornblue","comet","btn","sider","login","cyan","StyledButton","ButtonComponent","actionType","process","REACT_APP_API_ROOT","REACT_APP_BASE_NAME","REACT_APP_TITLE","protocol","host","REACT_APP_FAKE_API_ROOT","wrapper","labelCol","xs","sm","wrapperCol","rules","required","number","account","pattern","password","setSetting","newSetting","useReportTemplates","useReportTemplateItem","setCategory","handleTabAdd","last","inc","Rlast","sort","handleTabRemove","targetKey","omit","action","snippetKeys","orderA","orderB","newTabName","innerHTML","useAddNewTemplate","setReportTemplates","useUpdateTemplate","useExportTemplate"],"mappings":"8PAeaA,EAAcC,IAAMC,cAA+B,CAC9DC,iBAAiB,EACjBC,KAAM,GACNC,OAAQ,iBAAO,IACfC,QAAS,SAACC,GAAD,MAA2C,IACpDC,mBAAoB,SAACD,GAAD,MAAuC,MAGvDE,EAAQC,IAAQC,QAAQ,cAGvB,SAASC,EAAaC,GAAa,IAAD,EACOZ,IAAMa,UAElD,GAHqC,mBAChCX,EADgC,KACfK,EADe,OAMfP,IAAMa,SAAN,2BACnBL,GADmB,IAEtBM,GAAI,EACJC,SAAUC,IAAUC,OATiB,mBAMhCd,EANgC,KAM1BE,EAN0B,KAYjCD,EAASJ,IAAMkB,aAAY,WAA2B,IAAD,yDAAP,GAAhBC,EAAuB,EAAvBA,YAClCV,IAAQW,OAAO,eACfX,IAAQW,OAAO,cAEfb,GAAmB,GAEfY,GACFA,MAED,IAEGE,EAAQrB,IAAMsB,SAClB,iBAAO,CACLpB,kBACAK,qBACAF,UACAD,SACAD,UAEF,CAACD,EAAiBE,EAAQD,EAAME,EAASE,IAG3C,OAAO,kBAACR,EAAYwB,SAAb,eAAsBF,MAAOA,GAAWT,IAG1C,SAASY,IACd,IAAMC,EAAUzB,IAAM0B,WAAW3B,GACjC,QAAgB4B,IAAZF,EACF,MAAM,IAAIG,MAAJ,8CAER,OAAOH,EAGMD,O,kWCzDf,SAASK,EAAT,GAMmB,IALjBC,EAKgB,EALhBA,SACAC,EAIgB,EAJhBA,KAEAC,GAEgB,EAHhBC,KAGgB,EAFhBD,UACGpB,EACa,qDAMhB,OACE,kBAAC,IAAD,eACEsB,SAAO,EACPJ,SAAUA,EACVK,MAAO,IACPC,cAAc,EACdC,UAAU,EACVC,OAAQ,CACN,kBAAC,IAAD,CACEC,IAAI,aACJC,MAAM,UACNC,MAAO,CAAEC,SAAU,GAAIC,YAAa,IACpCC,QAASd,GAJX,gBAOA,kBAAC,IAAD,CACES,IAAI,WACJC,MAAM,UACNC,MAAO,CAAEC,SAAU,IACnBE,QAxBS,WACXb,GACFA,MAkBE,kBAQEnB,GACHoB,G,OAOQH,I,mDChDTgB,EAAaC,kBAAO,KAAV,uFAAGA,CAAH,opBAUH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,YAoFXC,MA9Bf,YAQW,IAPTC,EAOQ,EAPRA,MACAnB,EAMQ,EANRA,SAMQ,KALRoB,SAKQ,EAJRC,OAIQ,EAHRC,aAGQ,EAFRC,oBAEQ,SADL3C,EACK,uFACY4C,cAAbC,EADC,oBAGR,OACE,kBAACZ,EAAD,eACEM,MACE,yBAAKO,UAAU,sBACXD,GAAa,kBAACE,EAAA,EAAD,CAAoBD,UAAU,SAC5CP,GAAK,mCAAYM,EAAY,GAAK,mEAGvCC,UAAWE,IAAG,CAEZ,uBAAwBL,KAGtB3C,GACHoB,I,sIC9FM6B,EAAWf,kBAAO,IAAKgB,MAAf,qEAAGhB,CAAH,uF,qDCuBbiB,GAAYC,EAAQ,IAApBD,QASD,SAASE,GAAUlC,GACxB,OAAO,SAACV,GACFU,GACFA,EAAKV,IAKJ,SAAS6C,GAAT,GAKU,IAJfC,EAIc,EAJdA,SAIc,IAHdC,cAGc,aAFdC,aAEc,MAFN,OAEM,EADdpC,EACc,EADdA,KACc,EACyCqC,eADzC,mBACPC,EADO,KACaC,EADb,KA0BVC,EAAaC,YACfC,YAAGC,QACH,YAAqB,IAAjBC,EAAgB,oBAClB,OAAOC,YAAK,CAAC,UAAWD,EAAK,cAAe5C,MAE9C,kBAAM6C,YAAK,CAAC,cAAe7C,KALZyC,CAMfL,GAEF,OACE,oCACGE,GACC,kBAACQ,GAAD,CACEC,SAAUP,EACV1C,KApCa,SAACkD,GAChBd,GACFA,EACEO,YACEC,YAAGC,QACH,WAA0B,IAAD,yDAAP,GAAO,mBAArBC,EAAqB,KACvB,MAAO,CACLK,QAASnB,GACPoB,YAAON,EAAD,YAAC,eACFO,YAAO,GAAI,CAAC,UAAWP,GAAvBO,CAA6BnD,IAD5B,IAEJwC,WAAYQ,EAAOI,QAErBD,YAAO,GAAI,CAAC,YALLrB,CAMP9B,MAGNqD,YAAO,CAAEb,WAAU,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAQI,OAb/BX,CAcEL,IAGNG,KAiBM1C,SAAU0C,IAGd,kBAACX,EAAD,CAAU0B,QAASnB,EAAQoB,MAAM,OAAO9B,UAAU,YAChD,sBAAMI,KAAN,CAAWyB,SAAO,EAACE,KAAMpB,GACvB,kBAAC,IAAD,CACEX,UAAWE,IAAG,CACZ,cAAe8B,YAAMjB,GACrB,UAAWL,OAIjB,sBAAMN,KAAN,CAAWyB,SAAO,GAChB,kBAACI,EAAA,EAAD,CACEjC,UAAU,sBACVd,QAAS4B,OAad,SAASO,GAAT,GAKe,IAJpBhD,EAImB,EAJnBA,KACAD,EAGmB,EAHnBA,SACAkD,EAEmB,EAFnBA,SACGpE,EACgB,gDCtHd,WAAsD,IAAjCgF,EAAgC,uDAAJ,GAAI,EAChCC,aAAM,oBAA6B,CAAED,cAAvDE,EADkD,EAClDA,KAASC,EADyC,wBAGpDC,EAAQZ,YACZ,CACE,CAAEtE,GAAI,EAAGuE,KAAM,+BACf,CAAEvE,GAAI,EAAGuE,KAAM,gCACf,CAAEvE,GAAI,EAAGuE,KAAM,+BACf,CAAEvE,GAAI,EAAGuE,KAAM,8BACf,CAAEvE,GAAI,EAAGuE,KAAM,+BACf,CAAEvE,GAAI,EAAGuE,KAAM,gCACf,CAAEvE,GAAI,EAAGuE,KAAM,kCAIjB,GACAS,GAGIG,EAAa,CACjBC,QAASF,EACTG,MAAOC,aAAOJ,GACdK,WAAYC,KAAKC,MAAMH,aAAOJ,GAAS,IAAM,GAG/C,OAAO,2BACFD,GADL,IAEED,OACAG,eD2F8BO,GAAxBP,EADW,EACXA,WAAYQ,EADD,EACCA,QADD,EAGWzG,IAAMa,WAHjB,mBAGZ6F,EAHY,KAGHC,EAHG,OAKsCC,aAAqB,aAE1EC,UAAU,GACN7B,EACA,CACE8B,eAAgBpC,YAAOC,YAAGC,OAAQmC,IAAUC,IAA5BtC,CAAgCM,IAElD,KAPAiC,EALW,EAKXA,aAAcC,EALH,EAKGA,iBAAkBC,EALrB,EAKqBA,aA4BpCC,EAAW,2BACVnB,GADU,IAEbC,QAASD,EAAWC,QAAQmB,QAAO,SAAAC,GAAC,OAClCZ,GAAUY,EAAEjC,KAAKkC,SAASb,QAI9B,OACE,kBAAC,IAAD,iBACM9F,EADN,CAEEsB,SAAO,EACPiB,MAAM,yBACNqE,UAAW,CACTC,WAAY,GACZC,YAAa,GACbC,aAAc,IAEhBxF,MAAO,IACPG,OAAQ,CACN,kBAAC,IAAD,CAAQC,IAAI,aAAaC,MAAM,UAAUI,QAASd,GAAlD,gBAGA,kBAAC,IAAD,CACES,IAAI,SACJC,MAAM,UACNI,QA/BS,WACXsE,EAAmB,GACrBnF,EAAK6F,YAAKT,KA8BNzD,UAAU,QAJZ,iBAQF5B,SAAUA,EACVO,UAAU,EACVD,cAAc,IACd,2BACE,uBAAKyF,KAAM,IAAX,sBAEE,kBAAC,IAAD,CACEnE,UAAU,aACVoE,YAAY,yBACZC,SAjDW,SAACC,GACpBrB,EAAWqB,EAAIC,OAAO5G,YAoDpB,uBAAKqC,UAAU,QACb,uBAAKmE,KAAM,IACT,kBAAC,IAAD,CACEK,OAAO,OACPC,KAAK,QACLlC,WAAYmB,EACZX,QAASA,EACT2B,YAAY,EACZC,QApE0B,CAClC,CACElF,MAAO,YACPmF,UAAW,SAkELrB,aAAcA,O,sBE7J1B,SAASsB,GAAT,GAKyB,IAJvBxG,EAIsB,EAJtBA,KACAD,EAGsB,EAHtBA,SACAG,EAEsB,EAFtBA,KACGrB,EACmB,4CACP,IAAK4H,UAAbC,EADe,oBAYhBC,EAAezE,GAAUlC,GAE/B,OACE,kBAAC,EAAD,iBACMnB,EADN,CAEEuC,MACE,oCACE,oCAEE,yBAAKO,UAAU,qCAAf,+CAMN5B,SAAUA,EACVC,KAzBa,WACf0G,EAAKE,iBAAiBC,MAAK,SAAAC,GACrB9G,GACFA,EAAK8G,GAEP/G,UAqBA,uCACMgH,aAAqB,EAAG,IAD9B,CAEEC,WAAW,OACXN,KAAMA,EACNO,cAAe/G,IACf,kBAACiC,GAAD,CAAQjC,KAAMA,EAAMkC,SAAUuE,IAC9B,sBAAM5E,KAAN,CAAW0B,MAAM,gBAAgBC,KAAK,gBACpC,kBAAC,IAAD,OAEF,sBAAM3B,KAAN,CAAW0B,MAAM,UAAUC,KAAK,WAC9B,kBAAC,IAAD,OAEF,sBAAM3B,KAAN,CACE0B,MAAM,iBACNC,KAAK,eACLwD,cAAc,WACd,kBAAC,IAAD,S,gCC3FJC,GAAoBpG,kBAAO,MAAaqG,MAAM,CAClDC,IAAK,IADgB,sFAAGtG,CAAH,wiBAUH,SAAAC,GAAC,OAAIA,EAAEC,MAAMqG,WAKL,SAAAtG,GAAC,OAAIA,EAAEC,MAAMqG,WAc5BC,GAAyBtJ,IAAMuJ,YAG1C,WAAeC,GAAf,IAAM5I,EAAN,2BACA,kBAACsI,GAAD,eAAmBK,WAAYC,GAAS5I,EAAW6I,UAGxCC,GAAgB1J,IAAMuJ,YACjC,WAAeC,GAAf,IAAM5I,EAAN,2BACE,kBAACsI,GAAD,eAAmBK,WAAYC,GAAS5I,EAAW+I,UAI1CC,GAAe5J,IAAMuJ,YAChC,WAAeC,GAAf,IAAM5I,EAAN,2BACE,kBAACsI,GAAD,eAAmBK,WAAYC,GAAS5I,EAAWiJ,UAIvDP,GAAuBQ,YAAc,yBAErCJ,GAAcI,YAAc,gBAE5BF,GAAaE,YAAc,eAIZZ,UCDf,SAASa,GAAT,GAA2E,IAA/ChI,EAA8C,EAA9CA,KAAMD,EAAwC,EAAxCA,SAAUG,EAA8B,EAA9BA,KAASrB,EAAqB,4CACzD,IAAK4H,UAAbC,EADiE,oBAYlEC,EAAezE,GAAUlC,GAE/B,OACE,kBAAC,EAAD,iBACMnB,EADN,CAEEuC,MACE,oCACE,sCAEE,yBAAKO,UAAU,qCAAf,sCAMN3B,KAxBa,WACf0G,EAAKE,iBAAiBC,MAAK,SAAAC,GACrB9G,GACFA,EAAK8G,GAEP/G,QAoBAA,SAAUA,IACV,uCACMgH,aAAqB,EAAG,IAD9B,CAEEC,WAAW,OACXN,KAAMA,EACNO,cAAe/G,IACf,kBAACiC,GAAD,CAAQjC,KAAMA,EAAMkC,SAAUuE,IAC9B,sBAAM5E,KAAN,CAAW0B,MAAM,gBAAgBC,KAAK,gBACpC,kBAAC,IAAD,OAEF,sBAAM3B,KAAN,CAAW0B,MAAM,UAAUC,KAAK,WAC9B,kBAAC,IAAD,OAEF,sBAAM3B,KAAN,CAAW0B,MAAM,gBAAgBC,KAAK,OACpC,kBAAC,GAAD,OAEF,sBAAM3B,KAAN,CAAW0B,MAAM,gBAAgBC,KAAK,OACpC,kBAAC,GAAD,OAEF,sBAAM3B,KAAN,CAAW0B,MAAM,QAAQC,KAAK,SAC5B,kBAAC,IAAD,S,+DClGK,SAASuE,GAAT,GAOY,IANzBvB,EAMwB,EANxBA,KACApH,EAKwB,EALxBA,MACA0G,EAIwB,EAJxBA,SACAkC,EAGwB,EAHxBA,SACAC,EAEwB,EAFxBA,YACGtJ,EACqB,oEAClBuJ,EAAgB,SAACC,GACjBrC,GACFA,EAASqC,IAYb,OACE,kBAAC,KAAD,iBACMxJ,EADN,CAEEsH,OAAO,KACPE,YAAY,EACZD,KAAK,QACLlC,WAAY5E,EACZgJ,cAfc,WAChBF,EAAcF,EAASxB,KAerB6B,iBAZiB,SAACxJ,GACpBqJ,EAAcD,EAAY,CAAEpJ,KAAI2H,WAY9B8B,UAAU,K,IChCRxG,GAAYC,EAAQ,IAApBD,QAaKyG,GAAwB,CACnCtF,QAAS,CACP,CACEpE,GAAI2J,cACJC,UAAM/I,EACNqD,UAAU,EACV2F,UAAU,GAEZ,CACE7J,GAAI2J,cACJC,UAAM/I,EACNqD,UAAU,EACV2F,UAAU,GAEZ,CACE7J,GAAI2J,cACJC,UAAM/I,EACNqD,UAAU,EACV2F,UAAU,KAST,SAASC,GAAT,GAMI,IALT9I,EAKQ,EALRA,SACAC,EAIQ,EAJRA,KACAE,EAGQ,EAHRA,KAGQ,IAFR4I,uBAEQ,SADLjK,EACK,8DACO,IAAK4H,UAAbC,EADC,oBAYFC,EAAezE,GAAUlC,GAgCzBsG,EAA8B,CAClC,CACElF,MAAO,2BACP2H,OAAQ,SAACC,EAAGC,EAAGnG,GAAP,OACN,kBAACX,GAAD,CACEE,QAAM,EACNnC,KAAMA,EACNoC,MAAO,CAAC,UAAWQ,EAAK,QACxBV,SAAUuE,MAIhB,CACEvF,MAAO,2BACP8H,MAAO,SACPH,OAAQ,SAACC,EAAGC,EAAGnG,GAAP,OACN,sBAAMf,KAAN,CACEyB,SAAO,EACPE,KAAM,CAAC,UAAWZ,EAAK,YACvBoE,cAAc,WACd,kBAAC,IAAD,UApB4B,oBAwB7B4B,EACD,CACE,CACE1H,MAAO,iCACP8H,MAAO,SACPH,OAAQ,SAACC,EAAGC,EAAGnG,GAAP,OACN,sBAAMf,KAAN,CACEyB,SAAO,EACPE,KAAM,CAAC,UAAWZ,EAAK,YACvBoE,cAAc,WACd,kBAAC,IAAD,UAKR,KAON,OAJAjJ,IAAMkL,WAAU,WACdzC,EAAK0C,eAAelJ,KACnB,CAACmJ,KAAKC,UAAUpJ,KAGjB,kBAAC,EAAD,iBACMrB,EADN,CAEEuC,MACE,oCACE,sDACA,yBAAKO,UAAU,8BAAf,wHAMJ5B,SAAUA,EACVC,KApGa,WACf0G,EAAKE,iBAAiBC,MAAK,SAAAC,GACrB9G,GACFA,EAAK8G,GAEP/G,UAgGA,uCACMgH,aAAqB,EAAG,IAD9B,CAEEC,WAAW,OACXN,KAAMA,EACNO,cAAe/G,IACf,kBAACiC,GAAD,CAAQjC,KAAMA,EAAMkC,SAAUuE,IAC9B,sBAAM5E,KAAN,CAAW0B,MAAM,UAAUC,KAAK,WAC9B,kBAAC,IAAD,OAEF,sBAAM3B,KAAN,CAAW0B,MAAM,YACjB,sBAAM1B,KAAN,CAAWyB,SAAO,EAACE,KAAK,WACtB,kBAACuE,GAAD,CACE3B,QAASA,EACTI,KAAMA,EACNwB,SAxGW,SAACxB,GACpB,OAAO1E,GACLuH,aAAOC,KAAI,CACT,CACEzK,GAAI2J,cACJC,UAAM/I,EACN8C,gBAAY9C,EACZqD,UAAU,EACV2F,UAAU,KAGdvF,YAAO,GAAI,CAAC,YACZoG,aAAQ,EAAG,iBAAXA,GAXKzH,CAYL0E,IA4FMyB,YAzFc,SAAC,GAMlB,IALLpJ,EAKI,EALJA,GACA2H,EAII,EAJJA,KAKA,OAAO1E,GACLsD,cAAO,SAACC,GAAD,OAAYA,EAAExG,KAAOA,KAC5BsE,YAAO,GAAI,CAAC,YACZoG,aAAQ,EAAG,iBAAXA,GAHKzH,CAIL0E,S,ICpFE1E,GAAYC,EAAQ,IAApBD,QA6DO0H,OA3Df,SAA0C7K,GAA6B,IAC7DqB,EAA6DrB,EAA7DqB,KAAMyJ,EAAuD9K,EAAvD8K,iBAAkBC,EAAqC/K,EAArC+K,uBAAwBC,EAAahL,EAAbgL,SADY,EAGtCC,aAA0B,CACtD5J,OACA2J,WACApB,kBAHMsB,EAH4D,EAG5DA,QAASC,EAHmD,EAGnDA,SAMjB,OACE,oCACGL,GACC,kBAACd,GAAD,CACE3I,KAAM6J,EACNhK,SAAU6J,EACV5J,KAAMgK,EACN5I,MACE,oCACE,wDACA,yBAAKO,UAAU,8BAAf,oHAQR,kBAAC,EAAD,CACEP,MAAO2I,EAAQpB,MAAQ,GACvBlD,UAAW,CAAEE,YAAa,KAC1B,sBAAM5D,KAAN,CAAWyB,SAAO,EAACE,KAAM,CAAC,OAAQxD,EAAKnB,KACrC,kBAAC,IAAD,KACGiD,GACCiI,aAAW,SAAC1E,EAAWzC,GAAZ,OACT,kBAAC,IAAD,CACEtC,IAAK+E,EAAExG,GACP4C,UAAWE,IAAG,aAAc,CAAE,OAAQiB,EAAM,IAC5CoH,gBAAgB,EAChB5K,MAAK,UAAKwD,IACTyC,EAAEoD,MAAQ,2BACVpD,EAAEqD,UACD,kBAAC,IAAD,CACEuB,UAAU,EACV/D,KAAK,QACLL,YAAY,2BACZpE,UAAU,oBAKlB0B,YAAO,GAAI,CAAC,YAlBbrB,CAmBC+H,Q,UCrDN/H,GAAYC,EAAQ,IAApBD,QAoDOoI,OAlDf,SAAwCvL,GAA6B,IAC3DqB,EAA6DrB,EAA7DqB,KAAMyJ,EAAuD9K,EAAvD8K,iBAAkBC,EAAqC/K,EAArC+K,uBAAwBC,EAAahL,EAAbgL,SADU,EAGpCC,aAA0B,CACtD5J,OACA2J,WACApB,kBAHMsB,EAH0D,EAG1DA,QAASC,EAHiD,EAGjDA,SAMjB,OACE,oCACGL,GACC,kBAACd,GAAD,CACE3I,KAAM6J,EACNhK,SAAU6J,EACV5J,KAAMgK,IAGV,kBAAC,EAAD,CACE5I,MAAO2I,EAAQpB,MAAQ,GACvBlD,UAAW,CAAEE,YAAa,KAC1B,sBAAM5D,KAAN,CAAWyB,SAAO,EAACE,KAAM,CAAC,OAAQxD,EAAKnB,KACrC,kBAAC,KAAMsL,MAAP,KACGrI,GACCiI,aAAW,SAAC1E,EAAWzC,GAAZ,OACT,kBAAC,KAAD,CACEtC,IAAK+E,EAAExG,GACP4C,UAAWE,IAAG,QAAS,CAAE,OAAQiB,EAAM,IACvCoH,gBAAgB,EAChB5K,MAAK,UAAKwD,IACTyC,EAAEoD,MAAQ,2BACVpD,EAAEqD,UACD,kBAAC,IAAD,CACExC,KAAK,QACL+D,UAAU,EACVpE,YAAY,2BACZpE,UAAU,oBAKlB0B,YAAO,GAAI,CAAC,YAlBbrB,CAmBC+H,Q,UCfd,SAASO,GAAT,GAKyB,IAJvBtK,EAIsB,EAJtBA,KACAD,EAGsB,EAHtBA,SACAG,EAEsB,EAFtBA,KACGrB,EACmB,4CACP,IAAK4H,UAAbC,EADe,oBAYhBC,EAAezE,GAAUlC,GAE/B,OACE,kBAAC,EAAD,iBACMnB,EADN,CAEEuC,MACE,oCACE,oCAEE,yBAAKO,UAAU,qCAAf,qCAMN5B,SAAUA,EACVC,KAzBa,WACf0G,EAAKE,iBAAiBC,MAAK,SAAAC,GACrB9G,GACFA,EAAK8G,GAEP/G,UAqBA,uCACMgH,aAAqB,EAAG,IAD9B,CAEEC,WAAW,OACXN,KAAMA,EACNO,cAAe/G,IACf,kBAACiC,GAAD,CAAQjC,KAAMA,EAAMkC,SAAUuE,IAC9B,sBAAM5E,KAAN,CAAW0B,MAAM,gBAAgBC,KAAK,gBACpC,kBAAC,KAAD,CAAY6G,YAAU,EAACC,OAAO,OAAO7I,UAAU,YAEjD,sBAAMI,KAAN,CAAW0B,MAAM,UAAUC,KAAK,WAC9B,kBAAC,IAAD,SC9CV,SAAS+G,GAAT,GAKyB,IAJvBzK,EAIsB,EAJtBA,KACAD,EAGsB,EAHtBA,SACAG,EAEsB,EAFtBA,KACGrB,EACmB,4CACP,IAAK4H,UAAbC,EADe,oBAYhBC,EAAezE,GAAUlC,GAE/B,OACE,kBAAC,EAAD,iBACMnB,EADN,CAEEuC,MACE,oCACE,oCAEE,yBAAKO,UAAU,qCAAf,qCAMN5B,SAAUA,EACVC,KAzBa,WACf0G,EAAKE,iBAAiBC,MAAK,SAAAC,GACrB9G,GACFA,EAAK8G,GAEP/G,UAqBA,uCACMgH,aAAqB,EAAG,IAD9B,CAEEC,WAAW,OACXN,KAAMA,EACNO,cAAe/G,IACf,kBAACiC,GAAD,CAAQjC,KAAMA,EAAMkC,SAAUuE,IAC9B,sBAAM5E,KAAN,CAAW0B,MAAM,gBAAgBC,KAAK,gBACpC,kBAAC,KAAD,CAAY6G,YAAU,EAACG,OAAO,QAAQ/I,UAAU,YAElD,sBAAMI,KAAN,CAAW0B,MAAM,UAAUC,KAAK,WAC9B,kBAAC,IAAD,S,cC3EF1B,GAAYC,EAAQ,IAApBD,QCyBR,SAASwE,GAAT,GAKyB,IAJvBxG,EAIsB,EAJtBA,KACAD,EAGsB,EAHtBA,SACAG,EAEsB,EAFtBA,KACGrB,EACmB,4CACP,IAAK4H,UAAbC,EADe,oBAYtB,OACE,kBAAC,EAAD,iBACM7H,EADN,CAEEuC,MACE,oCACE,8CAEE,yBAAKO,UAAU,qCAAf,iCAMN5B,SAAUA,EACVC,KAvBa,WACf0G,EAAKE,iBAAiBC,MAAK,SAAAC,GACrB9G,GACFA,EAAK8G,GAEP/G,UAmBA,uCACMgH,aAAqB,EAAG,IAD9B,CAEEC,WAAW,OACXN,KAAMA,EACNO,cAAe/G,IACf,sBAAM6B,KAAN,CAAW0B,MAAM,OAAOC,KAAK,QAC3B,kBAAC,IAAD,OAEF,sBAAM3B,KAAN,CAAW0B,MAAM,UAAUC,KAAK,WAC9B,kBAAC,IAAD,SC5EV,SAASiH,KACP,OAAO,8BAGT,IAAIC,GAAK,6RAWIC,GAAI,sDAEkBD,GAFlB,8CAGUA,GAHV,kDAIFA,GAJE,wBAImBA,GAJnB,oGAK+CA,GAL/C,iCAMAA,GANA,0ZAWUA,GAXV,0DAWiEA,GAXjE,oCAYKA,GAZL,qDAYuDA,GAZvD,2FAiBJE,GAAYH,GCXjB3I,GAAYC,EAAQ,IAApBD,QAUF+I,GAAsB,CAC1B,CACEhM,GAAI2J,cACJsC,KAAM,wBACNC,cAAe,SACfvH,KAAM,iBACNrB,QAAQ,EACR6I,KAAMC,IACNL,UF9BW,SAA+BjM,GAA6B,IACjEqB,EAA6DrB,EAA7DqB,KAAMyJ,EAAuD9K,EAAvD8K,iBAAkBC,EAAqC/K,EAArC+K,uBAAwBC,EAAahL,EAAbgL,SADgB,EAG1CC,aAA0B,CACtD5J,OACA2J,aAFME,EAHgE,EAGhEA,QAASC,EAHuD,EAGvDA,SAKjB,OACE,oCACGL,GACC,kBAAC,GAAD,CACEzJ,KAAM6J,EACNhK,SAAU6J,EACV5J,KAAMgK,IAGV,kBAAC,EAAD,CACEzI,cAAY,EACZC,aAAa,EACbJ,MAAO2I,EAAQpB,KACfrH,OAAQsI,OEWd,CACE7K,GAAI2J,cACJsC,KAAM,oBACNtH,KAAM,OACNrB,QAAQ,EACR6I,KAAME,IACNN,UZjCW,SAAkCjM,GAA6B,IACpE8K,EAA6D9K,EAA7D8K,iBAAkBC,EAA2C/K,EAA3C+K,uBAAwBC,EAAmBhL,EAAnBgL,SAAU3J,EAASrB,EAATqB,KADe,EAG7C4J,aAA0B,CAAE5J,OAAM2J,aAAxDE,EAHmE,EAGnEA,QAASC,EAH0D,EAG1DA,SAEXqB,EAAa,CACjBlB,UAAU,EACVxI,UAAW,QACXoE,YAAagE,EAAQuB,QACrB7C,aAAcsB,EAAQtB,cAGxB,OACE,oCACGkB,GACC,kBAACnD,GAAD,CACEtG,KAAM6J,EACNhK,SAAU6J,EACV5J,KAAMgK,IAGV,kBAAC,EAAD,CAAiB5I,MAAO2I,EAAQpB,MAAQ,IACtC,sBAAM5G,KAAN,CAAWyB,SAAO,EAACE,KAAM,CAAC,OAAQxD,EAAKnB,KACpCgL,EAAQwB,aACP,kBAAC,IAAD,iBAAcF,EAAd,CAA0BG,SAAU,CAAEC,QAAS,MAE/C,kBAAC,IAAUJ,QYSrB,CACEtM,GAAI2J,cACJsC,KAAM,sBACNtH,KAAM,SACNrB,QAAQ,EACR6I,KAAMQ,IACNZ,UVrCW,SAAoCjM,GAA6B,IACtE8K,EAA6D9K,EAA7D8K,iBAAkBC,EAA2C/K,EAA3C+K,uBAAwB1J,EAAmBrB,EAAnBqB,KAAM2J,EAAahL,EAAbgL,SADqB,EAG/CC,aAA0B,CAAE5J,OAAM2J,aAAxDE,EAHqE,EAGrEA,QAASC,EAH4D,EAG5DA,SAEjB,OACE,oCACGL,GACC,kBAAC3B,GAAD,CACE9H,KAAM6J,EACNhK,SAAU6J,EACV5J,KAAMgK,IAGV,kBAAC,EAAD,CAAiB5I,MAAO2I,EAAQpB,MAAQ,IACtC,sBAAM5G,KAAN,CAAWyB,SAAO,EAACE,KAAM,CAAC,OAAQxD,EAAKnB,KACrC,kBAAC,GAAD,CACE2B,MAAO,CAAEN,MAAO,cAChBuB,UAAU,8BACV8G,aAAcsB,EAAQtB,aACtBpB,IAAK0C,EAAQ1C,IACbsE,IAAK5B,EAAQ4B,IACbC,UAAW,SAACtM,GACV,OAAKyK,EAAQ8B,MAGTvM,GAASsD,YAAGkJ,OAAQxM,IAAUA,EAAMkG,SAASuE,EAAQ8B,OACjD,GAAN,OAAUE,YAAoBzM,GAA9B,YAAwCyK,EAAQ8B,OAE5C,GAAN,OAAUvM,EAAV,YAAmByK,EAAQ8B,OALlBvM,GAOX0M,OAAQ,SAAC1M,GAAD,OACNyK,EAAQ8B,MACJvM,EAAM2M,QAAQ,IAAIC,OAAJ,YAAgBnC,EAAQ8B,MAAxB,OAAoC,IAClDvM,GAENyG,YAAagE,EAAQuB,eUG/B,CACEvM,GAAI2J,cACJsC,KAAM,iBACNtH,KAAM,iBACNrB,QAAQ,EACR6I,KAAMiB,IACNrB,UH9CW,SAA+BjM,GAA6B,IACjEqB,EAA6DrB,EAA7DqB,KAAMyJ,EAAuD9K,EAAvD8K,iBAAkBC,EAAqC/K,EAArC+K,uBAAwBC,EAAahL,EAAbgL,SADgB,EAG1CC,aAA0B,CACtD5J,OACA2J,WACApB,kBAHMsB,EAHgE,EAGhEA,QAASC,EAHuD,EAGvDA,SAMjB,OACE,oCACGL,GACC,kBAACd,GAAD,CACE3I,KAAM6J,EACNhK,SAAU6J,EACV5J,KAAMgK,EACNlB,iBAAiB,EACjB1H,MACE,oCACE,+CACA,yBAAKO,UAAU,8BAAf,+DAOR,kBAAC,EAAD,CAAiBP,MAAO2I,EAAQpB,MAAQ,IACtC,sBAAM5G,KAAN,CAAWyB,SAAO,EAACE,KAAM,CAAC,OAAQxD,EAAKnB,KACrC,kBAAC,KAAD,CACEwL,YAAU,EACVJ,UAAU,EACVxI,UAAU,QACVoE,YAAagE,EAAQuB,SACpBtJ,GACCoK,aAAI,SAAC7G,GAAD,OACF,kBAAC,KAAO8G,OAAR,CAAe7L,IAAK+E,EAAExG,GAAIO,MAAOiG,EAAEoD,MAAQ,IACxCpD,EAAEoD,MAAQ,OAGftF,YAAO,GAAI,CAAC,YANbrB,CAOC+H,SGOZ,CACEhL,GAAI2J,cACJsC,KAAM,4BACNtH,KAAM,0BACNrB,QAAQ,EACR6I,KAAMoB,IACNxB,UAAWyB,IAEb,CACExN,GAAI2J,cACJsC,KAAM,0BACNtH,KAAM,wBACNrB,QAAQ,EACR6I,KAAMsB,IACN1B,UAAW2B,IAEb,CACE1N,GAAI2J,cACJsC,KAAM,eACNtH,KAAM,OACNrB,QAAQ,EACR6I,KAAMwB,IACN5B,ULxEW,SAA6BjM,GAA6B,IAC/D8K,EAA6D9K,EAA7D8K,iBAAkBC,EAA2C/K,EAA3C+K,uBAAwB1J,EAAmBrB,EAAnBqB,KAAM2J,EAAahL,EAAbgL,SADc,EAGxCC,aAA0B,CAAE5J,OAAM2J,aAAxDE,EAH8D,EAG9DA,QAASC,EAHqD,EAGrDA,SAEjB,OACE,oCACGL,GACC,kBAACW,GAAD,CACEpK,KAAM6J,EACNhK,SAAU6J,EACV5J,KAAMgK,IAGV,kBAAC,EAAD,CAAiB5I,MAAO2I,EAAQpB,MAAQ,IACtC,sBAAM5G,KAAN,CAAWyB,SAAO,EAACE,KAAM,CAAC,OAAQxD,EAAKnB,KACrC,kBAAC,KAAD,CACEoL,UAAU,EACVxI,UAAU,QACVoE,YAAagE,EAAQuB,QACrB7C,aAAcsB,EAAQtB,oBKsDhC,CACE1J,GAAI2J,cACJsC,KAAM,eACNtH,KAAM,OACNrB,QAAQ,EACR6I,KAAMyB,IACN7B,UJlFW,SAA4BjM,GAA6B,IAC9D8K,EAA6D9K,EAA7D8K,iBAAkBC,EAA2C/K,EAA3C+K,uBAAwB1J,EAAmBrB,EAAnBqB,KAAM2J,EAAahL,EAAbgL,SADa,EAGvCC,aAA0B,CAAE5J,OAAM2J,aAAxDE,EAH6D,EAG7DA,QAASC,EAHoD,EAGpDA,SAEjB,OACE,oCACGL,GACC,kBAACc,GAAD,CACEvK,KAAM6J,EACNhK,SAAU6J,EACV5J,KAAMgK,IAGV,kBAAC,EAAD,CAAiB5I,MAAO2I,EAAQpB,MAAQ,IACtC,sBAAM5G,KAAN,CAAWyB,SAAO,EAACE,KAAM,CAAC,OAAQxD,EAAKnB,KACrC,kBAAC,KAAD,CACEoL,UAAU,EACVxI,UAAU,QACVoE,YAAagE,EAAQuB,QACrB7C,aAAcsB,EAAQtB,oBIgEhC,CACE1J,GAAI2J,cACJsC,KAAM,gBACNtH,KAAM,QACNrB,QAAQ,EACR6I,KAAMtJ,IACNiJ,KAAM+B,GACN9B,UAAW8B,KAIFC,GAAsB7K,GACjC8K,IACAV,aAAI,SAAC7G,GAAD,sBAAoCA,EAAEyF,KAAOzF,MAFhBvD,CAGjC+I,IAEWgC,GAAoB/K,GAC/BoK,aAAI,SAAC7G,GAAD,mBAAC,eACAA,GADD,IAEFwE,QAAS/H,GACP8K,IACAV,aAAI,SAAC5L,GAAD,sBACDA,EAAMwB,GACLoK,aAAI,SAACY,GAAD,mBAAC,eACAA,GADD,IAEFlC,UAAW/H,YAAK,CAACiK,EAAEhC,KAAM,aAAdjI,CAA4B8J,SAEzCxJ,YAAO,GAAI,CAAC,UAAW7C,IALlBwB,CAMLuD,OAEJ0H,IACA5J,YAAO,GAAI,CAAC,YAZLrB,CAaPuD,QAEJlC,YAAO,GAAI,KAGA6J,GAAelL,GAC1BoK,aAAI,SAAC7G,GAAD,mBAAC,eACAA,GADD,IAEFwE,QAAS/H,GACPoK,aAAI,SAACY,GAAD,mBAAC,eACAA,GADD,IAEFlC,UAAW/H,YAAK,CAACiK,EAAEhC,KAAM,aAAdjI,CAA4B8J,SAEzCxJ,YAAO,GAAI,CAAC,YALLrB,CAMPuD,QAEJlC,YAAO,GAAI,KAGE0H,Q,ySCzIfoC,IAAMC,OAAOC,KACbF,IAAMC,OAAOE,KACbH,IAAMC,OAAOG,KACbJ,IAAMC,OAAOI,KACbL,IAAMC,OAAOK,KACbN,IAAMC,OAAOM,KACbP,IAAMC,OAAOO,KACbR,IAAMC,OAAOQ,KACbT,IAAMC,OAAOS,KACbV,IAAMC,OAAOU,KAEbX,IAAMY,OAAO,S,qICdN,SAASC,IAGd,IAAC,IAFD/N,EAEA,uDAF4B,KAE5B,mBADGgO,EACH,iCADGA,EACH,kBACA,IAAKA,EAAW5J,OACd,OAAOpE,EAFT,IAKO6K,EAAsBmD,EAL7B,GAKqBjK,EAAQiK,EAL7B,SAOA,OAAIhQ,iBAAqB6M,GAErB,gBAACA,EAAUE,KAASF,EAAUjM,MAC3BmP,EAAI,WAAJ,GAAK/N,GAAL,mBAAkB+D,MAKlB,gBAAC8G,EAAD,KAAYkD,EAAI,WAAJ,GAAK/N,GAAL,mBAAkB+D,M,gGCKjCkK,EAAuBnN,UAAOoN,IAAV,uFAAGpN,CAAH,yDAO1B,SAASqN,GAAT,GAImB,IAHjBC,EAGgB,EAHhBA,MACAC,EAEgB,EAFhBA,eACAC,EACgB,EADhBA,mBAEA,OACE,kBAACL,EAAD,CAAsBM,KAAK,SACzB,uBAAG7M,UAAU,WAAb,yBACA,yBAAKA,UAAU,WAAf,OAA0B0M,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAOI,SACjC,yBAAK9M,UAAU,WAAW2M,GAC1B,kBAAC,IAAD,CAAQzN,QAAS0N,GAAjB,cAKN,IAGMG,GAAe,CAAEL,MAAO,KAAMM,KAAM,MACrBC,G,4MAInBC,MAA4BH,G,EAE5BH,mBAAqB,WAAkB,IAAC,IAAD,uBAAdO,EAAc,yBAAdA,EAAc,gBACrC,eAAKjQ,OAAMkQ,eAAX,iCAAwBD,IACxB,EAAKE,SAASN,K,gEAGEL,EAAcM,GAAkB,IAAD,IAC/C,aAAAM,KAAKpQ,OAAMqQ,eAAX,gBAAqBb,EAArB,OAA4BM,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAML,gBAClCW,KAAKD,SAAS,CAAEX,QAAOM,W,yCAGNQ,GAAgC,IAGmB,IAF5Dd,EAAUY,KAAKJ,MAAfR,MACAe,EAAcH,KAAKpQ,MAAnBuQ,UACM,OAAVf,GAvBa,eAACgB,EAAD,uDAAwB,GAAIC,EAA5B,uDAAmD,GAAnD,OACnBD,EAAEhL,SAAWiL,EAAEjL,QAAUgL,EAAEE,MAAK,SAACrP,EAAMsP,GAAP,OAAkBC,OAAO7M,GAAG1C,EAAMoP,EAAEE,OAsB5CE,CAAaP,EAAUC,UAAWA,KACtD,aAAAH,KAAKpQ,OAAM8Q,yBAAX,gBAA+BR,EAAUC,UAAWA,GACpDH,KAAKD,SAASN,O,+BAIR,IAAD,EACiBO,KAAKJ,MAArBR,EADD,EACCA,MAAOM,EADR,EACQA,KADR,EAMHM,KAAKpQ,MAHP+Q,EAHK,EAGLA,eAHK,IAILC,yBAJK,MAIezB,GAJf,EAKL0B,EALK,EAKLA,SAGF,GAAc,OAAVzB,EAAgB,CAClB,IAAMxP,EAAQ,CACZyP,eAAc,OAAEK,QAAF,IAAEA,OAAF,EAAEA,EAAML,eACtBD,QACAE,mBAAoBU,KAAKV,oBAE3B,GAAItQ,IAAM8R,eAAeD,GACvB,OAAOA,EACF,GAA8B,oBAAnBF,EAChB,OAAOA,EAAe/Q,GACjB,GAAIgR,EACT,OAAO,kBAACA,EAAsBhR,GAE9B,MAAM,IAAIgB,MACR,8FAKN,OAAOoP,KAAKpQ,MAAMoB,a,GApDqBhC,IAAM6M,W,uBCjDlC,SAASkF,GAAT,GAA2C,IAAD,IAArBhF,YAAqB,MAAd,IAAc,EACvD,OACE,kBAACiF,GAAD,KACE,yBAAKtO,UAAU,aACb,yBAAKA,UAAU,uBACb,yBACEA,UAAU,oBACVjB,MAAO,CACLwP,gBAAgB,QAAD,OAAUC,KAASC,UAAnB,mBAAuCpF,EAAvC,cAIrB,yBAAKrJ,UAAU,sBACb,mCACA,yBAAKA,UAAU,mBAAf,4EACA,yBAAKA,UAAU,sBACb,kBAAC,KAAD,CAAM0O,GAAG,KACP,kBAAC,IAAD,CAAQ5P,MAAM,WAAd,2BASd,IAAMwP,GAAmBlP,UAAOoN,IAAV,kFAAGpN,CAAH,qpB,8EC1BhBuP,GAAUvP,UAAOoN,IAAV,mEAAGpN,CAAH,yCAYE9C,WAAMsS,MAAK,YAIX,IAHb5O,EAGY,EAHZA,UACAjB,EAEY,EAFZA,MAEY,sCACZ,OACE,kBAAC4P,GAAD,CAAS3O,UAAU,aACjB,wBAAK6O,QAAQ,SAAS7O,UAAWA,GAC/B,wBAAKA,UAAU,mBACb,kBAAC8O,GAAA,EAAD,CAA0BC,MAAI,EAAChQ,MAAOA,U,iKCMjCiQ,GAlCU5P,kBAAO,MAAV,+EAAGA,CAAH,kT,qBCMhB6P,GAAc7P,kBAAO8P,MAAV,wFAAG9P,CAAH,yCAMF,SAAS+P,GAAT,GAIJ,IAHT9Q,EAGQ,EAHRA,KACAD,EAEQ,EAFRA,SACGlB,EACK,oCACR,OACE,kBAAC+R,GAAD,iBACM/R,EADN,CAEEsB,SAAO,EACP4Q,UAAQ,EACRC,UAAU,EACVvL,UAAW,CAAEC,WAAY,IACzBtF,MAAO,IACPG,OAAQ,CACN,yBACEC,IAAI,sBACJmB,UAAU,yCACV,kBAAC,IAAD,CACEnB,IAAI,SACJC,MAAM,UACNC,MAAO,CAAEC,SAAU,IAAKC,YAAa,IACrCC,QAASb,GAJX,gBAOA,kBAAC,IAAD,CACEQ,IAAI,aACJC,MAAM,UACNC,MAAO,CAAEC,SAAU,KACnBE,QAASd,GAJX,oBASJ,yBAAK4B,UAAU,eACb,kBAACsP,GAAA,EAAD,CACEtP,UAAU,OACVjB,MAAO,CAAEwQ,SAAU,GAAIzQ,MAAO,aAEhC,yBAAKkB,UAAU,0CAAf,kE,2CChCO,SAASwP,KAAa,IAAD,EAClBC,eAATC,EAD2B,oBAE5BlN,EAAUmN,eAFkB,EAIA7R,cAA1BpB,EAJ0B,EAI1BA,OAAQD,EAJkB,EAIlBA,KAAME,EAJY,EAIZA,QAJY,EAMAL,IAAMa,SAASyS,IAAQC,SAASC,UANhC,mBAM3BC,EAN2B,KAMlBC,EANkB,OAQqBpP,eARrB,mBAQ3BqP,EAR2B,KAQPC,EARO,KAU5BC,EAAW,SAACL,GAAD,OAAuB,WAClCA,IACFE,EAAeF,GACfF,IAAQQ,KAAKN,MAIXO,EAAmB,SAACC,GACxB,OAAOpQ,KAAG,CAAE,cAA2B,MAAZ6P,GAAmBO,EAAUzM,SAASkM,MAOnE,OACE,oCACGE,GACC,kBAACd,GAAD,CACE9Q,KAAM3B,EACN0B,SAAU8R,IAGd,kBAACK,GAAD,KACE,yBAAKvQ,UAAU,qCACb,yBAAKA,UAAU,qBACb,kBAACwQ,GAAD,CAAMtR,QAASiR,EAAS,MACtB,yBACEM,IAAG,UAAKjC,KAASC,UAAd,0BACHiC,IAAI,WACJ1Q,UAAU,oBAGK,cAAlBvD,EAAKY,UACJ,wBACEsT,KAAK,aACL3Q,UAAU,sBACVjB,MAAO,CAAE6R,aAAc,OAAQC,WAAY,SACxB,SAAlBpU,EAAKY,UACJ,kBAACyT,GAAD,CACEjS,IAAKkS,KACL7R,QAASiR,EAASY,MAClB/Q,UAAWqQ,EAAiBU,OAC5B,yBAAK/Q,UAAU,+BACb,kBAACgR,GAAA,EAAD,MADF,6BAMJ,kBAACC,GAAD,CACEpS,IAAKkS,KACL/Q,UAAWqQ,EAAiBU,MAC5BG,YAAa,EAAE,GAAI,GACnBC,eAAe,UACf1R,MACE,yBAAKO,UAAU,+BACb,kBAACgR,GAAA,EAAD,MADF,2BAGE,kBAACI,GAAA,EAAD,CAAmBpR,UAAU,gBAGd,QAAlBvD,EAAKY,UACJ,uBAAM+C,KAAN,CACEvB,IAAKkS,KACL7R,QAASiR,EAASY,MAClB/Q,UAAWqQ,EAAiBU,OAC5B,yBAAK/Q,UAAU,6BACb,kBAACgR,GAAA,EAAD,MADF,yCAMe,SAAlBvU,EAAKY,UACJ,uBAAM+C,KAAN,CACEvB,IAAKkS,KACL7R,QAASiR,EAASY,MAClB/Q,UAAWqQ,EAAiBU,OAC5B,yBAAK/Q,UAAU,6BACb,kBAACgR,GAAA,EAAD,MADF,yCAMe,SAAlBvU,EAAKY,UACJ,uBAAM+C,KAAN,CACEvB,IAAKkS,KACL7R,QAASiR,EAASY,MAClB/Q,UAAWqQ,EACTU,OAEF,yBAAK/Q,UAAU,6BACb,kBAACgR,GAAA,EAAD,MADF,6BAMJ,uBAAM5Q,KAAN,CACEvB,IAAKkS,KACL7R,QAASiR,EAASY,MAClB/Q,UAAWqQ,EAAiBU,OAC5B,yBAAK/Q,UAAU,6BACb,kBAACgR,GAAA,EAAD,MADF,mCAKF,uBAAM5Q,KAAN,CACEvB,IAAKkS,KACL7R,QAASiR,EAASY,MAClB/Q,UAAWqQ,EAAiBU,MAC5BhS,MAAO,CAAEsS,QAAS,SAClB,yBAAKrR,UAAU,6BACb,kBAACgR,GAAA,EAAD,MADF,sDAMJ,kBAACF,GAAD,CACEjS,IAAKkS,KACL7R,QAASiR,EAASY,MAClB/Q,UAAWqQ,EAAiBU,OAC5B,yBAAK/Q,UAAU,+BACb,kBAACgR,GAAA,EAAD,MADF,6BAKF,kBAACC,GAAD,CACEpS,IAAKkS,KACL/Q,UAAWqQ,EAAiBU,MAC5BG,YAAa,EAAE,GAAI,GACnBC,eAAe,UACf1R,MACE,yBAAKO,UAAU,+BACb,kBAACgR,GAAA,EAAD,MADF,2BAGE,kBAACI,GAAA,EAAD,CAAmBpR,UAAU,gBAGjC,uBAAMI,KAAN,CACEvB,IAAKkS,KACL7R,QAASiR,EAASY,MAClB/Q,UAAWqQ,EAAiBU,OAC5B,yBAAK/Q,UAAU,6BACb,kBAACgR,GAAA,EAAD,MADF,+CAKF,uBAAM5Q,KAAN,CACEvB,IAAKkS,KACL7R,QAASiR,EAASY,MAClB/Q,UAAWqQ,EAAiBU,OAC5B,yBAAK/Q,UAAU,6BACb,kBAACgR,GAAA,EAAD,MADF,8BAMJ,kBAACF,GAAD,CACEjS,IAAI,UACJK,QAASiR,EAAS,KAClBnQ,UAAWqQ,EAAiB,YAC5B,yBAAKrQ,UAAU,+BACb,kBAACgR,GAAA,EAAD,MADF,uDAQR,yBAAKhR,UAAU,qBACb,wBACEwI,UAAU,EACVpE,YAAY,2BACZpE,UAAU,aACVjB,MAAO,CAAEN,MAAO,IAAKQ,aAAc,IACnCqS,YAAY,EACZxK,aAAcrK,EAAKY,SACnBgH,SArKa,SAAC1G,GACxBhB,GAAQ,SAAA4U,GAAI,oCAAUA,GAAV,IAAgBlU,SAAUM,SAqK5B,uBAAQ+M,OAAR,CAAe/M,MAAOL,KAAUC,KAAhC,kCACA,uBAAQmN,OAAR,CAAe/M,MAAOL,KAAUkU,MAAhC,kCACA,uBAAQ9G,OAAR,CAAe/M,MAAOL,KAAUmU,WAAhC,6BAIF,yBAAKzR,UAAU,mBAAf,0BAIA,kBAAC,IAAD,CACEuJ,KACE,kBAACmI,GAAA,EAAD,CACE1R,UAAU,sBACVjB,MAAO,CAAEE,YAAa,KAG1BC,QAASgR,EACTlQ,UAAU,mEACVjB,MAAO,CAAEC,SAAU,GAAI2S,YAAa,YAI1C,yBAAK3R,UAAU,uCACb,kBAAC,GAAD,CACE4R,UAAU,IACV7S,MAAO,CAAE8S,UAAW,GAAIR,QAAS,OAAQS,WAAY,WACrD,kBAAC,GAAW1R,KAAZ,CAAiBlB,QAASiR,EAAS,MACjC,kBAAC4B,GAAA,EAAD,CAAc/R,UAAU,WAAWjB,MAAO,CAAEiT,KAAM,MAEnDtC,EAAMjF,KAAI,SAAC7G,EAAGzC,GAAJ,OACT,kBAAC,GAAWf,KAAZ,CACEvB,IAAG,qBAAgBsC,GACnBjC,QAASiR,EAASvM,EAAEqO,OACnBrO,EAAE7B,UAIRS,KAOX,IAAM+N,GAASnR,kBAAO,IAAOmR,QAAjB,qEAAGnR,CAAH,iJAIM,SAAAC,GAAC,iDAAwCA,EAAEC,MAAMqG,QAAhD,QACN,SAAAtG,GAAC,OAAIA,EAAEC,MAAMqG,WACC,SAAAtG,GAAC,OAAIA,EAAEC,MAAM4S,aAQlCpB,GAAW1R,kBAAO,KAAKgB,MAAf,uEAAGhB,CAAH,0QAoBR6R,GAAU7R,kBAAO,KAAK6R,SAAf,sEAAG7R,CAAH,gOAkBPoR,GAAOpR,UAAOoN,IAAV,mEAAGpN,CAAH,MC/SK9C,OAAM6V,MAAK,kBAAM,mCCE1BC,GAAQ9V,IAAM6V,MAAK,kBAAM,mCAEzBE,GAAiB/V,IAAM6V,MAAK,kBAAM,mCAEzB,SAASG,KACtB,OACE,kBAAC,IAAMC,SAAP,CAAgBpE,SAAU,kBAAC,GAAD,OACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqE,OAAK,EAACpR,KAAK,IAAIqR,UAAWL,KACjC,kBAAC,IAAD,CAAOhR,KAAK,SAASqR,UAAWL,KAChC,kBAAC,IAAD,CAAOhR,KAAK,mBAAmBqR,UAAWJ,KAC1C,kBAAC,IAAD,CAAOI,UAAWL,OCiDXM,OApDf,WAAgB,IACNlW,EAAoBsB,cAApBtB,gBAEFuU,EAAS4B,eAETC,EAAkBtW,IAAMkB,aAAY,SAACe,GACzC,IAAM6C,EAAI,UAAM7C,EAAK6C,MAAX,OAAkB7C,EAAKsU,MAAL,WAAiBtU,EAAKsU,OAAU,IAE5D,OACE,kBAAC,IAAD,CACEL,OAAK,EACL3T,IAAKN,EAAKnB,GACVgE,KAAMA,EACNqR,UACElU,EAAKkU,UAAYlU,EAAKkU,UAAY,kBAAM,gCAAMlU,EAAKkB,MAAX,UAI7C,IAEGqT,EAAmBxW,IAAMkB,aAC7B,SAAC4E,GACC,OAAOA,EAAKqI,KAAI,SAAClM,GACf,MAAO,CACLqU,EAAgBrU,GAChBA,EAAKD,UAAYwU,EAAYvU,EAAKD,UAClCC,EAAKwU,MAAQD,EAAYvU,EAAKwU,YAIpC,CAACH,IAGH,OACE,kBAAC,GAAD,MACIpW,GAAmB,kBAAC,GAAD,MACpBA,GACC,2BACE,kBAACgT,GAAD,MACA,kBAAC,IAAM+C,SAAP,CAAgBpE,SAAU,kBAAC,GAAD,OACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqE,OAAK,EAACpR,KAAK,IAAIqR,UAAWO,KAChCF,EAAY/B,GACb,kBAAC,IAAD,CAAO0B,UAAWpE,U,UC3CZ4E,QACW,cAA7BC,OAAOrD,SAASsD,UAEe,UAA7BD,OAAOrD,SAASsD,UAEhBD,OAAOrD,SAASsD,SAASC,MACvB,2D,QCGNC,cAEA,IAOMC,GXCC,WAA2C,IAAD,uBAAnBhH,EAAmB,yBAAnBA,EAAmB,gBAC/C,OAAO,YAAyD,IAAhChO,EAA+B,EAA/BA,SAC9B,OAAO+N,EAAI,WAAJ,GAAK/N,GAAL,OAAkBgO,KWHTiH,CAClB,kBAAC,IAAD,CAAYC,gBARU,SAAC,GAA6B,EAA3BC,OASzB,kBAAC,gBAAD,CAAenU,MAAOA,OACtB,uBAAgB8M,OAAQsH,MACxB,kBAAC,IAAD,MACA,kBAAC,IAAD,CACE/V,MAAO,CAAEgW,UAAU,EAAMC,QAASC,IAASC,mBAAmB,KAEhE,kBAACC,EAAA,EAAD,CAAaC,QAASC,MACtB,kBAAC,IAAD,CAAQrE,QAASA,OAQnBsE,IAAS9M,OACP,kBAACkM,GAAD,KACE,kBAAC,GAAD,OAEFa,SAASC,eAAe,SDwFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrP,MAAK,SAAAsP,GACJA,EAAaC,gBAEdC,OAAM,SAAAhI,GACLiI,QAAQjI,MAAMA,EAAMI,a,6ZE9HpBzM,EAAYC,EAAQ,IAApBD,QAGKuU,EAA6B,WAGxC,MAAsB,SAFL9W,cAATrB,KAECY,SACA,CACLwX,uBAAwB,yBACxBC,MAAO,QACPC,WAAY,aACZC,MAAO,QACPC,WAAY,cAIT,CACLC,sBAAuB,wBACvBC,qBAAsB,uBACtBC,WAAY,aACZC,SAAU,WACVC,WAAY,eAIVC,EAA2CnK,YAC/CoK,IAAMC,IAAI,4BAaNC,EAA0BC,YAAK,CACnC9W,IAAK,0BACL+W,QAASL,IAeLM,GAZ+BC,YAGnC,CACAjX,IAAK,sBACL4W,IAAK,SAAArY,GAAE,OAAI,YAAc,IAAXqY,EAAU,EAAVA,IACZ,OAAOpV,EAAQ0V,aAAK,SAACnS,GAAD,MAAuB,UAAGA,EAAExG,MAAL,UAAiBA,MAArDiD,CACL+K,YAAkBqK,EAAIC,SAKDC,YAAK,CAC9B9W,IAAK,qBACL+W,SAAS,KAaJ,SAASI,IACd,OAAOC,YAAeP,GAIjB,SAASQ,EAAT,GAMH,IALF9Y,EAKC,EALDA,GACAgF,EAIC,EAJDA,KAIC,EAC4B6T,YAAeP,GAArCS,EADN,oBAGKC,EAxD2B,WACjC,IAAMC,EAA0BzB,IAEhC,OAAOvU,EACL8K,IACAV,aAAI,SAAC5L,GAAD,sBAAqBA,EAAM,OAC/BsG,IAHK9E,CAILgW,GAiD8BC,GAH/B,EAK2Cha,IAAMa,SAAyB,CACzEiL,QAASgO,IANV,mBAKMG,EALN,KAKsBC,EALtB,KAaDla,IAAMkL,WAAU,YACd,OAAIpF,QAAJ,IAAIA,OAAJ,EAAIA,EAAMhF,KACRoZ,EAAkBnW,EAAQ6D,IAAMkH,IAAmB9H,IAAjCjD,CAAqC+B,MAExD,CAACA,IAEJ9F,IAAMkL,WAAU,WACVpK,GACFoZ,EACEnW,EAAQ0V,aAAK,SAACnS,GAAD,MAAuB,UAAGA,EAAExG,MAAL,UAAiBA,MAArDiD,CACE+K,YAAkB+K,OAIvB,CAAC/Y,IAEJ,IAAIqZ,EAAe/U,YAAO0U,EAAyB,CAAC,WAAjC1U,CACjB6U,GAGFja,IAAMkL,WAAU,WACdkP,EAAeD,KACd,CAAC/O,KAAKC,UAAU8O,KAnClB,MAqCqCna,IAAMa,SAAmBsZ,GArC9D,mBAqCME,EArCN,KAqCmBD,EArCnB,KAuCGE,EAA+C,GAEnD,MAAO,CACLL,iBACAI,cACAD,iBACAG,kBAAmBxW,EACjB8K,IACAV,aAAI,SAAC5L,GAAD,sBAAqBA,EAAM6D,YAAOiU,EAAY9X,QAClDyM,IAHiBjL,CAIjBsW,GACFG,cAAezW,EAAQqC,IAAQ4I,IAAhBjL,CAAsBsW,GACrClU,MAAOpC,EACLqC,IACAiB,aAAO,SAACC,GAAD,MAAgC,0BAAXA,EAAEyF,QAC9B0N,IACA5R,IAJK9E,CAKLsW,GACFC,YAAavW,EACXoK,aAAI,SAAC7G,GAAD,OAAsBgT,EAAYhT,EAAExG,IAAMwG,KAC9CmT,IACA5R,IAHW9E,CAIXsW,IAKC,SAAS7W,IAAoB,IAAD,EACCmW,YAAeJ,GADhB,mBAC1B9V,EAD0B,KACfiX,EADe,KAGjC,MAAO,CAACjX,EAAW,kBAAMiX,GAAa,SAAAzF,GAAI,OAAKA,OAI1C,SAAS0F,IAAgD,IAAzB/J,EAAwB,0DAC3B+I,YAAeJ,GADY,mBACtD9V,EADsD,KAC3CiX,EAD2C,KAW7D,OARA1a,IAAMkL,WAAU,WAGd,OAFAwP,EAAa9J,GAEN,WACL8J,GAAa,MAEd,CAAC9J,IAEG,CAACnN,EAAW,kBAAMiX,GAAa,SAAAzF,GAAI,OAAKA,OAI1C,SAAS2F,IACd,IAAMC,EA9GiB,WACvB,IAAMd,EAA0BzB,IAEhC,OAAOe,YAAa,CAClB9W,IAAK,gBACL+W,QAASvV,EAAQ6D,IAAMiB,IAAd9E,CAAsBgW,KAyGXe,GACtB,OAAOnB,YAAekB,K,0JCzLlBE,EAAgB,IAAS3O,MAEzB4O,EAAiBlY,kBAAO,KAAV,+EAAGA,CAAH,ocAEI,SAAAC,GAAC,OAAIA,EAAEC,MAAMqG,WACjB,SAAAtG,GAAC,OAAIA,EAAEC,MAAMqG,WAMb,SAAAtG,GAAC,OAAIA,EAAEC,MAAMqG,WAUT,SAAAtG,GAAC,OAAIA,EAAEC,MAAMiY,aAW/BC,EAA8Clb,IAAMuJ,YAGxD,WAAeC,GAAf,IAAM5I,EAAN,2BAAuB,kBAACoa,EAAD,eAAgBzR,WAAYC,GAAS5I,OAE9Dsa,EAAkBpR,YAAc,WAIjBoR,O,0JC1CTvI,EAAc7P,kBAAO,KAAV,yEAAGA,CAAH,6KAcIqY,E,uKAOjB,OAAO,kBAACxI,EAAgB3B,KAAKpQ,MAAQoQ,KAAKpQ,MAAMoB,c,GAPRhC,IAAM6M,WAA7BsO,EACZC,QAAU,IAAMA,QADJD,EAEZ/K,MAAQ,IAAMA,MAFF+K,EAGZE,QAAU,IAAMA,QAHJF,EAIZzK,KAAO,IAAMA,M,sEClBhB4K,EAAiBxY,kBAAO,KAAV,+EAAGA,CAAH,yuBAFC,OASD,SAAAC,GAAC,OAAIA,EAAEC,MAAMqG,UATZ,qCA2CNiS,O,iCC9Cf,qBAGMhI,EAAUiI,YAAkB,CAAEC,SAAUtJ,IAASuJ,cAExCnI,O,wHCAToI,EAAoB5Y,kBAAO,KAAV,2EAAGA,CAAH,gnCAUD,SAAAC,GAAC,OAAIA,EAAEC,MAAMiY,aASpB,SAAAlY,GAAC,OAAIA,EAAEC,MAAMqG,WAkEtBsS,E,uKAMF,OAAO,kBAACD,EAAiB1K,KAAKpQ,MAAQoQ,KAAKpQ,MAAMoB,c,GANdhC,IAAM6M,WAAvC8O,EACUvN,OAAS,IAAOA,OAD1BuN,EAGU7R,YAAc,SAOf6R,O,iCCpGf,oKAQaC,EAAkBvC,YAAuB,CACpD9W,IAAK,kBACL+W,QAAS,KAGJ,SAASnG,IAEd,OADcwG,YAAeiC,GAIxB,SAASC,IAA6C,IAA/BzI,EAA8B,uDAAJ,GAChD0I,EAASC,YAAkBH,GAMjC,OAJA5b,IAAMkL,WAAU,WACd4Q,EAAO1I,KACN,IAEI0I,EAGF,IAAME,EAAqB3C,YAAsB,CACtD9W,IAAK,qBACL+W,QAAS,OAOJ,SAAS2C,EAAiBC,GAC/B,IAAMJ,EAASC,YAAkBC,GAEjChc,IAAMkL,WAAU,WAGd,OAFA4Q,EAAOI,GAEA,WACLJ,EAAO,SAER,CAACI,IAGC,SAAS7I,IAEd,OADc8I,YAAeH,K,iCClD/B,2D,0QCWW,CAAEI,UAAW,GAAIC,aAAc,KAP7BC,EAAoB,SAC/BpW,EACAtF,GAF+B,oBAI/BsF,QACE,qBACExC,UAAU,6BAETwC,GAGL+G,KAAM,KACN9K,MAAO,IACPoa,OAAQ,eACRC,WAAY,eACZ1J,UAAU,EAIV2J,gBAAiB,KACjBC,cAAe,CACbhZ,UAAW,mBACXjB,MAAO,CAAEC,SAAU,GAAIC,YAAa,KAEtCga,kBAAmB,CACjBjZ,UAAW,qCACXjB,MAAO,CAAEC,SAAU,MAElB9B,IAyBQwa,EAAU,SAAC,GAKD,IAJrBrZ,EAIoB,EAJpBA,KACAD,EAGoB,EAHpBA,SAGoB,IAFpBoE,eAEoB,MAFV,uFAEU,EADjBtF,EACiB,6CACpB,IAAMwa,QAAN,uCACKkB,EAAkBpW,IAClBtF,GAFL,IAGEmB,KAAM,WACAA,GACFA,KAGJD,SARF,WASQA,GACFA,U,yWCzEF8a,EAAoB,SAACC,GAKzB,IAJA,IAAIC,GAAkB,EAClBC,GAAkB,EAClBC,GAAsB,EAEjBC,EAAI,EAAGA,EAAIJ,EAAOzW,OAAQ6W,IAAK,CACtC,IAAMC,EAAYL,EAAOI,GAGvBH,GACA,WAAWK,KAAKD,IAChBA,EAAUE,gBAAkBF,GAE5BL,EAASA,EAAOQ,MAAM,EAAGJ,GAAK,IAAMJ,EAAOQ,MAAMJ,GACjDH,GAAkB,EAClBE,EAAsBD,EACtBA,GAAkB,EAClBE,KAEAF,GACAC,GACA,WAAWG,KAAKD,IAChBA,EAAUI,gBAAkBJ,GAE5BL,EAASA,EAAOQ,MAAM,EAAGJ,EAAI,GAAK,IAAMJ,EAAOQ,MAAMJ,EAAI,GACzDD,EAAsBD,EACtBA,GAAkB,EAClBD,GAAkB,IAElBA,EACEI,EAAUI,gBAAkBJ,GAC5BA,EAAUE,gBAAkBF,EAC9BF,EAAsBD,EACtBA,EACEG,EAAUE,gBAAkBF,GAC5BA,EAAUI,gBAAkBJ,GAIlC,OAAOL,GAqDMU,EAlDG,SAChB5Q,GAEI,IADJzH,EACG,uDADiC,GAEpC,GAAuB,kBAAVyH,IAAsB/H,MAAM4Y,QAAQ7Q,GAC/C,MAAM,IAAI8Q,UAAU,gDAGtBvY,EAAUsM,OAAOkM,OACf,CACEC,YAAY,GAEdzY,GAGF,IAAM0Y,EAAc,SAACtW,GAAD,OAClBpC,EAAQyY,WAAarW,EAAEuW,OAAO,GAAGT,cAAgB9V,EAAE+V,MAAM,GAAK/V,GAWhE,GAAqB,KARnBqF,EADE/H,MAAM4Y,QAAQ7Q,GACRA,EACLwB,KAAI,SAAA7G,GAAC,OAAIA,EAAEwW,UACXzW,QAAO,SAAAC,GAAC,OAAIA,EAAElB,UACd2X,KAAK,KAEApR,EAAMmR,QAGN1X,OACR,MAAO,GAGT,GAAqB,IAAjBuG,EAAMvG,OACR,OAAOlB,EAAQyY,WAAahR,EAAMyQ,cAAgBzQ,EAAM2Q,cAG1D,IAAMU,EAAerR,IAAUA,EAAM2Q,cAYrC,OAVIU,IACFrR,EAAQiQ,EAAkBjQ,IASrBiR,EANPjR,EAAQA,EACLqB,QAAQ,YAAa,IACrBsP,cACAtP,QAAQ,mBAAmB,SAAC1N,EAAG2d,GAAJ,OAAWA,EAAGb,iBACzCpP,QAAQ,cAAc,SAAAkQ,GAAC,OAAIA,EAAEd,mB,EChERpZ,EAAQ,IAA1BD,E,EAAAA,QAASoa,E,EAAAA,KAOV,SAAS1R,EAAO2R,GAAmD,IAAtCC,EAAqC,uDAAJ,GAC7DC,EAAQ,cACRC,EAAO,eAAQF,GAEfG,EAAOJ,EAAIpQ,QAAQsQ,GAAO,SAAAvT,GAG9B,KAF4B,MAATA,EAAE,IAGnB,OAAOA,EAGT,IAAM0T,EAAW1T,EAAEsS,MAAM,GAAI,GACvBqB,EAAgBH,EAAQE,GAI9B,OAFAF,EAAQE,QAAY9c,EAEb+c,KAGT,MAAO,CAAEC,QAASH,EAAMH,OAAQE,GAG3B,SAASK,IAIb,IAHDC,EAGA,uDADI,GAEJ,OAAKA,EAIE9a,EACLga,YAAK,KACL5P,aAAI,SAAC5L,GAAD,OACFqC,MAAM4Y,QAAQqB,EAAatc,IAA3B,UAEOA,EAFP,YAEcsc,EAAatc,GACpB4L,KAAI,SAAC2Q,GAAD,gBAA6BC,mBAAmBD,OACpDf,KAAK,MAJZ,UAMOxb,EANP,YAMcwc,mBAAmBF,EAAatc,QAEhD8E,aACE,SAAC9E,GAAD,MACwB,KAAtBsc,EAAatc,IACS,OAAtBsc,EAAatc,IACgB,qBAAtBsc,EAAatc,MAExByM,IAjBKjL,CAkBL8a,GArBO,GA8HX,IAAMG,EAAgB,SAACjQ,GACrB,OAAOhL,EACLW,YAAOgB,IAAOqB,KAAU,eAACkY,EAAD,uDAAK,GAAL,OAAYA,EAAE1X,SAASwH,MAC/CvD,YAAQ,EAAG,MAAXA,CAAkB,gBAClB1G,YAAK,CAAC,cAIJoa,EAAyB,SAAzBA,EACJC,GAEI,IADJC,EACG,uDADiB,GAEpB,OAAKD,GAA4B,kBAAXA,EAIlBva,MAAM4Y,QAAQ2B,GACTA,EAAOhR,KAAI,SAACkR,EAAG9N,GAAJ,OAChB2N,EAAkBG,EAAD,sBAAQD,GAAR,CAAiBvR,OAAO0D,SAItCC,OAAOxC,KAAKmQ,GAAQG,QAAO,SAACC,EAAUhd,GAC3C,IAAIlB,EAAQ8d,EAAO5c,GAEbid,EAAa,sBAAOJ,GAAP,CAAgB7c,IAGnC,OADAgd,EAAIE,EAAUld,IAAQ2c,EAAkB7d,EAAOme,GACxCD,IACN,IAhBMJ,GAmBJ,SAAS5H,EACd6G,GAca,IAAD,yDADK,GAXfsB,EAYU,EAZVA,KACAC,EAWU,EAXVA,QAWU,KAVVC,IAUU,EATVC,SASU,EARVC,kBAQU,aAPVC,iBAOU,SALV5e,GAKU,EANV6e,eAMU,EALV7e,aACA8P,EAIU,EAJVA,QAEG/L,GAEO,EAHV+a,SAGU,gIACNtB,EAAUR,EAAK,CACnB,CAAC5W,YAAS,QAASjC,YAAO8Y,IAC1B,CAAC8B,IAAG5a,YAAO4M,IAASiO,WAAa/B,KAFnBD,CAGbC,GAEH,OAAOgC,MAAMzB,EAAD,YAAC,eACRzZ,GADO,IAEVwa,KAAMA,aAAgBW,SAAWX,EAAOtU,KAAKC,UAAUqU,GACvDC,QAASW,YAAM,eAEPR,EACA,CACES,cAAc,UAAD,OAAYrH,IAAMC,IAAI,gBAIrC,IAENwG,EAAO,eACEA,GACL,CAAE,eAAgB,mBAAoBa,OAAQ,wBAGnD5X,KAlBI,uCAkBC,WAAO6X,GAAP,eAAArP,EAAA,yDAgBoB,MAApBqP,EAASC,OAhBT,yCAiBKC,QAAQC,OAAOH,EAASI,aAjB7B,WAoBA7B,EAAc,mBAAdA,CAAkCyB,GApBlC,gCAqBaA,EAASK,OArBtB,UAqBFC,EArBE,OAuBGN,EAASO,GAvBZ,yCAwBOL,QAAQC,OAAOG,IAxBtB,OA2BFA,EAAS7B,EAAkB6B,GA3BzB,WA8BA/B,EAAc,QAAdA,CAAuByB,GA9BvB,kCA+BaA,EAASQ,OA/BtB,QA+BFF,EA/BE,mBAkCArb,YAAMqb,GAlCN,kCAmCaN,EAAS/V,OAnCtB,QAmCFqW,EAnCE,sBAsCA5f,GACFA,EAAY4f,GAvCV,kBA0CGA,GA1CH,4CAlBD,uDA8DJ3I,OAAM,SAAC8I,GASN,GAJIjQ,GACFA,EAAQiQ,GAGNnB,EACF,MAAM,IAAIne,MACRsf,EAAI1Q,SAAW7L,YAAGkJ,OAAQqT,GAAOA,EAAO,gBAI5C,OAAOA,KAIE3J,O,wHCzTT4J,EAAcre,kBAAO,KAAV,yEAAGA,CAAH,oSAEJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,YAYN,SAAAF,GAAC,OAAIA,EAAEC,MAAMqG,WAMX,SAAAtG,GAAC,OAAIA,EAAEC,MAAMqG,WAS7B+X,E,uKAMF,OAAO,kBAACD,EAAgBnQ,KAAKpQ,W,GANJZ,IAAM6M,WAA7BuU,EACUhV,MAAQ,IAAMA,MADxBgV,EAGUtX,YAAc,QAOfsX,O,+FCnCA,SAAS9c,IAA2C,IAAD,yDAAJ,GAAzB+c,EAA6B,EAA7BA,cAA6B,EAClCrhB,IAAMa,UAAS,GADmB,mBACzDqB,EADyD,KAChDof,EADgD,KAG1DC,EAAqB,SAACvZ,GAC1BsZ,GAAW,SAAArM,GAAI,OAAKA,KAEhBoM,GACFA,KAIEG,EAAc,WAClBF,GAAW,IAGb,MAAO,CAACpf,EAASqf,EAAeC,K,iCCxBnB,KACbC,KAAM,OACNC,MAAO,QACPC,QAAS,Y,uNCELC,EAAaC,cAAH,0NASY,SAAA9e,GAAC,OAAIA,EAAEC,MAAMqG,WAInCyY,EAAchf,kBAAO,IAAWgf,aAArB,8EAAGhf,CAAH,8HAMK,SAAAC,GAAC,OAAIA,EAAEC,MAAMiY,aAIL,SAAAlY,GAAC,OAAIA,EAAEC,MAAMqG,WAKrC0Y,EAAwBjf,kBAAO,KAAV,mFAAGA,CAAH,iHAML,SAAAC,GAAC,OAAIA,EAAEC,MAAMiY,aAIpB,SAAAlY,GAAC,OAAIA,EAAEC,MAAMqG,UAGtBuY,GAIAI,EAAmBlf,kBAAO,KAAV,mFAAGA,CAAH,iHAMA,SAAAC,GAAC,OAAIA,EAAEC,MAAMiY,aAIpB,SAAAlY,GAAC,OAAIA,EAAEC,MAAMqG,UAGtBuY,GAIN,SAASK,EAAoBrhB,GAC3B,OAAO,kBAACmhB,EAAqBnhB,GAShBqhB,O,uEC3EHjhB,E,kBAAAA,K,YAAAA,E,UAAAA,E,uBAAAA,M,KAeG,IAJf,mC,sMCPQ+C,EAAYC,EAAQ,IAApBD,QAMFme,EAAe,SAACC,EAAkBze,GACtC,OAAOye,EAAM1I,MACX,SAAA2I,GAAC,OAAK1c,YAAM0c,EAAE1e,YAAc6D,YAAS7D,EAAT6D,CAAoB6a,EAAE1e,eAI/C,SAAS2e,EACdC,GAEC,IADD5e,EACA,uDAZwC,wCAapC6e,EAAOD,EAELH,EAAmB,GAGzB,IAFAA,EAAMrO,KAAKyO,GAEX,UAAOA,SAAP,aAAO,EAAMC,YAAY,CAAC,IAAD,EACvBL,EAAMM,QAAQF,EAAKC,YACnBD,EAAOA,EAAKC,WAGd,OACEN,EAAaC,EAAO,uDACpBD,EAAaC,EAAO,2BAKpBD,EAAaC,EAAOze,KACpBwe,EAAaC,EA9Bc,iBAgDxB,SAASO,EAAoBC,GAClC,IAGMC,EAdR,SAASC,EACPP,GAEqB,IADrB5e,EACoB,uDAzCS,eA0C7B,OAAI4e,EAAQQ,UAAUC,SAASrf,GACtB4e,EAEFA,EAAQU,eAAiBH,EAAYP,EAAQU,cAAetf,GAO/Cmf,CAHChL,SAASoL,iBAAiBN,EAAarb,EAAGqb,EAAaO,IAKtEC,EAAeP,GAAeA,EAAYQ,QAAQ7R,MAKxD,MAAO,CACLqR,cACAS,iBANuBT,EAAcU,OAAOV,EAAYQ,QAAQ7R,QAAU,EAO1EgS,eALqB7d,YAAMyd,I,4GAwBZ,CAAEK,QAAS,KAfvB,SAASC,IAAoD,IAArC7iB,EAAoC,uDAAJ,GAC7D,OAAO,SAACyZ,GAAD,OACLtW,EACEiI,aAAW,SAAC/J,EAAoB4C,GAArB,OACT,kBAAC,IAAD,iBACMjE,EADN,CAEE2B,IAAKN,EAAKnB,GACV4iB,UAAS,UAAKzhB,EAAKnB,IACnBmB,KAAMA,EACN0hB,WAAW,EACXC,QAAS3hB,EAAK2hB,UACb3hB,EAAKmC,OACJ,qBACEtD,GAAE,UAAKmB,EAAKnB,IACZ4C,UAAS,UAAKzB,EAAKnB,IAEnB+iB,wBAAyB,CAAEC,OAAQ7hB,EAAK2K,QAG1C,kBAAC3K,EAAK4K,UAAN,CACE/L,GAAImB,EAAKnB,GACT4C,UAAWzB,EAAKnB,GAChBmB,KAAMA,EACNsP,MAAO1M,QAKfO,YAAO,GAAI,IA1BbrB,CA2BEsW,M,iHCrFS,SAAS0J,EAAT,GAUD,IATZ1b,EASW,EATXA,QACA3E,EAQW,EARXA,UAQW,IAPXsgB,eAOW,MAPD,EAOC,EANX/d,EAMW,EANXA,WACA8B,EAKW,EALXA,SAKW,IAJXtB,eAIW,SAHXQ,EAGW,EAHXA,aAGW,IAFXmB,kBAEW,MAFE,GAEF,EADRxH,EACQ,+GAOPqjB,EAAkDC,YAIpD,CACEzQ,QAASuQ,EACTG,SAAU,GACVhe,MAAOF,EAAWE,MAClBie,iBAAiB,GAEnBhc,GAOF,OAJmB,IAAfA,IACF6b,GAAmB,GAInB,kBAAC,IAAD,eACE/b,OAAO,KACPjC,WAAYA,EAAWC,QACvBmC,QAASA,EACTD,WAAY6b,EACZlc,SA7BsB,SAAC,GAAkD,IAAhD0L,EAA+C,EAA/CA,QAAS0Q,EAAsC,EAAtCA,SAChCpc,GACFA,EAAS,CAAE0L,UAAS0Q,cA4BpBld,aAAcA,EACdR,QAASA,EACT/C,UAAWA,GACP9C,M,mUC5DGyjB,EAAkBhL,YAAK,CAClC9W,IAAK,kBACL+W,QAASxK,YAAkBoK,IAAMC,IAAI,oBAAsB,MAItD,SAASmL,IACd,OAAO3K,YAAe0K,G,YCChBtgB,EAAYC,EAAQ,IAApBD,QAEKwgB,EAAa,WAAO,IAAD,EACNvkB,IAAMa,SAAqB,CACjDqF,QAAS,GACTC,MAAO,EACPE,WAAY,IAJgB,mBACvBP,EADuB,KACjB0e,EADiB,OAOMF,IAPN,mBAOvBG,EAPuB,KAOXC,EAPW,KAiB9B,MAAO,CACL5e,OACA6e,QAVc,SAAC9b,GACf2b,EAAQ,CACNte,QAASue,EACTte,MAAOC,YAAOqe,GACdpe,WAAYC,KAAKC,MAAMH,YAAOqe,GAAc,IAAM,KAOpDhe,SAAS,EACTge,aACAC,kBAIG,SAASE,EAAc9jB,GAAa,IAAD,EACnBwjB,IAAdG,EADiC,sBAGhBzkB,IAAMa,WAHU,mBAGjCiF,EAHiC,KAG3B0e,EAH2B,KA+BxC,OA1BAxkB,IAAMkL,WAAU,WACd,IAAMlF,EAAQye,EAAWhL,MAAK,SAACnS,GAAD,OAAYA,EAAExG,KAAOA,KAC7C+jB,EAAYzf,YAAO,GAAI,CAAC,QAASY,GAEvCwe,EAAQ,2BACHxe,GADE,IAEL8F,QAAS/H,EACP8K,IACAV,aAAI,SAAC5L,GAAD,sBACDA,EAAMwB,EACLoK,aAAI,SAAC7G,GAAD,mBAAC,eACAA,GADD,IAEFwE,QAAQ,2BACHxE,EAAEwE,SADA,IAELzK,MAAO+D,iBAAOzD,EAAW,CAAC2F,EAAExG,IAAK+jB,UAGrCzf,YAAO,GAAI,CAAC,UAAW7C,IARlBwB,CASLiC,OAEJgJ,IACA5J,YAAO,GAAI,CAAC,YAfLrB,CAgBPiC,QAEH,CAAClF,IAEGgF,EAGF,IAAMgf,EAAkB,WAA4C,IAAD,yDAAP,GAAjC3jB,EAAwC,EAAxCA,YAAwC,EACpCmjB,IADoC,mBACjEG,EADiE,KACrDC,EADqD,KAElEK,EAAU,SAAClc,GACf,IAAI/H,EAAK2J,cACLua,EAAO,sBACNP,GADM,4BAGJ5b,GAHI,IAIP/H,KACAmkB,UAAWC,MACXC,aAAcD,MAASzY,OAAO,oBAC9B2Y,UAAWF,MACXG,aAAcH,MAASzY,OAAO,wBAIlCiY,EAAcM,GACdM,IAAMnO,IAAI,kBAAmB6N,GAEzB7jB,GACFA,EAAY,2BAAK0H,GAAN,IAAc/H,SAG7B,MAAO,EAAC,EAAOikB,IAGJQ,EAAkB,WAA4C,IAAD,yDAAP,GAAjCpkB,EAAwC,EAAxCA,YAAwC,EACpCmjB,IADoC,mBACjEG,EADiE,KACrDC,EADqD,KAGlEK,EAAU,SAAClc,GACf,IAAI0I,EAAQkT,EAAWe,WAAU,SAACle,GAAD,MAAY,UAAGA,EAAExG,MAAL,UAAiB+H,EAAO/H,OACjEkkB,EAAU7f,YACZoM,EADkB,YAAC,eAGd1I,GAHa,IAIhBuc,UAAWF,MACXG,aAAcH,MAASzY,OAAO,sBAEhCgY,GAEFC,EAAcM,GACdM,IAAMnO,IAAI,kBAAmB6N,GAEzB7jB,GACFA,KAGJ,MAAO,EAAC,EAAO4jB,K,kYC7Gb/gB,EAAQ,IATVyhB,E,EAAAA,QACAC,E,EAAAA,SACAvX,E,EAAAA,IACAwX,E,EAAAA,QACAC,E,EAAAA,OACA7hB,E,EAAAA,QACA8hB,E,EAAAA,IACOC,E,EAAPpgB,MACAZ,E,EAAAA,KAGK,SAASihB,EAAYC,GACrBA,IACHA,EAASpP,OAAOrD,SAASyS,QAG3B,IAAM3H,EAAS,IAAI4H,gBAAgBD,GAE/BjF,EAAuB,GAI3B,OAFA1C,EAAOoH,SAAQ,SAACpkB,EAAekB,GAAhB,OAAiCwe,EAAOxe,GAAOlB,KAEvD0f,EAGF,SAAStW,IACd,IAAIyb,EAAIC,KAAKC,MAOb,MALyB,qBAAhBC,aACoB,oBAApBA,YAAYD,MAEnBF,GAAKG,YAAYD,OAEZ,uCAAuCpY,QAAQ,SAAS,SAAAiR,GAC7D,IAAMjU,GAAKkb,EAAoB,GAAhB5f,KAAKggB,UAAiB,GAAK,EAE1C,OADAJ,EAAI5f,KAAKC,MAAM2f,EAAI,KACL,MAANjH,EAAYjU,EAAS,EAAJA,EAAW,GAAKub,SAAS,OAUxBb,EAASD,GAAhC,IACMzZ,EAAkB0Z,EAASvX,GAE3BzI,EAAQkgB,EAAOD,EAASG,GAExBU,EAAU,SAACC,GAAD,OACrB1iB,EAAQ8hB,EAAKngB,EAAOZ,EAAK2hB,KAkCpB,SAAS3Y,EAAoB4Y,GAClC,OAAKA,EAGEA,EAAI1Y,QAAQ,UAAW,IAFrB0Y,EAKJ,IAAM3P,EAAW,WACjB7E,IAASyU,UAAyC,MAA7B/P,OAAOrD,SAASC,WACxCoD,OAAOrD,SAASoC,KAAOzD,IAAS0U,SAK7B,SAASC,EAAT,GAMH,IALF/F,EAKC,EALDA,KACAgG,EAIC,EAJDA,SAKMC,EACJ,gCACAhI,mBAAmB3T,KAAKC,UAAUyV,EAAM,KAAM,IAC1CkG,EAAqBnP,SAASoP,cAAc,KAOlD,OANAD,EAAmBE,aAAa,OAAQH,GACxCC,EAAmBE,aAAa,WAAYJ,EAAW,SACvDjP,SAAS6H,KAAKyH,YAAYH,GAC1BA,EAAmBI,QACnBJ,EAAmB5lB,SAEZ0f,EAsBF,SAAeuG,EAAtB,kC,4CAAO,WAAiCC,GAAjC,SAAAlW,EAAA,+EACE,IAAIuP,SAAQ,SAAC4G,EAAS3G,GAC3B,IAAM4G,EAAa,IAAIC,WACvBD,EAAWE,iBAAiB,QAAQ,kBAAMH,EAAQC,EAAWzG,WAC7DyG,EAAWG,QAAU/G,EACrB4G,EAAWI,WAAWN,OALnB,4C,uMCxIDO,EAAmB/kB,kBAAO,KAAV,qEAAGA,CAAH,+6BAIA,SAAAC,GAAC,OAAIA,EAAEC,MAAMoF,cAEpB,SAAArF,GAAC,OAAIA,EAAEC,MAAMoF,cAIN,SAAArF,GAAC,OAAIA,EAAEC,MAAMoF,cAIpB,SAAArF,GAAC,OAAIA,EAAEC,MAAMoF,cAMN,SAAArF,GAAC,OAAIA,EAAEC,MAAMoF,cACf,SAAArF,GAAC,OAAIA,EAAEC,MAAMoF,cAaX,SAAArF,GAAC,OAAIA,EAAEC,MAAMoF,cACf,SAAArF,GAAC,OAAIA,EAAEC,MAAMoF,cAKlB,SAAArF,GAAC,OAAIA,EAAEC,MAAMoF,cAoBV,SAAArF,GAAC,OAAIA,EAAEC,MAAMqG,WAe/B,SAASye,EAAT,GAQc,IAAD,IAPXvd,gBAOW,aANXlC,eAMW,MAND,GAMC,EALXgC,EAKW,EALXA,cAKW,IAJX0d,sBAIW,MAJM,kBAAM,GAIZ,EAHXzd,EAGW,EAHXA,iBAGW,IAFX0d,iBAEW,MAFC,GAED,EADRpnB,EACQ,sGACLqnB,EAAWjoB,IAAMsB,SAAQ,WAC7B,IAAI4mB,GAAmB,EACvB,IAAK3d,EACH,OAAOlC,EAES,KAAd2f,IACFE,EAAUF,GASZ,MAAM,CACJ,CACE7kB,MACE,uBAASglB,UAAU,UAAUhlB,MAAM,gBACjC,kBAAC,IAAD,CACEO,UAAU,gBACVjB,MAAO,CAAEiT,KAAM,GACf9S,QAASslB,EAAU7d,OAAgB1I,KAIzCQ,MAAO,GACP2I,OAAQ,SAACxK,EAAQiL,EAAS1G,GAAlB,OACN,yBAAKnB,UAAU,eAAf,IAA+BmB,EAAM,MAb3C,mBAgBKwD,GAhBL,CAiBE,CACElG,MAAO,GACP2I,OAAQ,SAACxK,EAAQ0K,EAAQnG,GAAjB,OACN,uBAASsjB,UAAU,UAAUhlB,MAAM,gBACjC,kBAAC,IAAD,CACEP,QAASmlB,EAAe/c,IA5BTzI,EA4B8ByI,EAAElK,GA5Bb,WACtCwJ,GACFA,EAAiB/H,UA0B0CZ,KA5BvC,IAACY,QAkCxB,CAAC8F,EAASkC,IAEb,OACE,kBAACsd,EAAD,eACExf,QAAS4f,EACTnY,OAAQ,CACNsY,UACE,uBACEC,MAAO,IAAMC,uBACbC,YACE,8BACE,0BAAM7kB,UAAU,WAAhB,qHAQN9C,GACHA,EAAMoB,UAKb8lB,EAAehe,YAAc,QAC7Bge,EAAeU,OAAS,IAAMA,OAEfV,O,yICvIA,SAASjiB,EACtBtD,GASwB,IAAD,yDAFE,GALvBqD,EAOqB,EAPrBA,UACAzE,EAMqB,EANrBA,YACA8P,EAKqB,EALrBA,QAKqB,IAJrB4E,YAIqB,SAHlB4S,EAGkB,4DADvBC,EACuB,yCACG1oB,IAAMa,SAAS+E,GADlB,mBAChB+iB,EADgB,KACTC,EADS,OAGO5oB,IAAMa,UAAUgV,GAHvB,mBAGhBgT,EAHgB,KAGRC,EAHQ,KAKjBhK,EAAM9e,IAAM+oB,SAEZC,EAAMN,GAAU,SAACtK,GAAD,OAAc7G,YAAQ6G,EAAK,CAAE2B,WAAW,KAE1DkJ,EAAO1mB,EACX,GAAIoC,YAAGkJ,OAAQtL,GAAM,CAAC,IAAD,EACSkK,YAAOlK,EAAeomB,GAA1ChK,EADW,EACXA,QAASN,EADE,EACFA,OACjB4K,EAAI,UAAMtK,EAAN,YAAiBC,YAAcP,IAEhCwK,IACHI,EAAO,MAfc,MAkBGC,YAAQD,EAAMD,EAAP,YAAC,eAC7BP,GAD4B,IAE/BU,iBAAkB,EAClB3R,mBAAmB,EACnB4R,oBAAoB,EACpB/R,UAAU,EACVgS,UAAW,SAAAvjB,GACL3E,GACFA,EAAY2E,IAGhBmL,QAAS,SAAAb,GACHa,GACFA,EAAQb,OAbNtK,EAlBe,EAkBfA,KAASC,EAlBM,wBAoCjB4e,EAAU,WAAqC,IAApC/e,EAAmC,uDAAP,GAI3C,OAHAgjB,GAAS,SAAA3T,GAAI,kCAAUA,GAASrP,MAChCkjB,GAAY,GAELnI,QAAQ4G,QAAa,KAO9B,YAJa5lB,IAATmE,IACFgZ,EAAIrL,QAAU3N,GAGT,2BACFC,GADL,IAEEU,QAASV,EAAKujB,aACdxjB,KAAMgZ,EAAIrL,QACVkR,UACAkE,a,iCCxFW,SAASU,EAAe1c,GACrC,OACEA,EAAU/C,aACV+C,EAAUpH,OACY,kBAAdoH,GAA0BA,EAAUzG,OAAS,EACjDyG,EACA,WANR,mC,mOCoBM2c,EAAiB1mB,UAAOoN,IAAV,sFAAGpN,CAAH,sPAgBP2mB,GACJ,EADIA,EAEJ,EAGM,SAASC,EAAT,GAOJ,IANTC,EAMQ,EANRA,SACAtmB,EAKQ,EALRA,OACAD,EAIQ,EAJRA,SACAwmB,EAGQ,EAHRA,QAGQ,IAFRrf,gBAEQ,aADRrI,eACQ,SACF2nB,EAAc,SAACC,GAAD,OAAmB,WACrCF,EAAQE,KAGV,OACE,kBAACN,EAAD,CACE9lB,UAAWE,IAAG,eAAgB,CAC5B,WAAyB,IAAb+lB,EACZI,QAAS7nB,KAEX,uBAASiB,MAAM,4BACb,kBAAC6mB,EAAA,EAAD,CACEtmB,UAAU,sBACVd,QAASinB,EAAYJ,MAGzB,uBAAStmB,MAAM,4BACb,kBAAC8mB,EAAA,EAAD,CACEvmB,UAAU,sBACVd,QAASinB,EAAYJ,MAGxBlf,GACC,uBAASpH,MAAM,gBACb,kBAAC+mB,EAAA,EAAD,CAAcxmB,UAAU,sBAAsBd,QAASS,KAG3D,uBAASF,MAAM,gBACb,kBAACgnB,EAAA,EAAD,CAAgBzmB,UAAU,iBAAiBd,QAASQ,M,yECpExDgnB,EAAgB,CAClBC,cAAe,qDACfjmB,QAAQ,EACRkmB,SAAS,EACTC,iBAAkB,CAChBC,SAAS,GAAD,OAAKtY,IAASC,UAAd,0CACRsY,UAAU,GAAD,OAAKvY,IAASC,UAAd,4CAEXuY,iBAAkB,+CAClBC,mBAAmB,EACnBC,kBAAkB,EAClBC,kBAAmB,MACnBC,QAAS,wDACTC,QAAQ,GAAD,OAAK7Y,IAASC,UAAd,oCACP6Y,YAAY,EACZC,cACE,+KACFC,eAAgB,IAChBC,wBAAyB,GACzBC,0BAA0B,EAC1BC,eAAe,EACfC,cAAc,EACdC,eAAgB,OAChBC,eACE,qEACFC,SACE,kM,ICxBI1nB,EAAYC,EAAQ,IAApBD,QA4BF2nB,EAAiBC,qBACrBC,IAAUlK,MACV,CACEmK,UADF,SACYjrB,GACR,OAAO,2BACFA,GADL,IAEEkrB,UAAU,EACVC,cAAgBnrB,EAAciiB,YAAYjiB,EAAME,IAAIyQ,SAGxDya,QARF,SAQUprB,GACN,SAAUA,EAAM+iB,WAAc/iB,EAAMkrB,aAGxC,SAACG,EAASC,GAAV,MAAuB,CACrBC,kBAAmBF,EAAQG,aAC3BC,mBAAoBJ,EAAQK,cAC5BC,WAAYL,EAAQK,iBAIlBC,E,kDACJ,WAAY5rB,GAAe,IAAD,8BACxB,cAAMA,IAQR6rB,kBAAoB,WAAO,IACjBJ,EAAuB,EAAKzrB,MAA5ByrB,mBACJA,GACFA,EAAmBK,gBAZG,EAgB1B7C,YAAc,SAACC,GAAmB,IAAD,EACF,EAAKlpB,MAA1BE,EADuB,EACvBA,GAAI6rB,EADmB,EACnBA,aAERA,GAAgB7rB,GAClB6rB,EAAa7rB,EAAIgpB,IApBK,EAwB1B8C,aAAe,WACbxR,YAAQ,CACNlV,QAAS,uFACT/C,MAAO,0DACPpB,KAAM,WACF,EAAKnB,MAAcisB,cAAc,EAAKjsB,MAAM2Q,QAEhDzP,SANM,gBAzBgB,EAmC1B6J,uBAAyB,WACvB,EAAKoF,UAAS,SAAAkE,GAAI,MAAK,CAAEvJ,kBAAmBuJ,EAAKvJ,sBApCzB,EAuC1BohB,aAAe,WACb,EAAK/b,SAAS,CAAE4Y,SAAU,KAxCF,EA2C1BoD,YAAc,WACZ,EAAKhc,SAAS,CAAE4Y,UAAW,KAzC3B,EAAK/Y,MAAQ,CACX+Y,UAAW,EACXje,kBAAkB,GALI,E,qDA+ChB,IAAD,SAaHsF,KAXFpQ,MAFK,IAGHurB,yBAHG,MAGiB,SAACjQ,GAAD,OAAeA,GAHhC,MAIHmQ,0BAJG,MAIkB,SAACnQ,GAAD,OAAeA,GAJjC,EAKHwH,EALG,EAKHA,UACAnS,EANG,EAMHA,MACAoS,EAPG,EAOHA,UAPG,IAQHlhB,aARG,MAQK,GARL,MASHiB,iBATG,MASS,OATT,EAUHzB,EAVG,EAUHA,KAVG,EAaH+O,KADFJ,MAAS+Y,EAZJ,EAYIA,SAAUje,EAZd,EAYcA,iBAGfshB,EAASC,YAuCnB,SAAuBrsB,GAAqD,IAClE2rB,EAAiD3rB,EAAjD2rB,WAAY5C,EAAqC/oB,EAArC+oB,SAAUhG,EAA2B/iB,EAA3B+iB,UAD2C,EAChB/iB,EAAhBgjB,eADgC,MACtB,EADsB,EAGnEsJ,EAAuB,IAAbvD,EAEhB,OAAO,uCACDuD,EAAU,CAAEC,aAAc,GAAM,IAChCxJ,EACA,CAAEyJ,OAAO,cAAD,OAAgBzJ,EAAY,UAAY,gBAChD,CACE0J,aAAcH,EAAUlqB,IAAM4S,UAAY,gBALlD,IAOE0X,OAAQ,UACRC,SAAU,WACVxY,QAASwX,EAAa,OAAS,QAC/BiB,WAAsB,GAAV5J,IArDV6J,CAAc,2BAAKzc,KAAKpQ,OAAUoQ,KAAKJ,QACvCnO,GAGF,OAAO0pB,EACLE,EACE,yBACEvrB,GAAI4iB,EACJjhB,MAAOuqB,EACPtpB,UAAWE,IACT,cACA,CAAE,eAAgB+f,GAClBjgB,GAEFimB,SAAUA,EACV+D,YAAa1c,KAAK8b,aAClBa,WAAY3c,KAAK+b,YACjBa,aAAYrc,GACZ,kBAACmY,EAAD,CACExnB,QAASyhB,EACTgG,SAAUA,EACVpf,UAAWtI,EAAKmC,OAChBf,OAAQ2N,KAAKrF,uBACbvI,SAAU4N,KAAK4b,aACfhD,QAAS5Y,KAAK6Y,cAEf7pB,IAAM6tB,SAAS1f,IAAI6C,KAAKpQ,MAAMoB,UAAU,SAAA8rB,GAAK,OAC5C9tB,IAAM+tB,aAAaD,EAAc,CAC/BpiB,mBACAC,uBAAwB,EAAKA,mC,GA7FrB3L,IAAM6M,WAyHb9I,MAAQ2nB,GD/IR,SAAqBsC,GAAoB,IAChDC,EAD+C,4MAQnDrd,MAAQ,CACN8E,IAAK,EACLiU,UAAW,EACXuE,OAAQ,KACRC,kBAAkB,EAClBC,gBAAgB,GAbiC,EAqCnDC,WAAa,SAAAC,GACP,EAAKC,KAAKD,EAAQxtB,KACpB,EAAKM,OAAOktB,EAAQxtB,IAGtB,IAAM0tB,EAAUC,YAAMH,EAAQ7F,QAAU2B,GAExCW,QAAQ2D,KAAR,2BACKF,GADL,IAEEG,SAAS,IAAD,OAAML,EAAQxtB,IACtB8tB,aAAa,GAAD,OAAK1c,IAASC,UAAd,8BACZjM,QAASooB,EAAQ1hB,KACjBiiB,MAAO,SAAAX,GACLA,EAAOY,GAAG,QAAQ,SAAAC,GAAC,OAAI,EAAKC,aAAaD,MACzCb,EAAOY,GAAG,SAAS,SAAAC,GAAC,OAAI,EAAKE,cAAcF,MAEvCpqB,YAAGuqB,SAAUV,EAAQW,WACvBX,EAAQW,SAASjB,GAGfI,EAAQ1hB,MACVshB,EAAOY,GAAG,QAAQ,kBAAMZ,EAAOkB,WAAWd,EAAQ1hB,UAGtDyiB,uBAAwB,SAAAnB,GAClBA,GACF,EAAKnd,SAAS,CAAEmd,WAElBA,EAAOoB,YAAYC,WAjE0B,EAsEnDP,aAAe,SAAAD,GAAM,IAAD,EACc,EAAKnuB,MAA7B4uB,EADU,EACVA,cAAevtB,EADL,EACKA,KACnButB,GACFA,EAAc,2BAAKvtB,GAAN,IAAY2K,KAAMmiB,EAAE9mB,OAAOwnB,iBAzEO,EA8EnDR,cAAgB,aA9EmC,EAoFnDrsB,QAAU,WAGR,IAF2B,EAAKgO,MAAxBwd,eAEa,CACnB,IACM1Y,EADYmC,SAASC,eAAe,EAAKlX,MAAME,IAC/B4uB,UAAY,GAElC,EAAK3e,SAAS,CAAEqd,gBAAgB,EAAMzE,SAAU,EAAGjU,UA3FJ,EA+FnDia,OAAS,WAAO,IAAD,EACgC,EAAK/e,MAA1Cwd,EADK,EACLA,eAAgBD,EADX,EACWA,iBACpBC,IAAmBD,GACrB,EAAKpd,SAAS,CAAEqd,gBAAgB,EAAOzE,UAAW,KAlGH,EAsGnD4E,KAAO,SAAAztB,GACL,OAAOiqB,QAAQ5R,IAAIrY,IAvG8B,EA0GnDM,OAAS,SAAAN,GACPiqB,QAAQ3pB,OAAO,EAAKmtB,KAAKztB,GAAM,EAAKF,MAAME,MA3GO,kEAiB7CkQ,KAAKpQ,MAAMwD,QACb4M,KAAKqd,WAAWrd,KAAKpQ,MAAMqB,QAlBoB,yCAsBhCiP,EAAW0e,GAAY,IAAD,IAUmB,IATrD5e,KAAKpQ,MAAM2rB,YAAcrb,EAAUqb,YACtCvb,KAAKD,SAAS,CAAEqd,gBAAgB,IAE7Bpd,KAAKpQ,MAAMwD,UAGXyrB,YAAO7e,KAAKpQ,MAAME,GAAIoQ,EAAUpQ,KACnCkQ,KAAKqd,WAAWrd,KAAKpQ,MAAMqB,MAExB4tB,YAAM,UAAC7e,KAAKpQ,MAAMqB,YAAZ,aAAC,EAAiB2K,KAAlB,UAAwBsE,EAAUjP,YAAlC,aAAwB,EAAgB2K,OACjDoE,KAAKJ,MAAMsd,OAAOkB,WAAlB,UAA6Bpe,KAAKpQ,MAAMqB,YAAxC,aAA6B,EAAiB2K,SAjCC,+BA+GjD,OAAO,kBAACohB,EAAD,iBAAuBhd,KAAKJ,MAAWI,KAAKpQ,YA/GF,GAC3BZ,IAAM6M,WAkHhC,OAlHMohB,EACGnkB,YAF4C,sBAEfyf,YAAeyE,GAFA,KAC/CC,EAGG6B,aAAe,CACpB1rB,QAAQ,GA8GL2rB,IAAM9B,EAAaD,KC4BbjqB,CAAqCyoB,I,oMClL9CwD,EAAK,kBAEIltB,oBAAO,KAAtB,0DAAeA,CAAf,8hCAQsBktB,EACFA,GAUJ,SAAAjtB,GAAC,OAAIA,EAAEC,MAAMqG,WAoBd,SAAAtG,GAAC,OAAIA,EAAEC,MAAMC,YAGX,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAIb,SAAAF,GAAC,OAAIA,EAAEC,MAAMqG,WASf,SAAAtG,GAAC,OAAIA,EAAEC,MAAMiY,aCrDtBgV,E,uKACM,IAAD,EAUHjf,KAAKpQ,MARPurB,EAFK,EAELA,kBACA+D,EAHK,EAGLA,kBACA3D,EAJK,EAILA,WACA4D,EALK,EAKLA,OAEAC,GAPK,EAMLC,YANK,EAOLD,cACAtvB,EARK,EAQLA,GACGF,EATE,iHAYP,OAAOurB,EACL+D,EACElwB,IAAM+tB,aAAantB,EAAMoB,SAAU,CACjC0B,UAAWE,IAAGhD,EAAMoB,SAASpB,MAAM8C,UAAW,CAC5C,eAAgB6oB,EAChB,WAAY4D,GAAUrvB,KAAE,OAAKsvB,QAAL,IAAKA,OAAL,EAAKA,EAActvB,c,GAlBjCd,IAAM6M,WA0BtByjB,EAAiBC,qBACrB,WACA,CACEC,KADF,SACO5vB,EAAOsrB,GACV,IAAMuE,EAAUvE,EAAQwE,UAAUnf,MAC5Bof,EAAW/vB,EAAM2Q,MAEnBkf,IAAYE,IAIhB/vB,EAAMyvB,YAAYI,EAASE,GAC3BzE,EAAQwE,UAAUnf,MAAQof,MAG9B,SAAC1E,EAASC,GAAV,MAAuB,CACrBgE,kBAAmBjE,EAAQ2E,aAC3BT,OAAQjE,EAAQiE,SAChBC,aAAclE,EAAQwE,cAIpBhF,EAAiBC,qBACrB,WACA,CACEE,UADF,SACYjrB,GACR,MAAO,CACLE,GAAIF,EAAME,GACVyQ,MAAO3Q,EAAM2Q,UAInB,SAAC0a,EAASC,GAAV,MAAuB,CACrBC,kBAAmBF,EAAQG,aAC3BG,WAAYL,EAAQK,iBAIlBsE,EAAc9sB,YAAQusB,EAAgB5E,EAAxB3nB,CAAwCksB,GAEvCa,E,4MAKnBT,YAAc,SAACI,EAASE,GAAc,IAAD,EACM,EAAK/vB,MAAtCoB,EAD2B,EAC3BA,SAAU+uB,EADiB,EACjBA,MAAOV,EADU,EACVA,YACnBW,EAAWD,EAAM1T,QAEvBrd,IAAM6tB,SAASpI,QAAQzjB,GAAU,SAAAid,IACE,IAA7B+R,EAASC,QAAQhS,EAAE1c,MACrByuB,EAASld,KAAKmL,EAAE1c,QAIpB,IAAM2uB,EAAYF,EAASC,QAAQR,GAC7BU,EAAaH,EAASC,QAAQN,GAEpCK,EAASI,OAAOF,EAAW,GAC3BF,EAASI,OAAOD,EAAY,EAAGV,GAE/BJ,EAAYW,I,EAGdK,aAAe,SAACzwB,EAAO0wB,GAAR,OACb,kBAACA,EAAkB1wB,GAChB,SAAAsb,GAAI,OACH,kBAAC2U,EAAD,CACEtuB,IAAK2Z,EAAK3Z,IACVzB,GAAIob,EAAK3Z,IACTgP,MAAO2K,EAAK3Z,IACZ8tB,YAAa,EAAKA,aACjBnU,O,uDAMC,IAAD,EACqClL,KAAKpQ,MAA5BoB,GADd,EACCquB,YADD,EACcruB,UAAapB,EAD3B,0CAGP,OACE,kBAAC,EAAD,eAAMywB,aAAcrgB,KAAKqgB,cAAkBzwB,GACxCoB,O,GA3CkChC,IAAM6M,WAA5BikB,EACZhB,aAAe,CACpBiB,MAAO,IA+CXD,EAAcS,QAAUC,EAAKD,S,uECvEzBE,E,oJA7CSrW,EAAUxI,IAAMwI,QA8IdsW,MA5FR,SAAkC9wB,GAAkB,IAAD,EAYpDA,EAVF+wB,mBAFsD,SAGtDzrB,EASEtF,EATFsF,QAHsD,EAYpDtF,EARFqF,kBAJsD,MAIzC,GAJyC,EAKtD2rB,EAOEhxB,EAPFgxB,gBACAC,EAMEjxB,EANFixB,eACAC,EAKElxB,EALFkxB,eACAhwB,EAIElB,EAJFkB,SACAiwB,EAGEnxB,EAHFmxB,WATsD,EAYpDnxB,EAFFoxB,kBAVsD,MAUzC,GAVyC,EAWtDC,EACErxB,EADFqxB,cAGEC,EAAuBlyB,IAAM+oB,QAAO,iBAAO,MAqBzCoJ,EAAgB,SAACnqB,GACrB,GAAK2pB,EAAL,CAIA,IAAM1vB,EAAOwX,aACX,SAAAnS,GAAC,MACC,UAAGxC,YAAK,CAAC,MAAOwC,MACfU,EAAIoqB,cAA8BhP,QAAnC,KAHS3J,CAIXxT,GAEFwrB,EAAQrW,EAAQ,2BACXkB,YAAkBpW,EAAS8rB,IADjB,IAEbjwB,KAFa,WAaX,OAVI0vB,GACFA,EAAMtsB,OAAO,CACXuX,cAAe,CACbhZ,UAAW,sBACXjB,MAAO,CAAEC,SAAU,GAAIC,YAAa,IACpC8D,SAAS,KAKR,IAAIka,SAAQ,SAAA4G,GACbqK,GACFA,EAAgB3vB,GAAQ8vB,GAGtBE,GACFA,IAGFC,EAAqBze,QAAW,WAC9B8T,IACIuK,GACFA,SAKRhwB,SA9Ba,WA+BPA,GACFA,UAMR,MAAO,CACLuwB,sBArE4B,SAACrqB,GACzB6pB,GACFA,IAEFM,EAAcnqB,IAkEdmqB,gBACAG,oBAhE0B,WACtBb,GACFA,EAAMtsB,OAAO,CACXuX,cAAe,CACbhZ,UAAW,sBACXjB,MAAO,CAAEC,SAAU,GAAIC,YAAa,KACpC8D,SAAS,MA2DfwrB,cAAeC,ICvHJ,SAASK,IAAgD,IAAvB3xB,EAAsB,uDAAJ,GAE/D4xB,EAIE5xB,EAJF4xB,MAFmE,EAMjE5xB,EAHFkG,sBAHmE,MAGlD,GAHkD,IAMjElG,EAFF6xB,mBAJmE,MAIrD,GAJqD,IAMjE7xB,EADFiG,gBALmE,WAQvB7G,IAAMa,SAElDiG,GAVmE,mBAQ9D4rB,EAR8D,KAQ7CC,EAR6C,OAY7B3yB,IAAMa,SAAc4xB,GAZS,mBAY9DtrB,EAZ8D,KAYhDyrB,EAZgD,KAc/DC,EAAiB,SAACC,EAAsBC,IACvCrtB,YAAM8sB,IAAUpsB,YAAO0sB,GAAWN,IAIvCG,EAAmBjuB,aAAO,kBAAMmC,IAAUE,IAAUisB,YAAS,GAA1CtuB,CAA8CouB,IAEjEF,GAAgB,SAAA3d,GAAI,OAClBvQ,aACE,kBAAMmC,IACN9C,YACEsD,aAAO,SAACC,GAAD,OAAYwrB,EAAQvrB,SAASD,EAAExG,OACtCwK,YAAO2J,IAET+d,YAAS,GANXtuB,CAOEquB,QAIApB,EAAc3xB,IAAMsB,SAAQ,kBAAMoxB,EAAgBtsB,OAAS,IAAG,CAClEssB,IAGIzrB,EAAe,CACnByrB,kBACA3qB,SAAU8qB,GAvCyD,EA0C5BnB,EAAU,2BAC9C9wB,GAD6C,IAEhD+wB,cACAzrB,QAAQ,kCAAD,OAAWE,YAAOssB,GAAlB,mCACPX,WAAY5qB,EAAagH,KAAI,SAAA7G,GAAC,MAAK,CAAExG,GAAIsE,YAAO,OAAQ,CAAC,MAAOkC,OAChE2qB,cAAe,WACbU,EAAmB,IACnBC,EAAgB,QAPZT,EA1C6D,EA0C7DA,cAAeF,EA1C8C,EA0C9CA,cAWvB,MAAO,CACLhrB,eACA0qB,cACAQ,gBACAO,kBACAvrB,eACAD,iBAAkBwrB,EAAgBtsB,OAClC6rB,gBACAgB,eAAgB,WACdN,EAAmB,IACnBC,EAAgB,Q,yICrFhBhR,EAAaC,cAAH,iMASY,SAAA9e,GAAC,OAAIA,EAAEC,MAAMqG,WAInC6pB,EAAcpwB,kBAAO,KAAV,yEAAGA,CAAH,6LAOK,SAAAC,GAAC,OAAIA,EAAEC,MAAMiY,YAG7B2G,GA+BAuR,EAAWrwB,kBAAO,IAAMqwB,UAAhB,sEAAGrwB,CAAH,8FAOQ,SAAAC,GAAC,OAAIA,EAAEC,MAAMiY,YAG7B2G,GAMSsR,O,iCCzEf,qCAQME,EAA6C,CACjDC,kBAAkB,GAoBL,IAAoB,qBAAbxb,SAjBtB,SACE1U,GAEC,IADD+B,EACA,uDAD2BkuB,EAErBE,EAAetzB,IAAM+oB,OAAOlR,SAAS1U,OAC3C0U,SAAS1U,MAAQ6K,YAAQ,KAAM7K,EAAd6K,CAAqBkE,IAASqhB,UAC/CvzB,IAAMkL,WAAU,WACd,OAAIhG,GAAWA,EAAQmuB,iBACd,WACLxb,SAAS1U,MAAQmwB,EAAa7f,cAGhC,IAED,KAKD,SAAC+f,M,8PCPU,CACHC,WAAY,uBAXjB,SAASC,EAAT,GAAoE,IAApD1xB,EAAmD,EAAnDA,SAAUS,EAAyC,EAAzCA,MAAyC,IAAlCiB,iBAAkC,MAAtB,QAAsB,EACxE,OACE,2BACE,sBAAQiwB,QAAR,CACElxB,MAAO,CACLgxB,WAAW,kCAAD,OAAoCzwB,IAAMqG,QAA1C,OAEZ,qBACE3F,UAAWE,IAAG,kBAAmBF,GACjCjB,MAAOA,GAMNT,IAGL,kBAAC,IAAD,S,qOCvBN,SAAS4xB,KAET,SAASC,EAAWzqB,EAAKsE,EAAKoR,GAC5B,OAAOxY,KAAKC,MAAMD,KAAK8C,IAAIsE,EAAKpH,KAAKoH,IAAItE,EAAK0V,KAkCzC,SAASgV,EAAuBC,GACrC,OAAO,WAAiDC,GAAQ,IAAtB9Q,EAAqB,EAArBA,EAAG+Q,EAAkB,EAAlBA,EAAG3sB,EAAe,EAAfA,EAAG4sB,EAAY,EAAZA,EAC3CC,EAAS7tB,KAAK8C,IAAI6qB,EAAI,EAAGF,GAI/B,GAHgBC,EAAM9Q,GAAKA,GAAK8Q,EAAM9Q,GAAKA,EAAI+Q,GACtBD,EAAM1sB,GAAKA,GAAK0sB,EAAM1sB,GAAKA,EAAI4sB,EAE7C,CACT,GAAIF,EAAM9Q,EAAIA,EAAIiR,EAChB,OAAQH,EAAM9Q,EAAIA,EAAIiR,GAAUA,EAC3B,GAAIH,EAAM9Q,EAAIA,EAAI+Q,EAAIE,EAC3B,QAASjR,EAAI+Q,EAAID,EAAM9Q,EAAIiR,GAAUA,EAIzC,OAAO,GAIJ,IApCkCJ,EAoC5BK,GApC4BL,EAFlB,IAGd,WAAmDC,GAAQ,IAAtB1sB,EAAqB,EAArBA,EAAG4sB,EAAkB,EAAlBA,EAAGhR,EAAe,EAAfA,EAAG+Q,EAAY,EAAZA,EAC7CE,EAAS7tB,KAAK8C,IAAI8qB,EAAI,EAAGH,GAI/B,GAHgBC,EAAM1sB,GAAKA,GAAK0sB,EAAM1sB,GAAKA,EAAI4sB,GACtBF,EAAM9Q,GAAKA,GAAK8Q,EAAM9Q,GAAKA,EAAI+Q,EAE7C,CACT,GAAID,EAAM1sB,EAAIA,EAAI6sB,EAChB,OAAQH,EAAM1sB,EAAIA,EAAI6sB,GAAUA,EAC3B,GAAIH,EAAM1sB,EAAIA,EAAI4sB,EAAIC,EAC3B,QAAS7sB,EAAI4sB,EAAIF,EAAM1sB,EAAI6sB,GAAUA,EAIzC,OAAO,IA0BEE,EAA0BP,EA1ChB,KChBvB,IAiDMQ,EDWS,SAAkCC,GAAmB,IAC5DC,EAD2D,kDAqB/D,WAAY5zB,EAAO6zB,GAAM,IAAD,8BACtB,cAAM7zB,EAAO6zB,IA2CfC,YAAc,SAAA1sB,GACR,EAAK2sB,WAAa,EAAKC,WACzB,EAAKC,SACL,EAAKC,gBAAgB9sB,KA/CD,EA+ExB8sB,gBAAkBC,KAChB,SAAA/sB,GAAQ,IAAD,EAMD,EAAKgtB,UAAUC,wBACbC,EAAM,CAAE5tB,EAPT,EAEH6tB,KAKejS,EAPZ,EAGHxN,IAIkBwe,EAPf,EAIH/xB,MAGqB8xB,EAPlB,EAKHmB,QAGIC,EApKd,SAAmBrtB,GACjB,MAAiB,cAAbA,EAAI+E,KACC,CACLzF,EAAGU,EAAIstB,eAAe,GAAGC,QACzBrS,EAAGlb,EAAIstB,eAAe,GAAGE,SAItB,CAAEluB,EAAGU,EAAIutB,QAASrS,EAAGlb,EAAIwtB,SA4JXC,CAAUztB,GAGzB,EAAK0tB,OAAS,EAAK90B,MAAM+0B,mBAAmBT,EAAKG,GACjD,EAAKO,OAAS,EAAKh1B,MAAMi1B,iBAAiBX,EAAKG,GAG1C,EAAKS,QAAU,EAAKJ,SAAU,EAAKE,QACtC,EAAKG,mBAGT,IACA,CAAEC,UAAU,IAjGZ,EAAKN,OAAS,EACd,EAAKE,OAAS,EACd,EAAKE,MAAQ,KAEb,EAAKlB,UAAW,EAChB,EAAKD,UAAW,EARM,EArBuC,gEAiCzD3jB,KAAKpQ,MAAMq1B,WACbjlB,KAAKklB,aAlCsD,iCAsCnD,IAAD,OAETllB,KAAKgkB,UAAYmB,sBAAYnlB,KAAKolB,iBAClCplB,KAAKgkB,UAAUtN,iBAAiB,WAAY1W,KAAK0jB,aAGjD9d,OAAOiB,SAAS6H,KAAKgI,iBAAiB,YAAa1W,KAAK0jB,aAExD1jB,KAAKqlB,yBAA2BrlB,KAAKvP,QAAQ60B,gBAC1CC,aACAC,wBAAuB,kBAAM,EAAKC,2BAhDwB,6CAoDzDzlB,KAAKpQ,MAAMq1B,WACbjlB,KAAK0lB,YArDsD,gCA2D7D1lB,KAAKgkB,UAAU2B,oBAAoB,WAAY3lB,KAAK0jB,aACpD9d,OAAOiB,SAAS6H,KAAKiX,oBAAoB,YAAa3lB,KAAK0jB,aAC3D1jB,KAAKqlB,2BACLrlB,KAAK4lB,kBA9DwD,4CAyE7D,IAAMrK,EAAavb,KAAKvP,QAAQ60B,gBAAgBC,aAAahK,cAExDvb,KAAK2jB,UAAYpI,EACpBvb,KAAK2jB,UAAW,EACP3jB,KAAK2jB,WAAapI,IAC3Bvb,KAAK2jB,UAAW,EAChB3jB,KAAK4lB,mBA/EsD,+BAoF7D5lB,KAAK4jB,UAAW,EAChBhe,OAAOiB,SAAS6H,KAAKgI,iBAAiB,WAAY1W,KAAK8jB,iBACvDle,OAAOiB,SAAS6H,KAAKgI,iBAAiB,YAAa1W,KAAK8jB,mBAtFK,+BA0F7D9jB,KAAK4jB,UAAW,EAChBhe,OAAOiB,SAAS6H,KAAKiX,oBAAoB,WAAY3lB,KAAK8jB,iBAC1Dle,OAAOiB,SAAS6H,KAAKiX,oBACnB,YACA3lB,KAAK8jB,mBA9FsD,uCA4H7C,IAAD,OACX7X,EAAI,GACK,SAAP4Z,IAAc,IACVnB,EAA8B,EAA9BA,OAAQE,EAAsB,EAAtBA,OAAQZ,EAAc,EAAdA,UADP,EAE8B,EAAKp0B,MAA5Ck2B,EAFS,EAETA,mBAAoBC,EAFX,EAEWA,eAG5B,GAA2B,IAAvBD,GAA4BpB,EAASE,IAAW,EAApD,CASA,GAAI3Y,IAAM,EAAG,CAAC,IAEV+Z,EAMEhC,EANFgC,WACAC,EAKEjC,EALFiC,UACAC,EAIElC,EAJFkC,YACAC,EAGEnC,EAHFmC,aACAC,EAEEpC,EAFFoC,YACAC,EACErC,EADFqC,aAmBFN,EAhBgBrB,EACXV,EAAUgC,WAAanD,EACtB,EACAqD,EAAcE,EACdJ,EAAatB,EAASoB,GAExBE,EAEWpB,EACVZ,EAAUiC,UAAYpD,EACrB,EACAsD,EAAeE,EACfJ,EAAYrB,EAASkB,GAEvBG,GAIN,EAAKnB,MAAQwB,IAAIT,QApCf,EAAKD,gBAuCTC,KA3K6D,sCA+K7D7lB,KAAKumB,SACLvmB,KAAK0kB,OAAS,EACd1kB,KAAK4kB,OAAS,EAEV5kB,KAAK8kB,QACPwB,IAAIE,OAAOxmB,KAAK8kB,OAChB9kB,KAAK8kB,MAAQ,QArL8C,+BAyLrD,IAAD,SAQH9kB,KAAKpQ,MADJA,GAPE,EAGLk2B,mBAHK,EAILjB,iBAJK,EAKLF,mBALK,EAMLoB,eANK,gGAUP,OACE,kBAACxC,EAAD,eACE/qB,IAAK,SAAAA,GACH,EAAK4sB,gBAAkB5sB,IAErB5I,QAxMqD,GAChCZ,IAAM6M,WA6MvC,OA7MM2nB,EACG1qB,YAFwD,oBAE7Byf,YAAegL,GAFc,KAC3DC,EAUG1E,aAAe,CACpBmG,WAAW,EACXc,eAAgBnD,EAChBiC,iBAAkBxB,EAClBsB,mBAAoBvB,EACpB0C,mBAAoB,IAflBtC,EAkBGiD,YAAcC,IA2LhB3H,IAAMyE,EAAoBD,GCzNPoD,CAjDC70B,UAAOoN,IAAV,yGAAGpN,CAAH,wlBAmDpB80B,EAAY9D,EAAuB,KAEpB+D,E,uKAKT,IAAD,EAC0B7mB,KAAKpQ,MAA9B8C,EADD,EACCA,UAAWuyB,EADZ,EACYA,UAEnB,OACE,kBAAC3B,EAAD,CACE2B,UAAWA,EACXJ,iBAAkB+B,EAClBd,mBAAoB,IACpBpzB,UAAWE,IAAG,0BAA2BF,IACxCsN,KAAKpQ,MAAMoB,c,GAd0BhC,IAAM6M,WAA/BgrB,EACZ/H,aAAe,CACpBmG,WAAW,I,iCCjEf,wDAGe,SAAS6B,EAAqBtkB,GAc3C,OAbsB,WACpB4H,YAAQ,CACNjY,MAAO,6CACP+C,QAAS,2HACTqW,OAAQ,eACRxa,KAAM,WACAyR,GACFF,IAAQQ,KAAKN,S,uMCHfzP,EAAYC,EAAQ,IAApBD,QA+BD,SAASg0B,IAAgB,IAAD,EACDC,YAAO,8BAA8B,SAAA5Z,GAAG,OAClE7G,YAAQ6G,EAAK,CACX6Z,OAAQ,OACRvY,KAAM,CACJwY,eAAgB,gBAChBC,OAAQ,UACRC,GAAI,iBANFtyB,EADqB,EACrBA,KAASuyB,EADY,wBAY7B,OAAO,2BACFA,GADL,IAEEvyB,KAAM/B,EAAQ6D,IAAMxC,YAAO,GAAI,IAAzBrB,CAA8B+B,KA6BjC,SAASwyB,EAAa13B,GAA0B,IAC7CkF,EA1BH,WAGkB,IAAD,yDAAJ,GAAI,IAFtB/E,gBAEsB,MAFX,OAEW,EADnB6E,EACmB,8BACSC,YAC7B,wCACA,CACED,UAAU,aAAG7E,YAAa6E,KAJR,IACdE,YADc,MACP,GADO,EACAC,EADA,wBAQhBC,EAAK,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAMqI,KAAI,SAAA7G,GAAC,kCAAUA,GAAV,IAAaxG,GAAIwG,EAAEixB,cAEtCC,EAAqC,GAI3C,OAFA/S,aAAQ,SAAA1W,GAAC,OAAKypB,EAAWzpB,EAAEwpB,UAAYxpB,IAAI/I,GAEpC,2BACFD,GADL,IAEEyyB,aACA1yB,KAAME,EACNyyB,YAAazyB,IAKE0yB,GAAT5yB,KACR,OACE,kBAAC,IAAWlF,EACTkF,EAAKqI,KAAI,SAAA7G,GAAC,OACT,kBAAC,IAAO8G,OAAR,CAAe7L,IAAK+E,EAAExG,GAAIO,MAAOiG,EAAExG,IAChCwG,EAAEqxB,c,4SClFE71B,YAAOoN,IAAI/G,MAAM,CAC9BzF,UAAW,sBADb,4EAAeZ,CAAf,yJAOyC,SAAAC,GAAC,OAAIA,EAAEqqB,QAAU,Y,SCkBlDrpB,EAAYC,EAAQ,IAApBD,QAgBFusB,EAAiBC,qBACrB3E,IAAUlK,MACV,CACE8O,KADF,SACOlwB,EAAG4rB,EAAS/V,GACf,GAAKA,GAAcA,EAAUvV,MAAM+iB,UAAnC,CAIA,IAAMiV,EAAU1M,EAAQ0M,UAClBvV,EAAqBlN,EAAUvF,MAA/ByS,iBACAphB,EAAOiqB,EAAQwE,UAEjBkI,GAAW32B,EAAK6pB,UAClB3V,EAAU0iB,kBAAV,2BAAiC52B,GAAjC,IAAuCohB,sBAGrCuV,IAAY32B,EAAK6pB,UACnB3V,EAAU2iB,kBAAkB72B,EAAKnB,GAAIuiB,KAGzCuV,QAlBF,WAkB2B1M,GAGvB,GAA2B,IAHK,EAAxB7R,YAGQjU,QAAgB8lB,EAAQiE,SACtC,OAAO,EAGT,IAAMxN,EAAeuJ,EAAQ6M,kBACvBzW,EAAUzK,SAASoL,iBAAiBN,EAAarb,EAAGqb,EAAaO,GAEvE,OAAOb,YAAeC,IAExB0W,MA9BF,SA8BQ14B,EAAG4rB,EAAS/V,GAEhB,IAAMwM,EAAeuJ,EAAQ6M,kBAFF,EAQvBrW,YAAoBC,GAHtBU,EALyB,EAKzBA,iBACAE,EANyB,EAMzBA,cACAX,EAPyB,EAOzBA,YAIF,GAAKW,EAAL,CAIA,IAAM0V,EAAqBrW,EAA4BqS,wBACjDiE,GACHD,EAAkBE,OAASF,EAAkBvjB,KAAO,EAClCiN,EAAaO,EAAI+V,EAAkBvjB,IAErCwjB,IACjB7V,GAAoB,GAIpB6I,EAAQ0M,YACP/I,YAAO1Z,EAAUvF,MAAMyS,iBAAkBA,IAE1ClN,EAAUpF,SAAS,CAAEsS,yBAI3B,SAAC4I,EAASC,GAAV,MAAuB,CACrBgE,kBAAmBjE,EAAQ2E,aAC3BT,OAAQjE,EAAQiE,SAChByI,QAAS1M,EAAQ0M,UACjBQ,QAASlN,EAAQkN,UACjBhJ,aAAclE,EAAQwE,c,6GA8JL,CAAElN,QAAS,GAAIjP,WAAY,IA1J1C8kB,E,4MAMGzoB,MAAe,CACpByS,iBAAkB,M,EAGpByV,kBAAoB,SAACh4B,EAAew4B,GAAqB,IAC/Cjf,EAAgB,EAAKzZ,MAArByZ,YAD8C,EAE3B,EAAKkf,kBAAkBz4B,GAA1CwtB,EAF8C,EAE9CA,QAAS/c,EAFqC,EAErCA,MAEXyT,EAAU,GACZwU,GAAW,EAEfnf,EAAYoL,SAAQ,SAAC1W,EAAGlK,GAClBA,IAAQ0M,KAIPioB,GAAYF,EAAUz0B,IACzBmgB,EAAQlR,KAAKwa,GACbkL,GAAW,GAGbxU,EAAQlR,KAAK/E,GAERyqB,GAAYF,IAAYz0B,IAC3BmgB,EAAQlR,KAAKwa,GACbkL,GAAW,OAKa,IAAxBpzB,YAAOiU,IAAuBif,GAChCtU,EAAQlR,KAAKwa,GAGf,EAAK1tB,MAAM64B,gBAAgBzU,GAC3B,EAAKjU,SAAS,CAAEsS,iBAAkB,Q,EAIpCwV,kBAAoB,SAACa,GAAmE,IAC9ErW,EAA8BqW,EAA9BrW,iBAAqBphB,EADwD,YAC/Cy3B,EAD+C,sBAG/Erf,EAAW,YAAO,EAAKzZ,MAAMyZ,aAE7Bsf,EAAYtW,EAAmB,EACjC2B,EAAiB,GAEfsJ,EAA8B,2BAC/BrsB,GAD+B,IAElC6pB,UAAU,EACVhrB,GAAG,GAAD,OAAKmB,EAAKnB,GAAV,aAAiB2J,iBAGO,IAAxBrE,YAAOiU,KACT2K,EAAU4U,YAAO,EAAGtL,EAAVsL,CAAmBvf,IAE3BjU,YAAOiU,GAAe,IACxB2K,EAAU4U,YAAOD,EAAWrL,EAAlBsL,CAA2Bvf,IAGvC,EAAKzZ,MAAM64B,gBAAgBzU,GAC3B,EAAKjU,SAAS,CAAEsS,iBAAkB,Q,EAGpCwW,oBAAsB,SAACtoB,GACrB,EAAK3Q,MAAM64B,gBAAgBr4B,YAAOmQ,EAAO,EAAdnQ,CAAiB,EAAKR,MAAMyZ,e,EAGzDyf,mBAAqB,SAACh5B,EAAegpB,GAAmB,IAC9CwE,EAAY,EAAKiL,kBAAkBz4B,GAAnCwtB,QAER,EAAKyL,oBAAL,2BACKzL,GADL,IAEE1K,QAAS7f,EACPoa,YAAK,CACH,CAAC6b,YAAGzuB,IAAI,GAAIjG,YAAO,IACnB,CAAC20B,YAAG1uB,IAAI,GAAIjG,YAAO,IACnB,CAAC4a,IAAGnZ,OAENwoB,YAAIzF,GACJ1kB,YAAO,EAAG,CAAC,YAPJrB,CAQPuqB,O,EAINyL,oBAAsB,SAACj0B,GAAe,IAAD,EACR,EAAKyzB,kBAAkBzzB,EAAKhF,IAA/CwtB,EAD2B,EAC3BA,QAAS/c,EADkB,EAClBA,MAEjB,EAAK3Q,MAAM64B,gBACTt0B,YAAOoM,EAAD,YAAC,eAAY+c,GAAYxoB,GAA/BX,CAAuC,EAAKvE,MAAMyZ,e,EAItDkf,kBAAoB,SAACz4B,GAAmB,IAC9BuZ,EAAgB,EAAKzZ,MAArByZ,YACFiU,EAAUjU,EAAYhT,QAAO,SAAAC,GAAC,OAAIA,EAAExG,KAAOA,KAAI,GAErD,MAAO,CACLwtB,UACA/c,MAAO8I,EAAY4W,QAAQ3C,K,uDAIrB,IAAD,SAQHtd,KAAKpQ,MANPsvB,EAFK,EAELA,kBACAC,EAHK,EAGLA,OACAyI,EAJK,EAILA,QACAve,EALK,EAKLA,YACA+V,EANK,EAMLA,aACAzM,EAPK,EAOLA,UAGMN,EAAqBrS,KAAKJ,MAA1ByS,iBAEJ6W,GAAc,EACZC,EAAW,GAqEjB,OAnEA9f,EAAYoL,SAAQ,SAACxjB,EAAM4C,GACrBsrB,GAAUyI,IACZsB,GAAc,EACF,IAARr1B,IAAmC,IAAtBwe,EACf8W,EAASrmB,KAAK,kBAAC,EAAD,CAAkBvR,IAAG,4BAAuBsC,MAChDwe,EAA2Bxe,IACrCq1B,GAAc,SAILv4B,IAATM,GACFk4B,EAASrmB,KACP,kBAAC,IAAD,CACEvR,IAAKN,EAAKnB,GACVA,GAAImB,EAAKnB,GACTyQ,MAAO1M,EACP8e,UAAWA,EACX1hB,KAAMA,EACNmC,OAAQnC,EAAKmC,OAEbsf,UAAS,0BAAqB7e,GAC9B+e,QAAS3hB,EAAK2hB,QACdf,YAAa,EAAK0W,kBAClB/J,cAAe,EAAKuK,oBACpBpN,aAAc,EAAKmN,mBACnBjN,cAAe,EAAKgN,qBACnB53B,EAAKmC,OACJ,qBACEtD,GAAE,UAAKmB,EAAKnB,IACZ4C,UAAS,UAAKzB,EAAKnB,MAIrB,kBAACmB,EAAK4K,UAAN,CACE/L,GAAImB,EAAKnB,GACT4C,UAAWzB,EAAKnB,GAChBmB,KAAMA,EACNsP,MAAO1M,EACP+G,SAAU,EAAKmuB,wBAOrB5J,GAAUyI,GAAWvV,IAAqBxe,GAC5Cs1B,EAASrmB,KAAK,kBAAC,EAAD,CAAkBvR,IAAG,4BAAuBsC,SAK1Dq1B,GACFC,EAASrmB,KAAK,kBAAC,EAAD,CAAkBvR,IAAK,8BAInC4tB,GAAUyI,GAAkC,IAAvBve,EAAYjU,QACnC+zB,EAASrmB,KAAK,kBAAC,EAAD,CAAkBvR,IAAK,4BAInC4tB,GAAUyI,GAAkC,IAAvBve,EAAYjU,SAC9BgqB,EAAatE,UAChBqO,EAASrmB,KAAK,kBAAC,EAAD,CAAkBvR,IAAK,6BAIlC2tB,EACL,yBACExsB,UAAWE,IAAG,uCAAwC,CACpD,sDAAuD+f,KAExDwW,Q,GApMuBn6B,IAAM6M,WAAhCwsB,EACGvJ,aAAe,CACpBnM,WAAW,EACXtJ,YAAa,IAuMFtW,MAAQq2B,IAAY9J,EAApBvsB,CAAoCs1B,I,0LCtT7C3N,EAAiBC,qBACrBC,IAAUlK,MACV,CACEmK,UADF,SACYjrB,GACiCA,EAAjCoB,SAAiCpB,EAAvB8C,UADK,IACSqC,EADV,YACmBnF,EADnB,0BAEtB,OAAO,2BACFmF,GADL,IAEE+lB,UAAU,KAGduO,QARF,SAQU/5B,EAAG4rB,GACJA,EAAQkN,WAIf7M,WAbF,SAaa3rB,EAAOsrB,GAChB,IAAMK,EAAa3rB,EAAME,KAAOorB,EAAQwE,UAAU5vB,GAElD,OAAOyrB,KAGX,SAACN,EAASC,GAAV,MAAuB,CACrBC,kBAAmBF,EAAQG,aAC3BC,mBAAoBJ,EAAQK,cAC5BC,WAAYL,EAAQK,iBAIlB+N,E,uKACM,IAAD,EACoCtpB,KAAKpQ,MAAxCurB,EADD,EACCA,kBAAmBrrB,EADpB,EACoBA,GAAOiF,EAD3B,0CAGP,OACE,kBAACw0B,EAAD,iBACMx0B,EADN,CAEEyD,IAAK,SAAAgxB,GAAI,OAAIrO,EAAkBqO,IAC/B15B,GAAE,UAAKA,KACP,yBAAK4C,UAAU,sCACZsN,KAAKpQ,MAAMoB,e,GAVYhC,IAAM6M,WAiBlC0tB,EAAyBz3B,UAAOoN,IAAV,oGAAGpN,CAAH,kBAIb4oB,IAAe4O,G,SCjDTG,E,uKAEjB,OACE,kBAAC,EAAD,eACE/2B,UAAWE,IAAG,sBAAuBoN,KAAKpQ,MAAM8C,YAC5CsN,KAAKpQ,OACT,yBAAK8C,UAAU,6BACZoJ,IAAoBqB,KAAI,SAAAlM,GAAI,OAC3B,kBAAC,EAAD,iBACMA,EADN,CAEEM,IAAKN,EAAKnB,GACV4C,UAAU,mCACV,yBAAKA,UAAU,qBACZzB,EAAKgL,KACJ,kBAAChL,EAAKgL,KAAN,CAAWvJ,UAAU,SAErB,kBAACC,EAAA,EAAD,CAAoBD,UAAU,SAE/BzB,EAAKwD,gB,GAlBuBzF,IAAM6M,WA4B7C0tB,EAAyBz3B,UAAOoN,IAAV,gGAAGpN,CAAH,sH,+WClCpBiB,EAAYC,EAAQ,IAApBD,QAEF22B,EAA2CzrB,YAC/CiK,IAAMC,IAAI,4BAGNwhB,EAA0BthB,YAAK,CACnC9W,IAAK,0BACL+W,QAASohB,IAIJ,SAASE,IACd,OAAOjhB,YAAeghB,G,YCZXE,EAAgB,WAAO,IAAD,EACPD,IAAnBE,EAD0B,oBAKjC,MAAO,CACLnW,QAHc,iBAAO,IAIrB7e,KAAM,CACJI,QAAS40B,EACT30B,MAAOC,YAAO00B,GACdz0B,WAAYC,KAAKC,MAAMH,YAAO00B,GAAmB,GAAK,IAExDr0B,SAAS,IAIAs0B,EAAkB,WAA4C,IAAD,yDAAP,GAAjC55B,EAAwC,EAAxCA,YAAwC,EAC1By5B,IAD0B,mBACjEE,EADiE,KAChDE,EADgD,KAGlEjW,EAAU,SAAClc,GACf,IAAI/H,EAAK2J,cACLua,EAAO,sBACN8V,GADM,4BAGJjyB,GAHI,IAIP/H,KACAmkB,UAAWC,MACXC,aAAcD,MAASzY,OAAO,oBAC9B2Y,UAAWF,MACXG,aAAcH,MAASzY,OAAO,wBAIlCuuB,EAAmBhW,GAEnBM,IAAMnO,IAAI,0BAA2B6N,GAEjC7jB,GACFA,EAAY,2BAAK0H,GAAN,IAAc/H,SAI7B,MAAO,EAAC,EAAOikB,IAGJkW,EAAkB,WAA4C,IAAD,yDAAP,GAAjC95B,EAAwC,EAAxCA,YAAwC,EAC1By5B,IAD0B,mBACjEE,EADiE,KAChDE,EADgD,KAGlEjW,EAAU,SAAClc,GACf,IAAI0I,EAAQupB,EAAgBtV,WAAU,SAAAle,GAAC,MAAI,UAAGA,EAAExG,MAAL,UAAiB+H,EAAO/H,OAC/DkkB,EAAU7f,YACZoM,EADkB,YAAC,eAGd1I,GAHa,IAIhBuc,UAAWF,MACXG,aAAcH,MAASzY,OAAO,sBAEhCquB,GAGFE,EAAmBhW,GACnBM,IAAMnO,IAAI,0BAA2B6N,GAEjC7jB,GACFA,KAIJ,MAAO,EAAC,EAAO4jB,IAGJmW,EAAkB,WAA4C,IAAD,yDAAP,GAAjC/5B,EAAwC,EAAxCA,YAAwC,EAC1By5B,IAD0B,mBACjEE,EADiE,KAChDE,EADgD,KAGlEjW,EAAU,SAAClc,GACf,IAAImc,EAAU8V,EAAgBzzB,QAAO,SAAAC,GAAC,MAAI,UAAGA,EAAExG,MAAL,UAAiB+H,EAAO/H,OAElEk6B,EAAmBhW,GACnBM,IAAMnO,IAAI,0BAA2B6N,GAEjC7jB,GACFA,KAIJ,MAAO,EAAC,EAAO4jB,IAGJoW,EAAgB,SAACj2B,GAA6C,IAAD,EDxEnE,YAMH,IALFpE,EAKC,EALDA,GACAgF,EAIC,EAJDA,KAIC,EAC4B6T,YAAeghB,GAArCS,EADN,sBAG2Cp7B,IAAMa,SAAyB,CACzEiL,QAAS,KAJV,mBAGMuvB,EAHN,KAGsBC,EAHtB,KAODt7B,IAAMkL,WAAU,YACd,OAAIpF,QAAJ,IAAIA,OAAJ,EAAIA,EAAMhF,KACRw6B,EAAkBv3B,EAAQ6D,IAAMqH,IAAcjI,IAA5BjD,CAAgC+B,MAEnD,CAACA,IAEJ9F,IAAMkL,WAAU,WACVpK,GACFw6B,EACEv3B,EAAQ0V,aAAK,SAACnS,GAAD,MAAuB,UAAGA,EAAExG,MAAL,UAAiBA,MAArDiD,CACEkL,YAAamsB,OAIlB,CAACt6B,IAEJ,IAAIqZ,EAAe/U,YAAO,GAAI,CAAC,WAAZA,CAAwBi2B,GAE3Cr7B,IAAMkL,WAAU,WACdkP,EAAeD,KACd,CAAC/O,KAAKC,UAAU8O,KA3BlB,MA6BqCna,IAAMa,SAC1CsZ,GA9BD,mBA6BME,EA7BN,KA6BmBD,EA7BnB,KAiCGE,EAA+C,GAEnD,MAAO,CACL+gB,iBACAhhB,cACAD,iBACAE,YAAanM,aAAI,SAAC7G,GAAD,OAAsBgT,EAAYhT,EAAExG,IAAMwG,IAAI+S,IC4BhBkhB,CAAkBr2B,GAA3DkV,EADgE,EAChEA,eAAgBC,EADgD,EAChDA,YAAgBtU,EADgC,gDAGxE,OAAO,2BACFA,GADL,IAEEsU,cACAD,iBACA2f,oBAAqB3f,M,+oBCpGVpa,MAAM6V,MAAK,kBAAM,kCCAjB7V,MAAM6V,MACnB,kBAAM,wDCDO7V,MAAM6V,MAAK,kBAAM,mC,8vBCMhC,SAAS2lB,GAActf,GAKrB,OAJoBuf,SAASC,iBAAiBxf,GAAMkZ,OAAQ,KAE1DqG,SAASC,iBAAiBxf,GAAMzU,WAAY,IAC5Cg0B,SAASC,iBAAiBxf,GAAMyf,cAAe,KAkEpCC,ICnEHC,GDmEGD,GArCf,WACE,OAAO,SACLrH,GADK,sNAIH3jB,MAAQ,CACNkrB,eAAgB,GALf,EAQHC,UAAmCp6B,EARhC,EAmBHq6B,WAAa,SAAC9f,GACZ,EAAK6f,KAAO7f,GApBX,mEAYD,IADmBlL,KAAKpQ,MAAhBw0B,OACK,CACX,IAAMnB,EAvChB,SAAuB7R,GACrB,IAAKA,EACH,OAAO,EAOT,IAJA,IAAIlG,EAAOkG,EAEPgT,EAASoG,GAActf,IAEnBkZ,IACNlZ,EAAOA,EAAKsG,aAEV4S,EAASoG,GAActf,GAM3B,OAAOkZ,EAqBW6G,CAAcjrB,KAAK+qB,MAE7B/qB,KAAKD,SAAS,CAAE+qB,eAAgB7H,OAfjC,+BAuBO,IACAmB,EAAWpkB,KAAKpQ,MAAhBw0B,OACA0G,EAAmB9qB,KAAKJ,MAAxBkrB,eACF7H,EAAImB,GAAU0G,EACpB,OACE,yBAAKtyB,IAAKwH,KAAKgrB,YACZ/H,EAAI,GAAK,kBAACM,EAAD,iBAAsBvjB,KAAKpQ,MAA3B,CAAkCw0B,OAAQnB,UA7BvD,GAGSj0B,IAAM6M,a,+BE1ClBqvB,GAAep5B,kBAAO,MAAV,2EAAGA,CAAH,gOAWL,SAAAC,GAAC,OAAIA,EAAEC,MAAMqG,WAIF,SAAAtG,GAAC,OAAIA,EAAEC,MAAMqG,WAQ/B8yB,GAAWr5B,UAAOoN,IAAV,uEAAGpN,CAAH,qlCAYa,SAAAC,GAAC,OAAIA,EAAEq5B,WAAa,QAO5B,SAAAr5B,GAAC,OAAIA,EAAEs5B,e,UCjCpBC,GAAet4B,EAAQ,MACrBu4B,GAAav4B,EAAQ,MAArBu4B,SAyCFC,G,+MACJ5rB,MAAkB,CAChB6rB,WAAY,GACZC,aAAa,G,EAGfC,gBAAiCh7B,E,EAEjCo6B,UAAmCp6B,E,EAEnCi7B,WAA8Bj7B,E,EA+B9Bk7B,cAAgB,SAACD,GACf,EAAKA,MAAQA,EACbE,uBAAsB,WACpB,EAAKC,gBACL,EAAKC,a,EAKTD,cAAgB,WACd,GAAK,EAAKH,MAAV,CACA,IAAMK,EAAO,EAAKL,MAAMM,cAAc,GACtC,GAAKD,EAAL,CACA,IAEMR,GAFSQ,EAAa9jB,IAAI,cAAgB,IAEvBhL,KAAI,SAAClM,GAE5B,IAAMk7B,EAASl7B,EAAK,GAAGm7B,QAGvB,OAFAD,EAAO36B,MAAQP,EAAK,GAAGO,MACvB26B,EAAOE,SAAU,EACVF,KAGT,EAAKpsB,SAAS,CACZ0rB,kB,EAIJT,WAAa,SAAC5Z,GACZ,EAAK2Z,KAAO3Z,G,EAGdkb,kBAAoB,SAACr7B,EAAWgb,GAC9B,IAAMsgB,EAAUt7B,EAChBs7B,EAAQF,SAAWE,EAAQF,QAFiB,IAIpCZ,EAAe,EAAK7rB,MAApB6rB,WACRA,EAAWxf,GAAKsgB,EAEhB,IAAMC,EAAqBf,EAAWp1B,QAAO,SAAAo2B,GAAC,OAAIA,EAAEJ,WAASlvB,KAAI,SAAAsvB,GAAC,OAAIA,EAAEn2B,KAEpE,EAAKs1B,OACP,EAAKA,MAAMv1B,OAAO,KAAK,SAAAyX,GAAG,OAAI0e,EAAmBvM,QAAnB,UAA8BnS,KAAU,KAGxE,EAAK/N,SAAS,CACZ0rB,gB,EAIJO,OAASU,MAAS,WAAO,IACfC,EAAc,EAAK/8B,MAAnB+8B,UACAjB,EAAgB,EAAK9rB,MAArB8rB,YACHiB,GAAc,EAAK5B,KAKtB,EAAKA,MACL,EAAKA,KAAKvZ,YACT,EAAKuZ,KAAKvZ,WAA2B4U,aAAe,IAEhDsF,GACH,EAAK3rB,SAAS,CACZ2rB,aAAa,IAGRA,GACT,EAAK3rB,SAAS,CACZ2rB,aAAa,IAff9lB,OAAO+f,oBAAoB,SAAU,EAAKqG,UAkB3C,K,mEArGkB,IAAD,OAClBpmB,OAAO8Q,iBACL,UACA,WACE,EAAKiV,WAAaG,uBAAsB,kBAAM,EAAKE,cAErD,CAAEY,SAAS,M,yCAIIC,GACA7sB,KAAKpQ,MAAdkF,OACK+3B,EAAS/3B,MAGpBkL,KAAK+rB,kB,6CAKH/rB,KAAK2rB,YACP/lB,OAAOknB,qBAAqB9sB,KAAK2rB,YAE/B3rB,KAAKgsB,SACPpmB,OAAO+f,oBAAoB,SAAU3lB,KAAKgsB,QAC1ChsB,KAAKgsB,OAAOxF,Y,+BA8EN,IAwCJuG,EAxCG,SAkBH/sB,KAAKpQ,MAhBPo9B,EAFK,EAELA,YACAC,EAHK,EAGLA,SACA93B,EAJK,EAILA,MAJK,IAKLw3B,iBALK,SAMLj6B,EANK,EAMLA,UACAjB,EAPK,EAOLA,MACA2yB,EARK,EAQLA,OARK,IASL8I,gBATK,SAULr0B,EAVK,EAULA,QACArH,EAXK,EAWLA,MAXK,IAYL27B,aAZK,MAYG,IAZH,MAaLC,eAbK,SAcLC,EAdK,EAcLA,OAdK,IAeLC,iBAfK,MAeO,EAfP,MAgBLn8B,aAhBK,MAgBG,IAhBH,MAiBLk6B,mBAjBK,MAiBS,IAjBT,IAoB6BrrB,KAAKJ,MAAjC6rB,EApBD,EAoBCA,WAAYC,EApBb,EAoBaA,YACd6B,EAAeC,IAAW,MAAO96B,EAAW,CAChDi6B,YAAaA,EACbjB,YAAaA,IAvBR,EA8BH1rB,KAAKpQ,MAHD69B,EA3BD,EA2BL34B,KA3BK,IA4BLd,SAAU05B,OA5BL,aA6BLrxB,QAGEvH,EAAO24B,GAAa,GACpBz5B,EAAW05B,EACXrxB,OAlCG,SAoCDsxB,EAAgBN,EACtBv4B,EAAOA,GAAQ,GACfd,EAAWA,IAAY,EACvBqI,EAAUA,IAAW,GAajBxD,GAAuB,IAAZA,KACb7E,GAAW,EACXqI,GAAU,EACV0wB,EAAc,SAAC18B,GACb,MAAc,iBAAVA,EACKmB,GAASQ,KAAMqG,QAEjB,WAGTvD,EAAO,CACL,CACEwB,EAAG,eACH4b,EAAG0b,WAAW,GAAD,OAAI/0B,KAEnB,CACEvC,EAAG,eACH4b,EAAG,IAAM0b,WAAW,GAAD,OAAI/0B,OAK7B,IAUMg1B,EAAK,IAAItC,GAQf,OAPAsC,EAAGC,OAAOh5B,GAAMi5B,UAAU,CACxBhyB,KAAM,UACN1I,MAAO,IACP26B,UAAW,IACXC,GAAI,YAIJ,kBAAC9C,GAAD,CACE3yB,IAAKwH,KAAKgrB,WACVt4B,UAAW66B,EACXnC,WAAYj6B,EACZM,MAAOA,EACP45B,YAAaA,GACb,kBAACC,GAAD,CAAc4C,YAAa,IACzB,yBAAKx7B,UAAU,SACb,kBAAC,KAAD,CACEy7B,MA5DI,CACZ73B,EAAG,CACDyF,KAAM,MACNqyB,MAAO,CAAC,EAAG,IAEblc,EAAG,CACD9Z,IAAK,IAuDCgsB,OAAQA,EACR8I,SAAUA,EACVp4B,KAAM+4B,EACNrb,QAxBM,CAAC,EAAG,EAAG,EAAG,GAyBhB4a,QAASA,EACTiB,gBAAiBruB,KAAK6rB,iBACnBxvB,GAAW,kBAAC,KAAD,CAASiyB,WAAW,IAClC,kBAAC,KAAD,CAAOvyB,KAAK,QAAQwyB,YAAapB,IACjC,kBAAC,KAAD,CACE17B,MAAO,CAAE67B,YAAWkB,OAAQ,QAC5BnyB,QAASA,GAvCC,CACpB,YACA,SAAC/F,EAAWvE,GAAZ,MAA2B,CACzB0C,KAAM6B,EACNjG,MAAM,GAAD,QAAU,IAAJ0B,GAAS08B,QAAQ,GAAvB,QAoCG1yB,KAAK,gBACLwgB,SAAS,UACT/qB,MAAO,CACL,IACAqH,GAAuB,IAAZA,EAAgBk0B,EAAcY,GAE3C35B,SAAUA,MAIZi5B,GAAY93B,IACZ,yBAAKzC,UAAU,SACZu6B,GAAY,wBAAIv6B,UAAU,iBAAiBu6B,GAE3C93B,GACC,yBAAKzC,UAAU,YACK,oBAAVyC,EAAuBA,IAAUA,MAQpDw3B,GACC,wBAAIj6B,UAAU,UACX+4B,EAAWtuB,KAAI,SAAClM,EAAMgb,GAAP,OACd,wBAAI1a,IAAKN,EAAKqF,EAAG1E,QAAS,kBAAM,EAAK06B,kBAAkBr7B,EAAMgb,KAC3D,0BACEvZ,UAAU,MACVjB,MAAO,CACLi9B,gBAAkBz9B,EAAKo7B,QAAmBp7B,EAAKO,MAAd,UAGrC,0BAAMkB,UAAU,eAAezB,EAAKqF,GACpC,wBAASyF,KAAK,aACd,0BAAMrJ,UAAU,WAAhB,WACO4f,OAAOqc,MAAM19B,EAAK4H,SACnB,EACe,IAAf5H,EAAK4H,SACP41B,QAAQ,GAJZ,MAMA,0BAAM/7B,UAAU,SACbs6B,EAAcA,EAAY/7B,EAAKihB,GAAKjhB,EAAKihB,a,GAhR1CljB,IAAM4/B,eA2RThE,QAAaY,I,8EFxUtBqD,GAAW77B,EAAQ,MAgBV,SAASiQ,GAAT,GAKJ,IAJTnO,EAIQ,EAJRA,KACAg6B,EAGQ,EAHRA,SACAC,EAEQ,EAFRA,eACAh+B,EACQ,EADRA,KAEMowB,EAAgB2F,aAAqBkI,IAEnC7/B,EAASqB,cAATrB,KAHA,EAK4BH,IAAMa,UAAS,GAL3C,mBAKDo/B,EALC,KAKUC,EALV,KAuBFC,EAAY,yCAAG,+BAAA/uB,EAAA,sDACnB8uB,GAAe,GAET5d,EAAUzK,SAASuoB,cAAc,kBACjCC,EAAM,CACVC,OAAQ,EACRxZ,SAAS,4BAAD,OAAU5B,OAASzY,OAAO,kBAA1B,QACR4b,MAAO,CAAEtb,KAAM,OAAQwzB,QAAS,KAChCC,YAAa,CAAErB,MAAO,GACtBsB,MAAO,CAAEC,KAAM,KAAMj0B,OAAQ,SAAUk0B,YAAa,aAItDd,KAAW1oB,IAAIkpB,GAAKO,KAAKte,GAASue,OAbf,2CAAH,qDAgBlB,OACE,yBAAKn9B,UAAU,gBACXo8B,GACA,oCACE,kBAAC,KAAD,CACEt9B,MAAM,UACNkB,UAAU,8CACVd,QAnCoB,WAC5B,IAAIwb,EAAMpQ,YACR,qBACA,mEAFQA,CAGR8yB,KAAIC,WAKNnqB,OAAOoqB,KAAP,UAAe5iB,EAAf,eAAyBtY,EAAKhF,IAAM,YA2B5B2B,MAAO,CAAEC,SAAU,KAJrB,gBAOA,kBAAC,KAAD,CACEF,MAAM,UACNkB,UAAU,8CACVd,QA9CS,WACjBb,KA8CQU,MAAO,CAAEC,SAAU,KAJrB,gBAOA,kBAAC,KAAD,CACEF,MAAM,UACNkB,UAAU,8CACVd,QAASuvB,EACT1vB,MAAO,CAAEC,SAAU,KAJrB,gBAOA,kBAAC,KAAD,CACEF,MAAM,UACNkB,UAAU,8CACVd,QAASm9B,GAHX,6BAQHD,GACC,oCACqB,cAAlB3/B,EAAKY,UACJ,kBAAC,KAAD,CACEyB,MAAM,UACNkB,UAAU,yCACVd,QAASm9B,GAHX,gBAOF,kBAAC,KAAD,CACEv9B,MAAM,UACNkB,UAAU,+CAFZ,qBAKA,kBAAC,KAAD,CACElB,MAAM,UACNkB,UAAU,8CACV+C,QAASw5B,EACTr9B,QAASu9B,GAJX,+B,SA1GEtE,K,kBAAAA,E,kBAAAA,Q,SGXAoF,G,yCAAAA,K,sBAAAA,E,sBAAAA,E,sBAAAA,E,qBAAAA,Q,KAOL,IAAMC,GAAoB,CAC/B,iCACA,qBACA,6CACA,uCACA,iCACA,qBACA,4BCGa,SAASC,GAAT,GAIJ,IAHTr7B,EAGQ,EAHRA,KACAs7B,EAEQ,EAFRA,aACAC,EACQ,EADRA,SAEA,OACE,kBAAC,KAAD,CACEC,UAAW,CAAC,EAAG,EAAG,EAAG,GACrBC,WAAY,kBAAM,MAClB79B,UAAU,cACV,kBAAC,KAAS89B,MAAV,CACEC,OACE,yBAAK/9B,UAAU,wBACb,uBAASP,MAAM,wCACb,kBAACu+B,GAAA,EAAD,CACEh+B,UAAU,WACVjB,MAAO,CAAEiT,IAAK,EAAGyf,KAAM,IACvBvyB,QAASy+B,KALf,4BAWF9+B,IAAK,GACL,yBAAKmB,UAAU,gCAAf,wCACQoC,QADR,IACQA,OADR,EACQA,EAAM67B,SAEd,yBAAKj+B,UAAU,gCAAf,kCACOoC,QADP,IACOA,OADP,EACOA,EAAM87B,UAEb,yBAAKl+B,UAAU,gCAAf,wCACQoC,QADR,IACQA,OADR,EACQA,EAAM+7B,QAEd,yBAAKn+B,UAAU,gCAAf,4BAAkDoC,QAAlD,IAAkDA,OAAlD,EAAkDA,EAAMg8B,MACxD,yBAAKp+B,UAAU,gCAAf,wCACQoC,QADR,IACQA,OADR,EACQA,EAAMi8B,OAEd,yBAAKr+B,UAAU,gCAAf,kCACOoC,QADP,IACOA,OADP,EACOA,EAAMk8B,SAEb,yBAAKt+B,UAAU,gCAAf,4BACMoC,QADN,IACMA,OADN,EACMA,EAAMm8B,SAEZ,yBAAKv+B,UAAU,gCAAf,wCACQoC,QADR,IACQA,OADR,EACQA,EAAMo8B,MAEd,yBAAKx+B,UAAU,gCAAf,wCACQoC,QADR,IACQA,OADR,EACQA,EAAMq8B,UAEd,yBAAKz+B,UAAU,gCAAf,wCACQoC,QADR,IACQA,OADR,EACQA,EAAMs8B,UAEd,yBAAK1+B,UAAU,gCAAf,iCACQ,aAER,yBAAKA,UAAU,gCAAf,2BACO09B,IAGT,kBAAC,KAASI,MAAV,CACEC,OAAQ,yBAAK/9B,UAAU,eAAf,4BACRnB,IAAK,GACL,sBAAMuB,KAAN,CAAWyB,SAAO,EAACE,KAAK,SACtB,kBAAC,KAAM2G,MAAP,CAAa1I,UAAU,QACrB,kBAAC,KAAD,CAAOA,UAAU,QAAQrC,MAAM,KAA/B,gBAGA,kBAAC,KAAD,CAAOqC,UAAU,aAAarC,MAAM,KAApC,gBAGA,kBAAC,KAAD,CAAOqC,UAAU,aAAarC,MAAM,KAApC,mBAMN,kBAAC,KAASmgC,MAAV,CACEC,OAAQ,yBAAK/9B,UAAU,eAAf,4BACRnB,IAAK,GACL,sBAAMuB,KAAN,CAAWyB,SAAO,EAACE,KAAK,eACtB,kBAAC,KAAD,KACGy7B,GAAkB/yB,KAAI,SAAC7G,EAAGzC,GAAJ,OACrB,kBAAC,KAAD,CACEtC,IAAG,sBAAiBsC,GACpBnB,UAAWE,IAAG,kBAAmB,CAC/B,OAAQiB,EAAM,IAEhBoH,gBAAgB,EAChB5K,MAAK,UAAKwD,IACTyC,SAMX,kBAAC,KAASk6B,MAAV,CACEC,OAAQ,yBAAK/9B,UAAU,eAAf,4BACRnB,IAAK,GACL,yBAAKmB,UAAU,QACb,0BAAMA,UAAU,sBAAhB,eADF,IACsD,IACpD,0BAAMA,UAAU,sBAAhB,UAFF,iBAIA,yBAAKA,UAAU,aACb,0BAAMA,UAAU,sBAAhB,MADF,+B,ICjHAK,GAAYC,EAAQ,IAApBD,QAEAs+B,GAASC,GAATD,KAeO,SAASE,GAAT,GAKJ,IAAD,IAJRC,eAIQ,SAHRz6B,EAGQ,EAHRA,SACAnF,EAEQ,EAFRA,QACAyX,EACQ,EADRA,YAEA,OACE,uBAAOqV,UAAW,EAAG3nB,SAAUA,GAC7B,kBAAC,GAAD,CACE06B,gBAAc,EACdC,OAAO,EACPh/B,UAAU,YACVjB,MAAOkgC,GAAgBH,GACvB5/B,QAASA,GACRmB,GACCiI,cAAW,SAACzJ,EAAasC,GAAd,OACT,kBAACw9B,GAAD,CAAM9/B,IAAG,UAAKA,EAAL,YAAYsC,GAAO8Q,KAAMpT,EAAKY,MAAOZ,GAC3CwB,GACCiI,cAAW,SAAC1E,GAAD,OACT,kBAAC+6B,GAAD,CACE9/B,IAAK+E,EAAExG,GACP6U,KAAI,UAAKpT,EAAL,YAAY+E,EAAExG,IAClBqC,MAAOiC,YAAOkC,EAAExG,GAAI,CAAC,UAAW,QAASwG,QAG7ClC,YAAO,GAAI,CAAC7C,IARbwB,CASCsW,OAGNrL,IAfDjL,CAgBCsW,KAMV,SAASsoB,GAAgBH,GACvB,GAAKA,EAIL,MAAO,CACLhV,YAAa,GACb7qB,aAAc,GACd8wB,WAAY,OACZjQ,QAAS,GACTof,uBAAwB,EACxBC,wBAAyB,G,sBCvDrB9+B,GAAYC,EAAQ,IAApBD,QAYF++B,GAAiBh6B,aAAqB,GACtCi6B,GAAsBj6B,aAAqB,GAE3CjF,GAAWf,kBAAO,IAAKgB,MAAf,sFAAGhB,CAAH,yBAIRkgC,GAAUlgC,kBAAO,MAAV,qFAAGA,CAAH,oBAIPmgC,GAAwBngC,UAAOoN,IAAV,mGAAGpN,CAAH,8J,qHAoHJ,CACHmQ,SAAU,GACVsB,WAAY,KACZ/R,MAAO,wB,kHAO+B,CAAEyQ,SAAU,KA7GvD,SAASiwB,GAAT,GAAiE,IAAlCx/B,EAAiC,EAAjCA,UAAWjB,EAAsB,EAAtBA,MAAOqD,EAAe,EAAfA,KACtDuU,EAAyBvU,EAAzBuU,YAAa8oB,EAAYr9B,EAAZq9B,QAIrB,OAFAtnB,YAAc,CAAC,CAAEpW,KAAM,4BAAU,CAAEA,KAAM,8BAGvC,yBAAKhD,MAAOA,EAAOiB,UAAWE,IAAG,gBAAiBF,IAChD,uBAAKA,UAAU,QACb,uBAAKmE,KAAM,IACT,yBAAKnE,UAAU,4BAAf,4BACO,0BAAMA,UAAU,QAAhB,kCADP,qCAKJ,kBAACs/B,GAAD,MACA,uBAAKI,OAAQ,IACX,uBAAKv7B,KAAM,GACT,kBAAChE,GAAD,iBAAci/B,GAAd,CAA8Bt9B,MAAM,6BAClC,kBAAC,KAAD,CAAO69B,UAAQ,EAACn3B,UAAU,EAAO7K,MAAK,OAAE8hC,QAAF,IAAEA,OAAF,EAAEA,EAASjB,SAGrD,uBAAKr6B,KAAM,GACT,kBAAChE,GAAD,iBAAci/B,GAAd,CAA8Bt9B,MAAM,6BAClC,kBAAC,KAAD,CAAO69B,UAAQ,EAACn3B,UAAU,EAAO7K,MAAK,OAAE8hC,QAAF,IAAEA,OAAF,EAAEA,EAAStB,WAGrD,uBAAKh6B,KAAM,GACT,kBAAChE,GAAD,iBAAci/B,GAAd,CAA8Bt9B,MAAM,uBAClC,kBAAC,KAAD,CAAO69B,UAAQ,EAACn3B,UAAU,EAAO7K,MAAK,OAAE8hC,QAAF,IAAEA,OAAF,EAAEA,EAASnB,aAIvD,uBAAKoB,OAAQ,IACX,uBAAKv7B,KAAM,GACT,kBAAChE,GAAD,iBAAci/B,GAAd,CAA8Bt9B,MAAM,6BAClC,kBAAC,KAAD,CAAO69B,UAAQ,EAACn3B,UAAU,EAAO7K,MAAK,OAAE8hC,QAAF,IAAEA,OAAF,EAAEA,EAASrB,SAGrD,uBAAKj6B,KAAM,GACT,kBAAChE,GAAD,iBAAci/B,GAAd,CAA8Bt9B,MAAM,6BAClC,kBAAC,KAAD,CAAO69B,UAAQ,EAACn3B,UAAU,EAAO7K,MAAO,YAG5C,uBAAKwG,KAAM,GACT,kBAAChE,GAAD,iBAAci/B,GAAd,CAA8Bt9B,MAAM,6BAClC,kBAAC,KAAD,CAAO69B,UAAQ,EAACn3B,UAAU,EAAO7K,MAAK,OAAE8hC,QAAF,IAAEA,OAAF,EAAEA,EAAShB,cAIvD,uBAAKiB,OAAQ,IACX,uBAAKv7B,KAAM,GACT,kBAAChE,GAAD,iBAAci/B,GAAd,CAA8Bt9B,MAAM,6BAClC,kBAAC,KAAD,CAAO69B,UAAQ,EAACn3B,UAAU,EAAO7K,MAAK,OAAE8hC,QAAF,IAAEA,OAAF,EAAEA,EAASxB,YAGrD,uBAAK2B,OAAQ,EAAGz7B,KAAM,GACpB,kBAAChE,GAAD,iBAAci/B,GAAd,CAA8Bt9B,MAAM,uBAClC,kBAAC,KAAD,CAAO69B,UAAQ,EAACn3B,UAAU,EAAO7K,MAAK,OAAE8hC,QAAF,IAAEA,OAAF,EAAEA,EAASvB,cAIvD,2BACE,uBAAK/5B,KAAM,IACT,kBAAChE,GAAD,iBAAck/B,GAAd,CAAmCv9B,MAAM,6BACvC,yBACEqe,wBAAyB,CAAEC,OAAM,OAAEqf,QAAF,IAAEA,OAAF,EAAEA,EAASI,QAC5C9gC,MAAO,CACL+gC,SAAU,OACVC,WAAY,UACZnvB,aAAc,oBACdqnB,cAAe,EACfj0B,YAAa,QAMvB,2BACE,uBAAKG,KAAM,IACT,kBAAChE,GAAD,iBAAck/B,GAAd,CAAmCv9B,MAAM,6BACvC,kBAAC,KAAD,CAAO69B,UAAQ,EAACn3B,UAAU,EAAO7K,MAAO,YAI9C,2BACE,uBAAKwG,KAAM,IACT,kBAAChE,GAAD,iBAAck/B,GAAd,CAAmCv9B,MAAM,6BACvC,kBAAC,KAAD,CAAO69B,UAAQ,EAACn3B,UAAU,EAAO7K,MAAK,OAAE8hC,QAAF,IAAEA,OAAF,EAAEA,EAASpB,WAIvD,kBAACiB,GAAD,MACA,2BACE,uBAAKn7B,KAAM,IACT,kBAACo7B,GAAD,KACGl/B,GACCoK,aAAI,SAAC5L,GAAD,OACF,sBACEA,IAAKA,GAMJwB,GACCi2B,YAAGzuB,IAAI,GACPnF,IACAhB,YAAO,GAAI,CAAC7C,IAHbwB,CAICsW,IACA,sBAAI3W,UAAU,oBACXnB,GAGJwB,GACCiI,cACE,WAAkCnH,GAAlC,IAAGiH,EAAH,EAAGA,QAAYxE,EAAf,mCACE,yBAAK/E,IAAK+E,EAAExG,IACR,WACA,GAAIwG,EAAElD,OACJ,OACE,yBACEyf,wBAAyB,CAAEC,OAAQxc,EAAEsF,QAK3C,IAAM1G,EACJ,6BACGrB,EAAM,EADT,KACciH,EAAQpB,KACnBoB,EAAQzK,MAAQ,SAAMyK,EAAQzK,MAAQ,IAI3C,OAAIyK,EAAQ5G,QAER,6BACGgB,EACA8F,cACC,SACEqT,EACAqkB,GAFF,OAIE,yBAAKnhC,IAAK8c,EAAEve,GAAI4C,UAAU,QACvB,IAAIigC,OAAOD,EAAM,KADpB,KAC4BrkB,EAAE3U,QAGhCoB,EAAQ5G,UAMTgB,EAnCP,OAwCRd,YAAO,GAAI,CAAC7C,IA5CbwB,CA6CCsW,OAGNrL,IAlEDjL,CAmECsW,MAIR,kBAAC2oB,GAAD,MACA,uBAAKI,OAAQ,IACX,uBAAKv7B,KAAM,GACT,kBAAChE,GAAD,iBAAci/B,GAAd,CAA8Bt9B,MAAM,6BAClC,kBAAC,KAAD,CAAO0G,UAAU,MAGrB,uBAAKrE,KAAM,GACT,kBAAChE,GAAD,iBAAci/B,GAAd,CAA8Bt9B,MAAM,6BAClC,kBAAC,KAAD,CAAO0G,UAAU,MAGrB,uBAAKrE,KAAM,GACT,kBAAChE,GAAD,iBAAci/B,GAAd,CAA8Bt9B,MAAM,6BAClC,kBAAC,KAAD,CAAO0G,UAAU,OAIvB,uBAAKk3B,OAAQ,IACX,uBAAKv7B,KAAM,IACT,kBAAChE,GAAD,iBAAci/B,GAAd,CAA8Bt9B,MAAM,yCAClC,kBAAC,KAAD,CAAO0G,UAAU,MAGrB,uBAAKrE,KAAM,IACT,kBAAChE,GAAD,iBAAci/B,GAAd,CAA8Bt9B,MAAM,yCAClC,kBAAC,KAAD,CAAO0G,UAAU,OAIvB,kBAAC82B,GAAD,MACA,uBAAKt/B,UAAU,QACb,uBAAKmE,KAAM,IACT,yBAAKnE,UAAU,eAAf,uD,gECpPFK,GAAYC,EAAQ,IAApBD,QAMO,SAAS6/B,GAAT,GAA+D,IAApC7hC,EAAmC,EAAnCA,KAAMD,EAA6B,EAA7BA,SAAalB,EAAgB,oCACnEkF,EAAS+0B,eAAT/0B,KADmE,EAGpCc,eAA/BK,EAHmE,EAGnEA,aAAcE,EAHqD,EAGrDA,aAkCtB,OACE,kBAAC,KAAD,iBACMvG,EADN,CAEEsB,SAAO,EACPiB,MAAM,uCACNqE,UAAW,CACTC,WAAY,GACZC,YAAa,GACbC,aAAc,IAEhBxF,MAAO,IACPG,OAAQ,CACN,kBAAC,KAAD,CAAQC,IAAI,aAAaC,MAAM,UAAUI,QAASd,GAAlD,gBAGA,kBAAC,KAAD,CACES,IAAI,SACJC,MAAM,UACNI,QAlDS,WACfb,EAAKgC,GAAQ0W,KAASopB,aAAM,WAAvB9/B,CAAmCoD,IACtCrF,KAiDI4B,UAAU,QAJZ,iBAQF5B,SAAUA,EACVO,UAAU,EACVD,cAAc,IACd,kBAAC,KAAD,CACE+F,KAAK,QACLE,QAvDyC,CAC7C,CACElF,MAAO,2BACPmF,UAAW,QAEb,CACEnF,MAAO,qBACPmF,UAAW,UAEb,CACEnF,MAAO,eACPmF,UAAW,cAEb,CACEnF,MAAO,2BACPmF,UAAW,gBAEb,CACEnF,MAAO,uCACPmF,UAAW,gBAEb,CACEnF,MAAO,2BACPmF,UAAW,gBAiCTrC,WAAYH,EACZmB,aAAcA,K,IChBjB40B,GAFG93B,GAAYC,EAAQ,IAApBD,S,SAEH83B,K,kBAAAA,E,kBAAAA,Q,KAWL,IAAMiI,GAAMp/B,YAAOmrB,aAAO,GAAQvqB,YAAO,GAAIA,YAAO,I,4HAsQ/B,CAAE6vB,KAAF,OAAazf,IAAK,M,0GA6BoB,CAAEvT,MAAO,K,0GAQT,CAAEA,MAAO,K,0GAQT,CAAEA,MAAO,K,0GA6DvC,CAAEsxB,WAAY,S,2GAqCN,CAAEgQ,WAAY,W,6HA0E9B,CAAEM,MAAF,QAAcruB,IAAK,MC3iBzBsuB,OD8EA,SAAsBpjC,GACnCqjC,YAAS,4BAETpoB,YAAc,CAAC,CAAEpW,KAAM,4BAAU,CAAEA,KAAM,0CAEzCkV,aAAuB,GAL0B,IAOzCxa,EAASqB,cAATrB,KAEF4Z,EAA0BzB,cAEhCtY,IAAMkL,WAAU,WACQ,SAAlB/K,EAAKY,UAAyC,QAAlBZ,EAAKY,UACnCmjC,MAED,CAAC/jC,EAAKY,WAfwC,MAiBlC,IAAKyH,UAAbC,EAjB0C,sBAmBvB07B,eAAnBC,EAnB0C,sBAqBnBpkC,IAAMa,WArBa,mBAqB1C6F,EArB0C,KAqBjCC,EArBiC,OAuBVrC,cAvBU,mBAuB1C+/B,EAvB0C,KAuB9BH,EAvB8B,OAyBc5/B,cAzBd,mBAyB1CggC,GAzB0C,KAyBlBC,GAzBkB,KA2BzCz+B,GAA4BiyB,eAA5BjyB,KA3ByC,GA6BL9F,IAAMa,SAAmB,CACnEg7B,GAAU2I,aACV3I,GAAU4I,gBA/BqC,qBA6B1CC,GA7B0C,MA6B1BC,GA7B0B,MAoCzCtmB,GAAWzd,EAAMkW,MAAjBuH,OAGFumB,GAAK7e,aAAYnlB,EAAM2S,SAASyS,QAvCW,GA0CNhmB,IAAMa,SAAS+jC,GAAGC,YA1CZ,qBA0C1CA,GA1C0C,MA0C9BC,GA1C8B,MA4CjD9kC,IAAMkL,WAAU,WACd45B,GAAqBF,GAAGC,cACvB,CAACD,GAAGC,aAEP,IAAM5iC,GAAO2iB,aAAcvG,GAAOvd,IAhDe,GA4D7C8Y,aAAkB,CACpB9Y,GAAI+jC,GACJ/+B,KAAM7D,KAXNkE,GAnD+C,GAmD/CA,MACA4+B,GApD+C,GAoD/CA,SACA9qB,GArD+C,GAqD/CA,eACAI,GAtD+C,GAsD/CA,YACA2qB,GAvD+C,GAuD/CA,cACAC,GAxD+C,GAwD/CA,gBACAC,GAzD+C,GAyD/CA,cACAC,GA1D+C,GA0D/CA,oBACApL,GA3D+C,GA2D/CA,oBAMF/5B,IAAMkL,WAAU,WACd,IAAMk6B,EAAiB,SAACp9B,GAElBA,EAAIq9B,SAA2B,KAAhBr9B,EAAIs9B,SACrBv5B,KAGG/D,EAAIq9B,SAA2B,MAAhBr9B,EAAIs9B,SACtBf,MAMJ,OAFA3tB,OAAO8Q,iBAAiB,UAAW0d,GAE5B,WACLxuB,OAAO+f,oBAAoB,UAAWyO,MAEvC,IAEHplC,IAAMkL,WAAU,WACdzC,EAAK0C,eAAe8O,MACnB,CAAC7O,KAAKC,UAAU4O,MAEnBja,IAAMkL,WAAU,WACV05B,GAAGxD,cACL34B,EAAK0C,eAAe,CAAEi2B,aAAcwD,GAAGxD,eAErCwD,GAAGW,UACL98B,EAAK0C,eAAe,CAAEo6B,SAAUX,GAAGW,aAEpC,CAACn6B,KAAKC,UAAUu5B,MAEnB,IAAMY,GAAqB,SAACnkC,GAAD,OAAmB,WAC5CsjC,IAAkB,SAAC1vB,GAAD,OAChBA,EAAK1N,SAASlG,GAAS4T,EAAK5N,QAAO,SAAAC,GAAC,OAAIA,IAAMjG,KAA9C,sBAA2D4T,GAA3D,CAAiE5T,SAI/DokC,GAAqBf,GAAen9B,SAASs0B,GAAU2I,cACvDkB,GAAsBhB,GAAen9B,SAASs0B,GAAU4I,eAxGb,GA0G3B3f,aAAgB,CACpC3jB,YAAa,YAAkB,IAAfL,EAAc,EAAdA,GACdwS,KAAQQ,KAAK9F,YAAQ,MAAOlN,EAAfkN,CAAmB23B,KAChC,IAAQtqB,QAAQ,iDAHXuqB,GA1GwC,wBAiHxBrgB,aAAgB,CACvCpkB,YAAa,kBAAM,IAAQka,QAAQ,iDAD5BwqB,GAjHwC,qBAqH3C95B,GAAW,WACftD,EAAKE,iBAAiBC,MAAK,SAAAC,GACzB,IAAIi9B,EAAO,mDACNj9B,GACCwV,GAAOvd,GAAK,CAAEA,GAAIud,GAAOvd,IAAO,IACjCgF,IAHM,IAITgG,QAASuO,MAGKgE,GAAOvd,GAAK+kC,GAAeD,IAEnCE,OAIZ7pB,YACE,kBAAChI,GAAD,CAIEnO,KAAMmU,GACN6lB,SAAUuE,EACVtE,eAAgBmE,EAChBniC,KAAMgK,MAIV,IAhJiD,GAwJjB/L,IAAMa,UAA8B,GAxJnB,qBAwJ1C2hC,GAxJ0C,MAwJjCuD,GAxJiC,SA0Jb/lC,IAAMa,SAAS,GA1JF,qBA0J1CmlC,GA1J0C,MA0J9BC,GA1J8B,MA2M3CC,GAAqBlmC,IAAMkB,aAC/B,SAACZ,EAAD,GAAyD,IAA9CwF,EAA6C,EAA7CA,KACTmgC,GACE3/B,KAAK6/B,MACFpiC,GAAQqC,IAAQiB,YAAOtD,GAAQ8hB,IAAKngB,OAASmD,IAA7C9E,CAAqD+B,GAAQK,GAC5D,QAIR,CAACA,KAGHnG,IAAMkL,WAAU,WACdg7B,GAAmB,KAAMz9B,EAAK29B,oBAC7B,CAACjgC,KAEJ,IAQMkgC,GAAU,GAAKvC,GAAI2B,IAAsB3B,GAAI4B,IAE7CY,GAA0CtmC,IAAMsB,SACpD,kBACEoD,YAAOgB,KAAOJ,YAAO8+B,IAAkB,SAAAtlB,GAAG,OACxCzX,aAAO,SAACC,GAAD,OACLvD,GAAQwD,YAASuX,GAAM1Z,YAAO,GAAI,CAAC,SAAnCrB,CAA6CuD,KAD/CD,CAEE+8B,KAHJ1/B,CAIEgC,KACJ,CAACA,IAGK06B,GAAiBxgC,EAAjBwgC,aAER,OACE,kBAAC,KAAD,CAAkB19B,UAAU,eACzB4gC,IACC,kBAACV,GAAD,CACE7hC,KAvDgB,SAAC8G,GACvB,IAAImc,EAAO,sBACN3K,GAAY0qB,KADN,YAENl8B,EAAOsF,KAAI,SAAA7G,GAAC,kCACVA,GADU,IAEbwkB,UAAU,EACVhrB,GAAG,GAAD,OAAKwG,EAAExG,GAAP,aAAc2J,uBAIpBsvB,GAAoB/U,IA8CdljB,SAAUyiC,KAGd,4BACA,kBAAC,KAAD,KACE,uBACE97B,KAAMA,EACNM,WAAYs7B,EAAa,OAAS,QAClC3gC,UAAU,WACV6iC,eAAgBL,KACdT,IACA,uBAAStiC,MAAM,wCACb,sBACEO,UAAU,8HAEVd,QAAS4iC,GAAmB3J,GAAU2I,cAHxC,MAEgB,IAEd,kBAACva,EAAA,EAAD,CAAevmB,UAAU,cAI/B,uBAAK0/B,OAAQ,IACVqC,IACC,uBAAK59B,KAAM,GACT,kBAAC,KAAD,CACE2+B,iBAAkB,CAAC,EAAG,GACtBjF,WAAY,kBAAM,MAClB79B,UAAU,cACV,kBAAC,KAAS89B,MAAV,CACEC,OACE,yBAAK/9B,UAAU,wBAAf,2BAEE,uBAASP,MAAM,wCACb,kBAACsjC,EAAA,EAAD,CACE/iC,UAAU,0BACVjB,MAAO,CAAEiT,IAAK,EAAGquB,MAAO,GACxBnhC,QAAS4iC,GAAmB3J,GAAU2I,kBAK9CjiC,IAAK,GACL,uBAAKmB,UAAU,8BACb,uBAAKmE,KAAM,GAAInE,UAAU,QACvB,sBAAKA,UAAU,gBAAf,4BAGA,sBAAMI,KAAN,CAAWyB,SAAO,EAACE,KAAK,gBACtB,kBAAC,KAAD,CAAO/B,UAAU,QAAQwI,UAAU,MAGvC,uBAAKrE,KAAM,GAAInE,UAAU,QACvB,sBAAKA,UAAU,gBAAf,4BAGA,sBAAMI,KAAN,CAAWyB,SAAO,EAACE,KAAK,YACtB,kBAAC,KAAD,CAAO/B,UAAU,QAAQwI,UAAU,MAGvC,uBAAKrE,KAAM,GAAInE,UAAU,QACvB,sBAAKA,UAAU,gBAAf,4BAGA,kBAAC,KAAD,CACEgjC,YAAU,EACVhjC,UAAU,QACVwI,UAAU,EACVy6B,cAAc,EACdtlC,MAAOwjC,GACP+B,SA1KG,SAACvlC,GAC1BsF,EAAWtF,IA0KW0G,SAvKG,SAAC1G,GAC1ByjC,GAAqBzjC,KAuKEilC,GAAsBn4B,KAAI,SAAA7G,GAAC,OAC1B,kBAAC,KAAO8G,OAAR,CAAe7L,IAAK+E,EAAExG,GAAIO,MAAOiG,EAAExG,IAChCwG,EAAE7B,WAKG,aAAbs/B,IACC,uBAAKl9B,KAAM,GAAInE,UAAU,QACvB,kBAAC,GAAD,CACE8+B,QAASA,GACT5/B,QAvKA,SACxBmsB,EACA8X,GAII,IAAD,EACH9X,EAAE+X,iBADC,MAGiB/iC,IAClB,iCAAEgjC,EAAF,KAAUhhC,EAAV,iBAA8B,CAACghC,EAAKhpB,YAAK,IAALA,CAAUhY,MAC9CihC,YAAM,KACN5hC,YAAO,GAAI,CAAC,SAHMrB,CAIlB8iC,GAPC,mBAGIE,EAHJ,KAGSpxB,EAHT,KASc,aAAbovB,IACFE,GAAgB8B,GAGbpxB,GAILiB,OAAOqwB,OAAO,CACZC,SAAU,SACV/R,KAAM,EACNzf,IAAG,UAAEmC,SAASC,eAAenC,UAA1B,aAAE,EAA+B+Z,aA8Id3nB,SA5KA,SAACy6B,GACzBuD,GAAavD,IA4KWnoB,YAAaA,QAMvB,kBAAC,KAASmnB,MAAV,CACEC,OAAQ,yBAAK/9B,UAAU,eAAf,4BACRnB,IAAK,GACL,2BACE,uBAAKsF,KAAM,IACT,kBAAC,KAAD,MACA,yBACEnE,UAAU,wCACVd,QAAS2hC,IACT,kBAAC4C,EAAA,EAAD,CAAczjC,UAAU,SAH1B,eAaZ,uBAAKmE,KAAMw+B,KACPhC,GACA,oCACE,yBAAK3gC,UAAU,uCACb,uBAAOgsB,UAAW,GAChB,sBACEhsB,UAAWE,IACT,kBACA,oCACA,uBACA,sCAGF,6BACqB,SAAlBzD,EAAKY,SACF,eACA,eAAgB,IAHtB,eAKE,yBAAK2C,UAAU,6BAEjB,kBAAC,GAAD,CACEmG,QAASm8B,GACT7/B,MAAK,UAAK6/B,GAAL,KACLvjC,MAAO,CAAEN,MAAO,GAAIsF,WAAY,GAChC2tB,OAAQ,QAKhB,yBAAK1xB,UAAU,yBACb,kBAAC,KAAD,CACEqJ,KAAK,gBACLu0B,UAAWyD,GACXh9B,SAAUk9B,GACV5hC,OAAQ2hC,GACRoC,aAAc,EACd/W,YAAa6U,GACbxhC,UAAU,UACTK,GACCoK,aAAI,SAAC42B,GAAD,OACF,kBAAC,KAAKxT,QAAN,CACExe,UAAQ,EACRxQ,IAAKwiC,EACLgC,IACE,sBACEM,iBAAe,EACfC,gCAA8B,EAC9BC,YAAY,EACZ7jC,UAAU,eAEVqE,SAAUo9B,GAAoBJ,IAC7BA,IAGL,uBACEl9B,KAAM,GACNnE,UAAU,6CACTqhC,IACChrB,EAAwBxB,wBACxB,yBACE7U,UAAU,YACVmgB,wBAAyB,CACvBC,OAAM,OAAEhe,SAAF,IAAEA,QAAF,EAAEA,GAAMy9B,UAIpB,kBAAC,KAAD,CAEE5f,WAAS,EACTtJ,YAAaA,GAAY0qB,GACzBtL,gBAAiBM,UAKzB/qB,IArCDjL,CAsCCsW,IACF,kBAAC,KAAKkX,QAAN,CAAchvB,IAAI,WAAWwkC,IAAI,YAC9BhjC,GACCoK,aAAI,SAAC42B,GAAD,OACF,yBAAKxiC,IAAKwiC,EAAUrhC,UAAU,iBAvNjC,SAACqhC,GACtB,OAAOhhC,GAAQi2B,YAAGzuB,IAAI,GAAInF,IAAQhB,YAAO,GAAI,CAAC2/B,IAAvChhC,CAAmDsW,IACxD,wBAAIvZ,GAAIikC,EAAUrhC,UAAU,QACzBqhC,GAED,KAmNuByC,CAAezC,GACfhhC,GACC0f,aAAe,CAAE/f,UAAW,SAC5B0B,YAAO,GAAI,CAAC2/B,IAFbhhC,CAGCsW,QAGNrL,IAVDjL,CAWCsW,QAMXgqB,GACC,yBAAK3gC,UAAU,2CACb,yBAAK5C,GAAG,WACR,kBAAC,GAAD,CACEgF,KAAM,CACJ2hC,SAAUxtB,GACVkpB,QAASr9B,GACTuU,oBAOTqrB,IACC,uBAAK79B,KAAM,GACT,kBAACs5B,GAAD,CACEr7B,KAAMA,GACNs7B,aAAcA,GACdC,SAAUmE,GAAmB3J,GAAU4I,oBAK7CiB,IACA,uBAASviC,MAAM,wCACb,sBACEO,UAAU,8HAEVd,QAAS4iC,GAAmB3J,GAAU4I,eAHxC,OAEiB,IAEf,kBAACza,EAAA,EAAD,CAActmB,UAAU,kBE7iBzB1D,OAAM6V,MAAK,kBAAM,mCCAjB7V,OAAM6V,MAAK,kBAAM,mCCAjB7V,OAAM6V,MAAK,kBAAM,yDCAjB7V,OAAM6V,MAAK,kBAAM,yDCAjB7V,OAAM6V,MAAK,kBAAM,mCCEnB6xB,IAFE1nC,IAAM6V,MAAK,kBAAM,wDAEN7V,IAAM6V,MAAK,kBAAM,yDAE9B8xB,GAAa3nC,IAAM6V,MAAK,kBAAM,kCCJ5B7V,OAAM6V,MAAK,kBAAM,yDCAjB7V,OAAM6V,MAAK,kBAAM,mCCkCnB+xB,GAAuB,oBACvBC,GAAe,gBACflC,GAAW,UAAMkC,GAAN,QACXC,GAAoB,UAAMF,GAAN,QACpBG,GAAsB,UAAMH,GAAN,WACtB5H,GAAiB,kBACjBgI,GAA4B,6BAC5BC,GAAc,eACdC,GAAqB,sBACrBC,GAAc,eACdC,GAAgB,sBAChBC,GAAW,UAAMF,GAAN,QACXG,GAAoB,qBACpBC,GAAsB,uBACtBC,GAAgB,qBAChBC,GAAkB,mBAExB,SAASpyB,KAAa,IACnBlW,EAASqB,cAATrB,KAER,MAAM,GAAN,mBAcwB,SAAlBA,EAAKY,SACL,CACE,CACED,GAAI,IACJqC,MAAO,2BACP2B,KAAM2jC,GACNtyB,UAAWuyB,KAGf,IAvBN,YAwBwB,QAAlBvoC,EAAKY,SACL,CACE,CACED,GAAI,IACJqC,MAAO,2BACP2B,KAAMmjC,GACN9xB,UAAWwyB,KAGf,IAjCN,YAkCwB,SAAlBxoC,EAAKY,SACL,CACE,CACED,GAAI,MACJqC,MAAO,2BACP2B,KAAMojC,GACN/xB,UAAWyyB,KAGf,IA3CN,CA4CE,CACE9nC,GAAI,EACJqC,MAAO,2BACP2B,KAAMk7B,GACN7pB,UAAW0yB,GAEb,CACE/nC,GAAI,GACJqC,MAAO,2BACP2B,KAAM6gC,GACNxvB,UAAW6tB,IAEb,CACEljC,GAAI,GACJqC,MAAO,2BACP2B,KAAM+iC,GACN1xB,UAAW6tB,IAEb,CACEljC,GAAI,MACJqC,MAAO,2BACP2B,KAAMkjC,GACN7xB,UAAW2yB,IAEb,CACEhoC,GAAI,GACJqC,MAAO,iCACP2B,KAAMyjC,GACNpyB,UAAW4yB,IAEb,CACEjoC,GAAI,GACJqC,MAAO,mDACP2B,KAAMwjC,GACNnyB,UAAW6yB,IAEb,CACEloC,GAAI,GACJqC,MAAO,2BACP2B,KAAM0jC,GACNryB,UAAW8yB,IAEb,CACEnoC,GAAI,GACJqC,MAAO,2BACP2B,KAAM,SACN9C,SAAU,CACR,CACElB,GAAI,GACJqC,MAAO,uCACP2B,KAAMqjC,GACNhyB,UAAWuxB,IAEb,CACE5mC,GAAI,GACJqC,MAAO,uCACP2B,KAAMsjC,GACNjyB,UAAWwxB,IAEb,CACE7mC,GAAI,GACJqC,MAAO,uCACP2B,KAAMujC,GACNlyB,UAAWwxB,MAIjB,CACE7mC,GAAI,EACJqC,MAAO,6CACP2B,KAAM,kBACN9C,SAAU,CACR,CACElB,GAAI,EACJqC,MAAO,uCACP2B,KAAM8iC,GACNzxB,UAAW+yB,GAEb,CACEpoC,GAAI,EACJqC,MAAO,uCACP2B,KAAMijC,GACN5xB,UAAWgzB,GAEb,CACEroC,GAAI,EACJqC,MAAO,uCACP2B,KAAMgjC,GACN3xB,UAAWgzB,S,gHCzLN,SAASC,IACtB,OACE,sBAAQC,OAAR,CACE3lC,UAAU,0DACVjB,MAAO,CAAEgxB,WAAY,uBAFvB,uE,kBCHJ6V,EAAOC,QAAU,CACflgC,QAHc,UAId4R,UAAW,UACXuuB,OAAQ,UACRvmC,SAAU,UACV2S,UAAW,4BACX6zB,SAAU,UACVC,MAAO,UACPC,IAAK,CACHH,OAAQ,UACRngC,QAAS,UACT4R,UAAW,WAEb2uB,MAAO,CACL5Z,GAhBY,WAkBd6Z,MAAO,CACLC,KAAM,qBAER1hC,WArBc,Y,iICkBV2hC,EAAejnC,kBAAO,KAAV,2EAAGA,CAAH,inBA8BZ,SAAAC,GAAC,MACW,YAAZA,EAAEP,OACFqf,cADA,sHAGkB,SAAA9e,GAAC,OAAIA,EAAEC,MAAM2mC,IAAItgC,WACnB,SAAAtG,GAAC,OAAIA,EAAEC,MAAM2mC,IAAItgC,WAMf,SAAAtG,GAAC,OAAIA,EAAEC,MAAM2mC,IAAI1uB,aACf,SAAAlY,GAAC,OAAIA,EAAEC,MAAM2mC,IAAI1uB,gBAIrC,SAAAlY,GAAC,MACW,YAAZA,EAAEP,OACFqf,cADA,8JAGW,SAAA9e,GAAC,OAAIA,EAAEC,MAAM2mC,IAAItgC,WACJ,SAAAtG,GAAC,OAAIA,EAAEC,MAAM2mC,IAAItgC,WAM5B,SAAAtG,GAAC,OAAIA,EAAEC,MAAMqG,WAEA,SAAAtG,GAAC,OAAIA,EAAEC,MAAM2mC,IAAItgC,cAI3C,SAAAtG,GAAC,MACW,WAAZA,EAAEP,OACFqf,cADA,qIAEW,SAAA9e,GAAC,OAAIA,EAAEC,MAAM2mC,IAAIH,UACJ,SAAAzmC,GAAC,OAAIA,EAAEC,MAAM2mC,IAAIH,UAM5B,SAAAzmC,GAAC,OAAIA,EAAEC,MAAM2mC,IAAIH,UAEJ,SAAAzmC,GAAC,OAAIA,EAAEC,MAAM2mC,IAAIH,aAI3C,SAAAzmC,GAAC,MACU,SAAXA,EAAEgK,MACF8U,cADA,wMAOW9e,EAAEC,MAAMqG,YAYnB,SAAAtG,GAAC,MACU,UAAXA,EAAEoF,MACF0Z,cADA,yBA8BS,SAASmoB,EAAT,GAMJ,IAJThoC,EAIQ,EAJRA,SACAyE,EAGQ,EAHRA,QAEG7F,GACK,EAFRqpC,WAEQ,oDAOR,OACE,kBAACF,EAAD,iBAAkBnpC,EAAlB,CAAyB6F,QAASA,IAyBvBzE,K,6HCtIFkQ,EAAW,I,iDApDtBiS,SAAW,G,KACXhE,WACE+pB,gPAAYC,oBACZ,0E,qDAGA,OAAOD,I,kCAGP,OAAOA,gPAAYE,qBAAuB,K,+BAG1C,MAAM,QAAN,OACEF,gPAAYG,iBAAmB,qF,6BAIjC,MAAM,GAAN,OAAUzzB,OAAOrD,SAAS+2B,SAA1B,aAAuC1zB,OAAOrD,SAASg3B,MAAvD,OAA8Dv5B,KAAKyK,YAAnE,S,iCAGA,MAAM,MAAN,OAAazK,KAAKyK,e,qCAGlB,OACEyuB,gPAAYM,0BACXx5B,KAAK2V,SAAW,2B,gCAInB,MAAOujB,qD,gCAGP,MACEA,0D,gCAKF,QACoB,qBAAXtzB,SACPA,OAAOiB,WACPjB,OAAOiB,SAASoP,iB,gCAGJ9C,GACdnT,KAAKmT,SAAWA,GAAY,K,kCAEZ/F,GAChBpN,KAAKmP,WAAa/B,M,MAuBPlM,O,gCCtEf,0KAAO,IAAMpJ,EAAuB,eAACtD,EAAD,uDAAiB,EAAGilC,EAApB,6CAA0C,CAC5EC,SAAU,CACRC,GAAI,CAAE9iC,KAAMrC,GACZolC,GAAI,CAAE/iC,KAAMrC,IAEdqlC,WAAY,CACVF,GAAI,CAAE9iC,KAAM4iC,GAAW,GAAKjlC,GAC5BolC,GAAI,CAAE/iC,KAAM4iC,GAAW,GAAKjlC,MAInBiE,EAAmB,CAC9BkE,UAAW,SAACtM,GACV,OAAKA,EAGE,UAAGA,GAAQ2M,QAAQ,wBAAyB,KAF1C3M,GAIX0M,OAAQ,SAAC1M,GAAD,OACLA,EAAQA,EAAM2M,QAAQ,cAAe,IAAM3M,IAGnCsI,EAAW,CACtBgE,UAAW,SAACtM,GACV,OAAKA,EAGE,YAAKA,GAAQ2M,QAAQ,wBAAyB,KAF5C3M,GAIX0M,OAAQ,SAAC1M,GAAD,OACLA,EAAQA,EAAM2M,QAAQ,cAAe,IAAM3M,IAGnCwI,EAAU,CAErB6D,IAAK,IACLC,UAAW,SAACtM,GACV,OAAKA,EAGC,GAAN,OAAUA,EAAV,KAFSA,GAIX0M,OAAQ,SAAC1M,GAAD,OACLA,EAAQA,EAAM2M,QAAQ,IAAK,IAAM3M,IAGzBypC,EAAQ,CACnBC,SAAU,CAAEA,UAAU,EAAMv6B,QAAS,kCACrCw6B,OAAQ,CACND,UAAU,EACVh+B,KAAM,SACNyD,QAAS,iCACTuuB,UAJM,SAII19B,GACR,OAAKA,EAGEiiB,OAAOjiB,GAFLA,IAKb4pC,QAAS,CACPF,UAAU,EACVv6B,QAAS,8EACT06B,QAAS,IAAIj9B,OAAO,eAEtBk9B,SAAU,CACRJ,UAAU,EACVv6B,QAAS,kDACT06B,QAAS,IAAIj9B,OAAO,iB,weCvCYjK,EAAQ,IAApCD,E,EAAAA,QAASmgB,E,EAAAA,eAEV,SAASrY,EAA4C3G,GAIxD,IACMjD,EAAsCiD,EAAtCjD,KAAM2J,EAAgC1G,EAAhC0G,SADb,EAC6C1G,EAAtBsF,oBADvB,MACsC,GADtC,IAG6BxK,IAAMa,SAClCuE,YAAOoF,EAAc,CAAC,WAAYvI,IAJnC,mBAGM6J,EAHN,KAGes/B,EAHf,KAaD,MAAO,CAAEt/B,UAASC,SAND,SAAClD,GAChB,IAAMwiC,EAAannB,EAAepY,EAASjD,GAC3CuiC,EAAWC,GACXz/B,EAAS,2BAAK3J,GAAN,IAAY6J,QAASu/B,OAM1B,IAAMC,EAAqB,WAAO,IAAD,EACZ5xB,cAAnB0qB,EAD+B,oBAGtC,MAAO,CACLzf,QAAS,iBAAO,IAChB7e,KAAM,CACJI,QAASk+B,EACTj+B,MAAOC,YAAOg+B,GACd/9B,WAAYC,KAAKC,MAAMH,YAAOg+B,GAAmB,IAAM,GAEzD39B,SAAS,IAIA09B,EAAwB,WACnC,OAAOzqB,eAGIE,EAAoB,SAAC1U,GAA6C,IAAD,EAC3BqmC,YAC/CrmC,GADMkV,EADoE,EACpEA,eAAgBC,EADoD,EACpDA,YAAgBtU,EADoC,kDAK5C6U,cAL4C,mBAKrEmqB,EALqE,KAK3DyG,EAL2D,KA8CtEC,EAAe,WACnB,IAAMC,EAAO3nC,EACX4nC,IACAvmC,YAAO,EAAG,IACV0I,IACA89B,IACAC,aAAK,SAACz6B,EAAQC,GAAT,OAAoBD,EAAIC,KAC7BrC,IANWjL,CAOXsW,GAEFD,GAAe,SAAAnF,GAAI,kCAAUA,GAAV,oDAAwBy2B,GAAS,QACpDF,EAAY,2BAAD,OAAQE,KAGfI,EAAkB,SAACC,GACvB3wB,YAAQ,CACNjY,MAAO,+DACP+C,QAAS,qHACTnE,KAAM,WACJqY,GAAe,SAAAnF,GAAI,OAAI+2B,YAAK,CAACD,GAAY92B,MAErC8vB,IAAagH,GACfP,EACEznC,EACE6nC,IACAvkC,aAAO,SAAC9E,GAAD,OAAiBA,IAAQwpC,KAChC/8B,IAHFjL,CAIEsW,QAoCZ,OAAO,2BACFtU,GADL,IAEEg/B,WACA1qB,cACAmxB,cACApxB,iBACA4qB,cAlBoB,SACpBjW,EAIAkd,IAE2B,QAAXA,EAAmBR,EAAeK,GAE1C/c,IAURkW,gBAzGsB,SAAC3D,GACvBkK,EAAYlK,IAyGZ4D,cAtGoB,SAACnU,GACrB,IAAMmb,EAAcl9B,YAAKqL,GAEzBD,EACErW,EACE8K,IACAV,aAAI,SAAC5L,GAAD,sBAAqBA,EAAM8X,EAAY9X,OAC3CspC,aAAK,SAACz6B,EAAWC,GACf,IAAM86B,EAASpb,EAAME,QAAQ7f,GACvBg7B,EAASrb,EAAME,QAAQ5f,GAE7B,OAAgB,IAAZ86B,IAA6B,IAAZC,EACZD,EAASC,GAEF,IAAZD,GACM,GAEM,IAAZC,EACK,EAGEF,EAAYjb,QAAQ7f,GACpB86B,EAAYjb,QAAQ5f,MAIjCrC,IAtBFjL,CAuBEsW,KA4EJoxB,eACAK,kBACA3G,oBAxC0B,SAAC4G,GAAD,OAAuB,SACjD/jC,GAEA,IAAMqkC,EAAarkC,EAAIC,OAAOqkC,UAE9BlyB,GAAe,SAAAnF,GAAI,OACjBlR,EACE8K,IACAV,aAAI,SAAC5L,GAAD,sBACDA,IAAQwpC,EAAYM,EAAa9pC,EAAM0S,EAAK1S,OAE/CyM,IALFjL,CAMEkR,MAEJu2B,EAAYa,KA2BZtS,oBAlH0B,SAACj0B,GAC3BsU,GAAe,SAAAnF,GAAI,kCAAUA,GAAV,kBAAiB8vB,EAAWj/B,WAqHtCymC,EAAoB,WAA4C,IAAD,yDAAP,GAAjCprC,EAAwC,EAAxCA,YAAwC,EAC5BuY,cAD4B,mBACnE0qB,EADmE,KAClDoI,EADkD,KAGpEznB,EAAU,SAAClc,GACf,IAAI/H,EAAK2J,cACLua,EAAO,sBACNof,GADM,4BAGJv7B,GAHI,IAIP/H,KACAmkB,UAAWC,MACXC,aAAcD,MAASzY,OAAO,oBAC9B2Y,UAAWF,MACXG,aAAcH,MAASzY,OAAO,wBAIlC+/B,EAAmBxnB,GAEnBM,IAAMnO,IAAI,0BAA2B6N,GAEjC7jB,GACFA,EAAY,2BAAK0H,GAAN,IAAc/H,SAI7B,MAAO,EAAC,EAAOikB,IAGJ0nB,EAAoB,WAA4C,IAAD,yDAAP,GAAjCtrC,EAAwC,EAAxCA,YAAwC,EAC5BuY,cAD4B,mBACnE0qB,EADmE,KAClDoI,EADkD,KAGpEznB,EAAU,SAAClc,GACf,IAAI0I,EAAQ6yB,EAAgB5e,WAAU,SAAAle,GAAC,MAAI,UAAGA,EAAExG,MAAL,UAAiB+H,EAAO/H,OAC/DkkB,EAAU7f,YACZoM,EADkB,YAAC,eAGd1I,GAHa,IAIhBuc,UAAWF,MACXG,aAAcH,MAASzY,OAAO,sBAEhC23B,GAGFoI,EAAmBxnB,GACnBM,IAAMnO,IAAI,0BAA2B6N,GAEjC7jB,GACFA,KAIJ,MAAO,EAAC,EAAO4jB,IAGJ2nB,EAAoB,SAAC,GAM3B,IALL5mC,EAKI,EALJA,KACAghB,EAII,EAJJA,SAcA,OATqB,WACnBD,YAAe,CACbC,SAAS,GAAD,OAAKA,EAAL,aAAqB,OAAJhhB,QAAI,IAAJA,OAAA,EAAAA,EAAML,OAAQ,GAA/B,YAAqCyf,MAASzY,OACpD,mBAEFqU,KAAMhb,Q","file":"static/js/main.c3658239.chunk.js","sourcesContent":["import React from 'react'\n// import { isNil } from 'ramda'\nimport Cookies from 'js-cookie'\nimport { User, divisions } from '@/services/authService'\n\nexport type LogoutFn = (params?: { onCompleted?: () => any }) => any\n\nexport type AuthContextType = {\n  logout: LogoutFn\n  isAuthenticated: boolean\n  user: User\n  setUser: React.Dispatch<React.SetStateAction<User | null>>\n  setIsAuthenticated: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const AuthContext = React.createContext<AuthContextType>({\n  isAuthenticated: false,\n  user: {} as User,\n  logout: () => ({}),\n  setUser: (_: React.SetStateAction<User | null>) => ({}),\n  setIsAuthenticated: (_: React.SetStateAction<boolean>) => ({}),\n})\n\nconst _user = Cookies.getJSON('vghks_user')\n// const _token = Cookies.get('vghks_token')\n\nexport function AuthProvider(props: any) {\n  const [isAuthenticated, setIsAuthenticated] = React.useState(\n    // !isNil(_user) && !isNil(_token)\n    true\n  )\n\n  const [user, setUser] = React.useState<User>({\n    ..._user,\n    id: 0,\n    division: divisions.RAD,\n  })\n\n  const logout = React.useCallback(({ onCompleted } = {}) => {\n    Cookies.remove('vghks_token')\n    Cookies.remove('vghks_user')\n\n    setIsAuthenticated(false)\n\n    if (onCompleted) {\n      onCompleted()\n    }\n  }, [])\n\n  const value = React.useMemo(\n    () => ({\n      isAuthenticated,\n      setIsAuthenticated,\n      setUser,\n      logout,\n      user,\n    }),\n    [isAuthenticated, logout, user, setUser, setIsAuthenticated]\n  )\n\n  return <AuthContext.Provider value={value} {...props} />\n}\n\nexport function useAuth() {\n  const context = React.useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error(`useAuth must be used within a AuthProvider`)\n  }\n  return context\n}\n\nexport default useAuth\n","import React from 'react'\nimport { ModalProps as AntModalProps } from 'antd/lib/modal'\nimport Modal from '@/components/modal'\nimport Button from '@/components/button'\n\nexport interface ModalProps<T = any>\n  extends Omit<AntModalProps, 'onOk' | 'onCancel'> {\n  item?: T\n  onOk?: (data?: any) => void\n  onSelect?: (radlex: string) => void\n  onCancel: () => void\n  children?: React.ReactNode\n}\n\nfunction TemplateModal<T = any>({\n  onCancel,\n  onOk,\n  item,\n  children,\n  ...props\n}: ModalProps<T>) {\n  const handleOk = () => {\n    if (onOk) {\n      onOk()\n    }\n  }\n  return (\n    <Modal\n      visible\n      onCancel={onCancel}\n      width={650}\n      maskClosable={false}\n      keyboard={false}\n      footer={[\n        <Button\n          key=\"btn-cancel\"\n          color=\"outline\"\n          style={{ minWidth: 80, marginRight: 16 }}\n          onClick={onCancel}>\n          取消\n        </Button>,\n        <Button\n          key=\"btn-save\"\n          color=\"primary\"\n          style={{ minWidth: 80 }}\n          onClick={handleOk}>\n          儲存\n        </Button>,\n      ]}\n      {...props}>\n      {children}\n    </Modal>\n  )\n}\n\nexport { TemplateModal as Modal }\n\nexport default TemplateModal\n","import React from 'react'\nimport cx from 'classnames'\nimport { Card } from 'antd'\nimport { CardProps } from 'antd/lib/card'\nimport { FontColorsOutlined } from '@ant-design/icons'\nimport styled from 'styled-components'\nimport { useReportPreview } from '@/data/useReportTemplate'\n// import { isNil } from '@/utils/webHelper'\n\nconst StyledCard = styled(Card)`\n  &.ant-card {\n    border-radius: 10px;\n    border: none;\n    cursor: move;\n  }\n\n  .ant-card-head {\n    padding-left: 18px;\n    border-bottom: none;\n    color: ${p => p.theme.darkGrey};\n    font-size: 15px;\n    font-weight: 500;\n  }\n\n  &.ant-card-head--hide .ant-card-head {\n    display: none;\n  }\n\n  &.ant-card-body--hide {\n    .ant-card-head {\n      padding-bottom: 16px;\n      border-bottom: 1px dashed #f0f0f0;\n    }\n\n    .ant-card-body {\n      display: none;\n    }\n  }\n\n  &.is--preview .ant-card-head {\n    min-height: auto;\n  }\n\n  &.is--preview .ant-card-head-title {\n    padding-top: 0;\n  }\n\n  &.is--preview .ant-card-body {\n    padding-top: 12px;\n    padding-bottom: 8px;\n  }\n\n  .ant-card-head-title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-bottom: 0;\n  }\n\n  .ant-card-body {\n    padding-top: 6px;\n    padding-left: 26px;\n    padding-bottom: 20px;\n  }\n`\n\ninterface Props extends CardProps {\n  titleVisible?: boolean\n  bodyVisible?: boolean\n  onEdit?: () => void\n  onDelete?: () => void\n}\n\nfunction SnippetTemplateWrapper({\n  title,\n  children,\n  onDelete,\n  onEdit,\n  titleVisible = false,\n  bodyVisible = true,\n  ...props\n}: Props) {\n  const [isPreview] = useReportPreview()\n\n  return (\n    <StyledCard\n      title={\n        <div className=\"flex items-center\">\n          {!isPreview && <FontColorsOutlined className=\"mr-3\" />}\n          {title || `模版標題 ${isPreview ? '' : '(點鉛筆圖示可進行編輯)'}`}\n        </div>\n      }\n      className={cx({\n        // 'ant-card-head--hide': isNil(title) && !titleVisible,\n        'ant-card-body--hide': !bodyVisible,\n        // 'is--preview': isPreview,\n      })}\n      {...props}>\n      {children}\n    </StyledCard>\n  )\n}\n\nexport default SnippetTemplateWrapper\n","// import React from 'react'\nimport { Form } from 'antd'\nimport styled from 'styled-components'\n\nexport const FormItem = styled(Form.Item)`\n  &.is--flex .ant-form-item-control-input-content {\n    display: flex;\n    align-items: center;\n  }\n`\n","import React from 'react'\nimport cx from 'classnames'\nimport { Form, Row, Col } from 'antd'\nimport { ColumnProps } from 'antd/lib/table'\nimport { ModalProps } from 'antd/lib/modal'\nimport { LinkOutlined } from '@ant-design/icons'\nimport {\n  head,\n  isNil,\n  is,\n  of,\n  identity,\n  always,\n  ifElse,\n  update,\n  pathOr,\n  path,\n} from 'ramda'\nimport { FormItem } from '@/components/form'\nimport Modal from '@/components/modal'\nimport { Input } from '@/components/input'\nimport Table from '@/components/query-table'\nimport Button from '@/components/button'\nimport { useRadlexes } from '@/services/radlex'\nimport useTableRowSelection from '@/hooks/useTableRowSelection'\nimport useVisible from '@/hooks/useVisible'\nimport { ReportTemplateSetting } from '@/constants/types'\nconst { compose } = require('ramda')\n\ninterface RadlexProps {\n  onSelect?: (value: { radlexCode: string }) => void\n  field?: string | (string | number)[]\n  inline?: boolean\n  item?: ReportTemplateSetting\n}\n\nexport function useRadlex(onOk?: (value: { radlexCode: string }) => void) {\n  return (value: { radlexCode: string }) => {\n    if (onOk) {\n      onOk(value)\n    }\n  }\n}\n\nexport function Radlex({\n  onSelect,\n  inline = false,\n  field = 'text',\n  item,\n}: RadlexProps) {\n  const [radlexModalVisible, handleRadlexModalVisible] = useVisible()\n\n  const handleSelect = (radlex: { id: number; code: string }) => {\n    if (onSelect) {\n      onSelect(\n        ifElse(\n          is(Array),\n          ([, idx]: any[] = []) => {\n            return {\n              options: compose(\n                update(idx, {\n                  ...pathOr({}, ['options', idx])(item),\n                  radlexCode: radlex.code,\n                } as any),\n                pathOr([], ['options'])\n              )(item),\n            }\n          },\n          always({ radlexCode: radlex?.code })\n        )(field)\n      )\n    }\n    handleRadlexModalVisible()\n  }\n\n  let radlexCode = ifElse(\n    is(Array),\n    ([, idx]: any[]) => {\n      return path(['options', idx, 'radlexCode'], item)\n    },\n    () => path(['radlexCode'], item)\n  )(field)\n\n  return (\n    <>\n      {radlexModalVisible && (\n        <RadlexListModal\n          selected={radlexCode}\n          onOk={handleSelect}\n          onCancel={handleRadlexModalVisible}\n        />\n      )}\n      <FormItem noStyle={inline} label=\"Text\" className=\"is--flex\">\n        <Form.Item noStyle name={field}>\n          <Input\n            className={cx({\n              'is--linked': !isNil(radlexCode),\n              'w-11/12': inline,\n            })}\n          />\n        </Form.Item>\n        <Form.Item noStyle>\n          <LinkOutlined\n            className=\"ml-2 cursor-pointer\"\n            onClick={handleRadlexModalVisible}\n          />\n        </Form.Item>\n      </FormItem>\n    </>\n  )\n}\n\ninterface RadlexModalProps extends Omit<ModalProps, 'onOk'> {\n  onOk(value: { code: string; id: number }): void\n  selected?: string\n}\n\nexport function RadlexListModal({\n  onOk,\n  onCancel,\n  selected,\n  ...props\n}: RadlexModalProps) {\n  const { dataSource, loading } = useRadlexes()\n\n  const [keyword, setKeyword] = React.useState<string>()\n\n  const { rowSelection, selectedRowCount, selectedRows } = useTableRowSelection(\n    {\n      multiple: false,\n      ...(selected\n        ? {\n            defaultRowKeys: ifElse(is(Array), identity, of)(selected),\n          }\n        : {}),\n    }\n  )\n\n  const columns: ColumnProps<any>[] = [\n    {\n      title: 'SNOMED CT',\n      dataIndex: 'code',\n    },\n  ]\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    setKeyword(evt.target.value)\n  }\n\n  const handleOk = () => {\n    if (selectedRowCount > 0) {\n      onOk(head(selectedRows))\n    }\n  }\n\n  let _dataSource = {\n    ...dataSource,\n    content: dataSource.content.filter(x =>\n      keyword ? x.code.includes(keyword) : true\n    ),\n  }\n\n  return (\n    <Modal\n      {...props}\n      visible\n      title=\"選擇 SNOMED CT\"\n      bodyStyle={{\n        paddingTop: 48,\n        paddingLeft: 64,\n        paddingRight: 64,\n      }}\n      width={650}\n      footer={[\n        <Button key=\"btn-cancel\" color=\"outline\" onClick={onCancel}>\n          取消\n        </Button>,\n        <Button\n          key=\"btn-ok\"\n          color=\"primary\"\n          onClick={handleOk}\n          className=\"ml-3\">\n          確認\n        </Button>,\n      ]}\n      onCancel={onCancel}\n      keyboard={false}\n      maskClosable={false}>\n      <Row>\n        <Col span={24}>\n          關鍵字:\n          <Input\n            className=\"ml-2 w-2/3\"\n            placeholder=\"輸入 SNOMED CT\"\n            onChange={handleChange}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mt-6\">\n        <Col span={24}>\n          <Table\n            rowKey=\"code\"\n            size=\"small\"\n            dataSource={_dataSource}\n            loading={loading}\n            pagination={false}\n            columns={columns}\n            rowSelection={rowSelection}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n","import { pathOr, length } from 'ramda'\nimport useSWR from '@/hooks/useSWR'\nimport { QueryVariables } from '@/constants/types'\n\nexport function useRadlexes(variables: QueryVariables = {}) {\n  const { data, ...rest } = useSWR<any[]>(`/api/v1/c1/radlex`, { variables })\n\n  const _data = pathOr(\n    [\n      { id: 1, code: 'Couinaud hepatic segment II' },\n      { id: 2, code: 'Couinaud hepatic segment III' },\n      { id: 3, code: 'Couinaud hepatic segment VI' },\n      { id: 4, code: 'Couinaud hepatic segment V' },\n      { id: 5, code: 'Couinaud hepatic segment VI' },\n      { id: 6, code: 'Couinaud hepatic segment VII' },\n      { id: 7, code: 'Couinaud hepatic segment VIII' },\n      // { id: 8, code: 'RID12348' },\n      // { id: 9, code: 'RID12349' },\n    ],\n    [],\n    data\n  )\n\n  const dataSource = {\n    content: _data,\n    total: length(_data),\n    totalPages: Math.floor(length(_data) / 10) + 1,\n  }\n\n  return {\n    ...rest,\n    data,\n    dataSource,\n  }\n}\n","import React from 'react'\nimport { Form } from 'antd'\nimport { Input, TextArea } from '@/components/input'\nimport Checkbox from '@/components/checkbox'\nimport { Modal, ModalProps } from '@/components/snippet-template-modal'\nimport TemplateWrapper from '@/components/snippet-template-wrapper'\nimport { Radlex, useRadlex } from '@/components/radlex-list-modal'\nimport { createFormItemLayout } from '@/utils/form'\nimport { ReportTemplateSetting, ReportTemplateProps } from '@/constants/types'\nimport { useUpdateSnippet } from '@/services/reportTemplate'\n\ninterface Setting extends ReportTemplateSetting {\n  defaultValue?: string\n  multipleLine?: boolean\n}\n\nexport default function SnippetTemplateInputText(props: ReportTemplateProps) {\n  const { editModalVisible, handleEditModalVisible, onUpdate, item } = props\n\n  const { setting, handleOk } = useUpdateSnippet<Setting>({ item, onUpdate })\n\n  const inputProps = {\n    bordered: false,\n    className: 'w-2/3',\n    placeholder: setting.tooltip,\n    defaultValue: setting.defaultValue,\n  }\n\n  return (\n    <>\n      {editModalVisible && (\n        <InputTextModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n        />\n      )}\n      <TemplateWrapper title={setting.text || ''}>\n        <Form.Item noStyle name={['data', item.id]}>\n          {setting.multipleLine ? (\n            <TextArea {...inputProps} autoSize={{ minRows: 3 }} />\n          ) : (\n            <Input {...inputProps} />\n          )}\n        </Form.Item>\n      </TemplateWrapper>\n    </>\n  )\n}\n\nfunction InputTextModal({\n  onOk,\n  onCancel,\n  item,\n  ...props\n}: ModalProps<Setting>) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      if (onOk) {\n        onOk(values)\n      }\n      onCancel()\n    })\n  }\n\n  const handleSelect = useRadlex(onOk)\n\n  return (\n    <Modal<Setting>\n      {...props}\n      title={\n        <>\n          <div>\n            Text\n            <div className=\"inline ml-2 text-sm text-gray-600\">\n              typically used for description something.\n            </div>\n          </div>\n        </>\n      }\n      onCancel={onCancel}\n      onOk={handleOk}>\n      <Form\n        {...createFormItemLayout(5, 16)}\n        labelAlign=\"left\"\n        form={form}\n        initialValues={item}>\n        <Radlex item={item} onSelect={handleSelect} />\n        <Form.Item label=\"Default Value\" name=\"defaultValue\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Tooltip\" name=\"tooltip\">\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Multiple Lines\"\n          name=\"multipleLine\"\n          valuePropName=\"checked\">\n          <Checkbox />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { InputNumber } from 'antd'\nimport { InputNumberProps } from 'antd/lib/input-number'\nimport styled from 'styled-components'\nimport { RefProps } from '@/constants/types'\nimport { percent, currency, thosandSeprartor } from '@/utils/form'\n\ntype Props = RefProps & InputNumberProps & { bordered?: boolean }\n\nconst StyledInputNumber = styled(InputNumber).attrs({\n  min: 0 as any, // dont know why error\n})<Props>`\n  &.ant-input-number {\n    border-color: #d9d9d9;\n  }\n\n  &.ant-input-number-focused,\n  &.ant-input-number:focus,\n  &.ant-input-number:hover {\n    border-color: ${p => p.theme.primary};\n  }\n\n  &.ant-input-number-focused:not(.ant-input-number-borderless),\n  &.ant-input-number:focus:not(.ant-input-number-borderless) {\n    box-shadow: 0 0 0 1px ${p => p.theme.primary};\n  }\n\n  &.ant-input-number-borderless,\n  &.ant-input-number-borderless:hover,\n  &.ant-input-number-borderless:focus,\n  &.ant-input-number-borderless-focused,\n  &.ant-input-number-borderless-disabled,\n  &.ant-input-number-borderless[disabled] {\n    border: none;\n    border-bottom: 1px solid #d9d9d9;\n  }\n`\n\nexport const ThousandSeprartorInput = React.forwardRef<\n  typeof InputNumber,\n  Props\n>(({ ...props }, ref) => (\n  <StyledInputNumber forwardRef={ref} {...props} {...thosandSeprartor} />\n))\n\nexport const CurrencyInput = React.forwardRef<typeof InputNumber, Props>(\n  ({ ...props }, ref) => (\n    <StyledInputNumber forwardRef={ref} {...props} {...currency} />\n  )\n)\n\nexport const PercentInput = React.forwardRef<typeof InputNumber, Props>(\n  ({ ...props }, ref) => (\n    <StyledInputNumber forwardRef={ref} {...props} {...percent} />\n  )\n)\n\nThousandSeprartorInput.displayName = 'ThousandSeprartorInput'\n\nCurrencyInput.displayName = 'CurrencyInput'\n\nPercentInput.displayName = 'PercentInput'\n\nexport { StyledInputNumber as InputNumber }\n\nexport default StyledInputNumber\n","import React from 'react'\nimport { Form } from 'antd'\nimport Input from '@/components/input'\nimport InputNumber from '@/components/input-number'\nimport { Modal, ModalProps } from '@/components/snippet-template-modal'\nimport TemplateWrapper from '@/components/snippet-template-wrapper'\nimport { Radlex, useRadlex } from '@/components/radlex-list-modal'\nimport { createFormItemLayout } from '@/utils/form'\nimport { ReportTemplateSetting, ReportTemplateProps } from '@/constants/types'\nimport { useUpdateSnippet } from '@/services/reportTemplate'\nimport { getNumberFromString } from '@/utils/webHelper'\nimport { is } from 'ramda'\n\ninterface Setting extends ReportTemplateSetting {\n  defaultValue?: number\n  max?: number\n  min?: number\n  units?: string\n}\n\nexport default function SnippetTemplateInputNumber(props: ReportTemplateProps) {\n  const { editModalVisible, handleEditModalVisible, item, onUpdate } = props\n\n  const { setting, handleOk } = useUpdateSnippet<Setting>({ item, onUpdate })\n\n  return (\n    <>\n      {editModalVisible && (\n        <InputNumberModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n        />\n      )}\n      <TemplateWrapper title={setting.text || ''}>\n        <Form.Item noStyle name={['data', item.id]}>\n          <InputNumber\n            style={{ width: '33.333333%' }}\n            className=\"ant-input-number-borderless\"\n            defaultValue={setting.defaultValue}\n            min={setting.min}\n            max={setting.max}\n            formatter={(value: any) => {\n              if (!setting.units) {\n                return value\n              }\n              if (value && is(String, value) && value.includes(setting.units)) {\n                return `${getNumberFromString(value)} ${setting.units}`\n              }\n              return `${value} ${setting.units}`\n            }}\n            parser={(value: any) =>\n              setting.units\n                ? value.replace(new RegExp(`/s${setting.units}/g`), '')\n                : value\n            }\n            placeholder={setting.tooltip}\n          />\n        </Form.Item>\n      </TemplateWrapper>\n    </>\n  )\n}\n\nfunction InputNumberModal({ onOk, onCancel, item, ...props }: ModalProps) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      if (onOk) {\n        onOk(values)\n      }\n      onCancel()\n    })\n  }\n\n  const handleSelect = useRadlex(onOk)\n\n  return (\n    <Modal\n      {...props}\n      title={\n        <>\n          <div>\n            Number\n            <div className=\"inline ml-2 text-sm text-gray-600\">\n              typically used for input number.\n            </div>\n          </div>\n        </>\n      }\n      onOk={handleOk}\n      onCancel={onCancel}>\n      <Form\n        {...createFormItemLayout(5, 16)}\n        labelAlign=\"left\"\n        form={form}\n        initialValues={item}>\n        <Radlex item={item} onSelect={handleSelect} />\n        <Form.Item label=\"Default Value\" name=\"defaultValue\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Tooltip\" name=\"tooltip\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Minimum Value\" name=\"min\">\n          <InputNumber />\n        </Form.Item>\n        <Form.Item label=\"Maximum Value\" name=\"max\">\n          <InputNumber />\n        </Form.Item>\n        <Form.Item label=\"Units\" name=\"units\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","// tslint:disable: quotemark no-implicit-dependencies no-shadowed-variable no-var-requires\nimport React from 'react'\nimport { TableProps } from 'antd/lib/table'\nimport { FormInstance } from 'antd/lib/form'\nimport Table from '@/components/table'\n\ntype EditableTableProps<T> = Omit<TableProps<T>, 'onChange'> & {\n  value?: T[]\n  form: FormInstance\n  onChange?(changedValue: T[] | null): void\n  onRowAdd: (form: FormInstance) => any\n  onRowDelete: (value: { id: React.Key; form: FormInstance }) => any\n}\n\nexport default function EditableTable<T = any>({\n  form,\n  value,\n  onChange,\n  onRowAdd,\n  onRowDelete,\n  ...props\n}: EditableTableProps<T>) {\n  const triggerChange = (changedValue: T[]) => {\n    if (onChange) {\n      onChange(changedValue)\n    }\n  }\n\n  const handleAdd = () => {\n    triggerChange(onRowAdd(form))\n  }\n\n  const handleDelete = (id: string) => {\n    triggerChange(onRowDelete({ id, form }))\n  }\n\n  return (\n    <Table\n      {...props}\n      rowKey=\"id\"\n      pagination={false}\n      size=\"small\"\n      dataSource={value as any}\n      onAddRowClick={handleAdd}\n      onDeleteRowClick={handleDelete}\n      editable={true}\n    />\n  )\n}\n","import React from 'react'\nimport { Form } from 'antd'\nimport { ColumnProps } from 'antd/lib/table'\nimport { FormInstance } from 'antd/lib/form'\nimport { concat, __, pathOr, invoker, filter } from 'ramda'\nimport Input from '@/components/input'\nimport Checkbox from '@/components/checkbox'\nimport EditableTable from '@/components/editable-table'\nimport { Radlex, useRadlex } from '@/components/radlex-list-modal'\nimport { uuid } from '@/utils/webHelper'\nimport { createFormItemLayout } from '@/utils/form'\nimport { ReportTemplateSetting } from '@/constants/types'\nimport { Modal, ModalProps } from './snippet-template-modal'\nconst { compose } = require('ramda')\n\nexport interface Setting extends ReportTemplateSetting {\n  options?: Option[]\n}\n\nexport type Option = {\n  id: React.Key\n  text?: string\n  selected?: boolean\n  freetext?: boolean\n}\n\nexport const defaultValue: Setting = {\n  options: [\n    {\n      id: uuid(),\n      text: undefined,\n      selected: true,\n      freetext: false,\n    },\n    {\n      id: uuid(),\n      text: undefined,\n      selected: true,\n      freetext: false,\n    },\n    {\n      id: uuid(),\n      text: undefined,\n      selected: true,\n      freetext: false,\n    },\n  ],\n}\n\ninterface Props extends ModalProps {\n  freetextVisible?: boolean\n}\n\nexport function SnippetTemplateSelectionModal({\n  onCancel,\n  onOk,\n  item,\n  freetextVisible = true,\n  ...props\n}: Props) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      if (onOk) {\n        onOk(values)\n      }\n      onCancel()\n    })\n  }\n\n  const handleSelect = useRadlex(onOk)\n\n  const handleRowAdd = (form: FormInstance) => {\n    return compose(\n      concat(__, [\n        {\n          id: uuid(),\n          text: undefined,\n          radlexCode: undefined,\n          selected: true,\n          freetext: false,\n        },\n      ]),\n      pathOr([], ['options']),\n      invoker(0, 'getFieldsValue')()\n    )(form)\n  }\n\n  const handleRowDelete = ({\n    id,\n    form,\n  }: {\n    id: React.Key\n    form: FormInstance\n  }) => {\n    return compose(\n      filter((x: any) => x.id !== id),\n      pathOr([], ['options']),\n      invoker(0, 'getFieldsValue')()\n    )(form)\n  }\n\n  const columns: ColumnProps<Option>[] = [\n    {\n      title: '選項名稱',\n      render: (v, r, idx) => (\n        <Radlex\n          inline\n          item={item}\n          field={['options', idx, 'text']}\n          onSelect={handleSelect}\n        />\n      ),\n    },\n    {\n      title: '是否可選',\n      align: 'center',\n      render: (v, r, idx) => (\n        <Form.Item\n          noStyle\n          name={['options', idx, 'selected']}\n          valuePropName=\"checked\">\n          <Checkbox />\n        </Form.Item>\n      ),\n    },\n    ...((freetextVisible\n      ? [\n          {\n            title: '是否可輸入',\n            align: 'center',\n            render: (v, r, idx) => (\n              <Form.Item\n                noStyle\n                name={['options', idx, 'freetext']}\n                valuePropName=\"checked\">\n                <Checkbox />\n              </Form.Item>\n            ),\n          },\n        ]\n      : []) as ColumnProps<Option>[]),\n  ]\n\n  React.useEffect(() => {\n    form.setFieldsValue(item)\n  }, [JSON.stringify(item)]) // eslint-disable-line\n\n  return (\n    <Modal\n      {...props}\n      title={\n        <>\n          <div>Single Selection List</div>\n          <div className=\"mt-1 text-sm text-gray-600\">\n            Typically used for shorter lists so that all responses are visible\n            as radio buttons. Only allow a single selection.\n          </div>\n        </>\n      }\n      onCancel={onCancel}\n      onOk={handleOk}>\n      <Form\n        {...createFormItemLayout(3, 16)}\n        labelAlign=\"left\"\n        form={form}\n        initialValues={item}>\n        <Radlex item={item} onSelect={handleSelect} />\n        <Form.Item label=\"Tooltip\" name=\"tooltip\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Options\" />\n        <Form.Item noStyle name=\"options\">\n          <EditableTable\n            columns={columns}\n            form={form}\n            onRowAdd={handleRowAdd}\n            onRowDelete={handleRowDelete}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { Form } from 'antd'\nimport cx from 'classnames'\nimport { pathOr } from 'ramda'\nimport { Checkbox, CheckboxGroup } from '@/components/checkbox'\nimport Input from '@/components/input'\nimport TemplateWrapper from '@/components/snippet-template-wrapper'\nimport {\n  SnippetTemplateSelectionModal,\n  Setting,\n  Option,\n  defaultValue,\n} from '@/components/snippet-template-selection-modal'\nimport { mapIndexed } from '@/utils/webHelper'\nimport { ReportTemplateProps } from '@/constants/types'\nimport { useUpdateSnippet } from '@/services/reportTemplate'\nconst { compose } = require('ramda')\n\nfunction SnippetTemplateMultipleSelection(props: ReportTemplateProps) {\n  const { item, editModalVisible, handleEditModalVisible, onUpdate } = props\n\n  const { setting, handleOk } = useUpdateSnippet<Setting>({\n    item,\n    onUpdate,\n    defaultValue,\n  })\n\n  return (\n    <>\n      {editModalVisible && (\n        <SnippetTemplateSelectionModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n          title={\n            <>\n              <div>Multiple Selection List</div>\n              <div className=\"mt-1 text-sm text-gray-600\">\n                typically used for shorter lists so that all responses are\n                visible as checkboxes. Allows Multiple selections.\n              </div>\n            </>\n          }\n        />\n      )}\n      <TemplateWrapper\n        title={setting.text || ''}\n        bodyStyle={{ paddingLeft: 36 }}>\n        <Form.Item noStyle name={['data', item.id]}>\n          <CheckboxGroup>\n            {compose(\n              mapIndexed((x: Option, idx: number) => (\n                <Checkbox\n                  key={x.id}\n                  className={cx('block ml-0', { 'mt-1': idx > 0 })}\n                  defaultChecked={false}\n                  value={`${idx}`}>\n                  {x.text || '預設選項'}\n                  {x.freetext && (\n                    <Input\n                      bordered={false}\n                      size=\"small\"\n                      placeholder=\"輸入備註\"\n                      className=\"ml-4 w-full\"\n                    />\n                  )}\n                </Checkbox>\n              )),\n              pathOr([], ['options'])\n            )(setting)}\n          </CheckboxGroup>\n        </Form.Item>\n      </TemplateWrapper>\n    </>\n  )\n}\n\nexport default SnippetTemplateMultipleSelection\n","import React from 'react'\nimport cx from 'classnames'\nimport { Form } from 'antd'\nimport { pathOr } from 'ramda'\nimport Radio from '@/components/radio'\nimport Input from '@/components/input'\nimport TemplateWrapper from '@/components/snippet-template-wrapper'\nimport {\n  SnippetTemplateSelectionModal,\n  Setting,\n  Option,\n  defaultValue,\n} from '@/components/snippet-template-selection-modal'\nimport { mapIndexed } from '@/utils/webHelper'\nimport { ReportTemplateProps } from '@/constants/types'\nimport { useUpdateSnippet } from '@/services/reportTemplate'\nconst { compose } = require('ramda')\n\nfunction SnippetTemplateSingleSelection(props: ReportTemplateProps) {\n  const { item, editModalVisible, handleEditModalVisible, onUpdate } = props\n\n  const { setting, handleOk } = useUpdateSnippet<Setting>({\n    item,\n    onUpdate,\n    defaultValue,\n  })\n\n  return (\n    <>\n      {editModalVisible && (\n        <SnippetTemplateSelectionModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n        />\n      )}\n      <TemplateWrapper\n        title={setting.text || ''}\n        bodyStyle={{ paddingLeft: 36 }}>\n        <Form.Item noStyle name={['data', item.id]}>\n          <Radio.Group>\n            {compose(\n              mapIndexed((x: Option, idx: number) => (\n                <Radio\n                  key={x.id}\n                  className={cx('block', { 'mt-1': idx > 0 })}\n                  defaultChecked={false}\n                  value={`${idx}`}>\n                  {x.text || '預設選項'}\n                  {x.freetext && (\n                    <Input\n                      size=\"small\"\n                      bordered={false}\n                      placeholder=\"輸入備註\"\n                      className=\"ml-3 w-full\"\n                    />\n                  )}\n                </Radio>\n              )),\n              pathOr([], ['options'])\n            )(setting)}\n          </Radio.Group>\n        </Form.Item>\n      </TemplateWrapper>\n    </>\n  )\n}\n\nexport default SnippetTemplateSingleSelection\n","import React from 'react'\nimport { Form } from 'antd'\nimport Input from '@/components/input'\nimport DatePicker from '@/components/datepicker'\nimport { Modal, ModalProps } from '@/components/snippet-template-modal'\nimport TemplateWrapper from '@/components/snippet-template-wrapper'\nimport { Radlex, useRadlex } from '@/components/radlex-list-modal'\nimport { createFormItemLayout } from '@/utils/form'\nimport { ReportTemplateProps } from '@/constants/types'\nimport { useUpdateSnippet } from '@/services/reportTemplate'\n\ntype Setting = {\n  text?: string\n  defaultValue?: moment.Moment\n  tooltip?: string\n}\n\nexport default function SnippetTemplateDate(props: ReportTemplateProps) {\n  const { editModalVisible, handleEditModalVisible, item, onUpdate } = props\n\n  const { setting, handleOk } = useUpdateSnippet<Setting>({ item, onUpdate })\n\n  return (\n    <>\n      {editModalVisible && (\n        <InputDateModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n        />\n      )}\n      <TemplateWrapper title={setting.text || ''}>\n        <Form.Item noStyle name={['data', item.id]}>\n          <DatePicker\n            bordered={false}\n            className=\"w-1/3\"\n            placeholder={setting.tooltip}\n            defaultValue={setting.defaultValue}\n          />\n        </Form.Item>\n      </TemplateWrapper>\n    </>\n  )\n}\n\nfunction InputDateModal({\n  onOk,\n  onCancel,\n  item,\n  ...props\n}: ModalProps<Setting>) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      if (onOk) {\n        onOk(values)\n      }\n      onCancel()\n    })\n  }\n\n  const handleSelect = useRadlex(onOk)\n\n  return (\n    <Modal<Setting>\n      {...props}\n      title={\n        <>\n          <div>\n            Date\n            <div className=\"inline ml-2 text-sm text-gray-600\">\n              typically used for target date.\n            </div>\n          </div>\n        </>\n      }\n      onCancel={onCancel}\n      onOk={handleOk}>\n      <Form\n        {...createFormItemLayout(5, 16)}\n        labelAlign=\"left\"\n        form={form}\n        initialValues={item}>\n        <Radlex item={item} onSelect={handleSelect} />\n        <Form.Item label=\"Default Value\" name=\"defaultValue\">\n          <DatePicker allowClear picker=\"date\" className=\"w-full\" />\n        </Form.Item>\n        <Form.Item label=\"Tooltip\" name=\"tooltip\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { Form } from 'antd'\nimport Input from '@/components/input'\nimport { TimePicker } from '@/components/datepicker'\nimport { Modal, ModalProps } from '@/components/snippet-template-modal'\nimport TemplateWrapper from '@/components/snippet-template-wrapper'\nimport { Radlex, useRadlex } from '@/components/radlex-list-modal'\nimport { createFormItemLayout } from '@/utils/form'\nimport { ReportTemplateSetting, ReportTemplateProps } from '@/constants/types'\nimport { useUpdateSnippet } from '@/services/reportTemplate'\n\ninterface Setting extends ReportTemplateSetting {\n  defaultValue?: moment.Moment\n}\n\nexport default function ReportTemplateTime(props: ReportTemplateProps) {\n  const { editModalVisible, handleEditModalVisible, item, onUpdate } = props\n\n  const { setting, handleOk } = useUpdateSnippet<Setting>({ item, onUpdate })\n\n  return (\n    <>\n      {editModalVisible && (\n        <InputTimeModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n        />\n      )}\n      <TemplateWrapper title={setting.text || ''}>\n        <Form.Item noStyle name={['data', item.id]}>\n          <TimePicker\n            bordered={false}\n            className=\"w-1/3\"\n            placeholder={setting.tooltip}\n            defaultValue={setting.defaultValue}\n          />\n        </Form.Item>\n      </TemplateWrapper>\n    </>\n  )\n}\n\nfunction InputTimeModal({\n  onOk,\n  onCancel,\n  item,\n  ...props\n}: ModalProps<Setting>) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      if (onOk) {\n        onOk(values)\n      }\n      onCancel()\n    })\n  }\n\n  const handleSelect = useRadlex(onOk)\n\n  return (\n    <Modal<Setting>\n      {...props}\n      title={\n        <>\n          <div>\n            Time\n            <div className=\"inline ml-2 text-sm text-gray-600\">\n              typically used for target time.\n            </div>\n          </div>\n        </>\n      }\n      onCancel={onCancel}\n      onOk={handleOk}>\n      <Form\n        {...createFormItemLayout(5, 16)}\n        labelAlign=\"left\"\n        form={form}\n        initialValues={item}>\n        <Radlex item={item} onSelect={handleSelect} />\n        <Form.Item label=\"Default Value\" name=\"defaultValue\">\n          <TimePicker allowClear format=\"HH:mm\" className=\"w-full\" />\n        </Form.Item>\n        <Form.Item label=\"Tooltip\" name=\"tooltip\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { pathOr, map } from 'ramda'\nimport { Form } from 'antd'\nimport Select from '@/components/select'\nimport TemplateWrapper from '@/components/snippet-template-wrapper'\nimport {\n  SnippetTemplateSelectionModal,\n  Option,\n  defaultValue,\n} from '@/components/snippet-template-selection-modal'\nimport { ReportTemplateSetting, ReportTemplateProps } from '@/constants/types'\nimport { useUpdateSnippet } from '@/services/reportTemplate'\nconst { compose } = require('ramda')\n\ninterface Setting extends ReportTemplateSetting {\n  options?: Option[]\n  selectionType?: 'single' | 'multiple'\n}\n\nexport default function SnippetTemplateSelect(props: ReportTemplateProps) {\n  const { item, editModalVisible, handleEditModalVisible, onUpdate } = props\n\n  const { setting, handleOk } = useUpdateSnippet<Setting>({\n    item,\n    onUpdate,\n    defaultValue,\n  })\n\n  return (\n    <>\n      {editModalVisible && (\n        <SnippetTemplateSelectionModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n          freetextVisible={false}\n          title={\n            <>\n              <div>Drop-down List</div>\n              <div className=\"mt-1 text-sm text-gray-600\">\n                typically used for lists of greater than 6 or 7 options.\n              </div>\n            </>\n          }\n        />\n      )}\n      <TemplateWrapper title={setting.text || ''}>\n        <Form.Item noStyle name={['data', item.id]}>\n          <Select\n            allowClear\n            bordered={false}\n            className=\"w-2/3\"\n            placeholder={setting.tooltip}>\n            {compose(\n              map((x: Option) => (\n                <Select.Option key={x.id} value={x.text || ''}>\n                  {x.text || ''}\n                </Select.Option>\n              )),\n              pathOr([], ['options'])\n            )(setting)}\n          </Select>\n        </Form.Item>\n      </TemplateWrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { Form } from 'antd'\nimport Input from '@/components/input'\nimport { Modal, ModalProps } from '@/components/snippet-template-modal'\nimport TemplateWrapper from '@/components/snippet-template-wrapper'\nimport { createFormItemLayout } from '@/utils/form'\nimport { useUpdateSnippet } from '@/services/reportTemplate'\nimport { ReportTemplateSetting, ReportTemplateProps } from '@/constants/types'\n\ninterface Setting extends ReportTemplateSetting {}\n\nexport default function TemplateSectionHeader(props: ReportTemplateProps) {\n  const { item, editModalVisible, handleEditModalVisible, onUpdate } = props\n\n  const { setting, handleOk } = useUpdateSnippet<Setting>({\n    item,\n    onUpdate,\n  })\n\n  return (\n    <>\n      {editModalVisible && (\n        <InputTextModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n        />\n      )}\n      <TemplateWrapper\n        titleVisible\n        bodyVisible={false}\n        title={setting.text}\n        onEdit={handleEditModalVisible}></TemplateWrapper>\n    </>\n  )\n}\n\nfunction InputTextModal({\n  onOk,\n  onCancel,\n  item,\n  ...props\n}: ModalProps<Setting>) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      if (onOk) {\n        onOk(values)\n      }\n      onCancel()\n    })\n  }\n\n  return (\n    <Modal<Setting>\n      {...props}\n      title={\n        <>\n          <div>\n            Section Header\n            <div className=\"inline ml-2 text-sm text-gray-600\">\n              typically used for section.\n            </div>\n          </div>\n        </>\n      }\n      onCancel={onCancel}\n      onOk={handleOk}>\n      <Form\n        {...createFormItemLayout(5, 16)}\n        labelAlign=\"left\"\n        form={form}\n        initialValues={item}>\n        <Form.Item label=\"Text\" name=\"text\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Tooltip\" name=\"tooltip\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","import React from 'react'\n\nfunction SnippetTemplateCloze() {\n  return <div></div>\n}\n\nlet input = `\n  <input\n    class=\"ant-input ant-input-sm ant-input-borderless\"\n    placeholder=\"\"\n    style=\"border: none; border-bottom: 1px solid #38a8a9; width: 70px;\"\n    type=\"text\"\n    value=\"\"\n    data-mce-style=\"border: none; border-bottom: 1px solid #38a8a9; width: 70px;\"\n  >\n`\n\nexport const html = `\n  <div>\n    The specimen is submitted in ${input} parts. \n    Part (A) consists of ${input} piece of liver tissue, \n    labelled ${input} , measuring ${input} cm and weighing ___ gm. \n    There is a solitary / are tumor mass(es), measuring up to ${input} cm, \n    located in ${input} lobe. \n    The cut sections show it is / they are golden yellow and firm. \n    (Foci of hemorrhage and necrosis are noted). \n    The hepatic surgical margin is free of tumor / very close to tumor / involved by tumor, \n    grossly. The remaining liver tissue shows unremarkable / micronodular cirrhosis (all less than 3mm) / macronodular cirrhosis (greater than 3mm). \n    Part (B) consists of ${input} pieces of grayish white soft tissue, labelled ${input} , \n    measuring up to ${input} cm. Representative parts are embedded in ${input} blocks. \n    (Block A~B: cut margin, C~E: tumor, F: non-neoplastic liver)\n  </div>\n`\n\nexport const Component = SnippetTemplateCloze\n\nexport default SnippetTemplateCloze\n","import { map, mergeAll, pathOr, path, keys } from 'ramda'\nimport {\n  CalendarOutlined,\n  ClockCircleOutlined,\n  OrderedListOutlined,\n  UnorderedListOutlined,\n  FontSizeOutlined,\n  DatabaseOutlined,\n  NumberOutlined,\n  BoldOutlined,\n  FontColorsOutlined,\n} from '@ant-design/icons'\nimport { uuid } from '@/utils/webHelper'\nimport TemplateInputText from '@/components/snippet-template-input-text'\nimport TemplateInputNumber from '@/components/snippet-template-input-number'\nimport TemplateMultipleSelection from '@/components/snippet-template-multiple-selection'\nimport TemplateSingleSelection from '@/components/snippet-template-single-selection'\nimport TemplateDate from '@/components/snippet-template-date'\nimport TemplateTime from '@/components/snippet-template-time'\nimport TemplateSelect from '@/components/snippet-template-select'\nimport TempldateSectionHeader from '@/components/snippet-template-section-header'\nimport * as Cloze from '@/components/snippet-template-cloze'\nimport { SnippetProps, ReportTemplate, PhraseTemplate } from '@/constants/types'\nconst { compose } = require('ramda')\n\ninterface SnippetTemplateListItem {\n  id: React.Key\n  type: string\n  name: string\n  Component: React.Component\n  inline: boolean\n}\n\nconst snippetTemplateList = [\n  {\n    id: uuid(),\n    type: 'TemplateSectionHeader',\n    componentType: 'header',\n    name: 'Section Header',\n    inline: false,\n    icon: BoldOutlined,\n    Component: TempldateSectionHeader,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateInputText',\n    name: 'Text',\n    inline: false,\n    icon: FontSizeOutlined,\n    Component: TemplateInputText,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateInputNumber',\n    name: 'Number',\n    inline: false,\n    icon: NumberOutlined,\n    Component: TemplateInputNumber,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateSelect',\n    name: 'Drop-down List',\n    inline: false,\n    icon: DatabaseOutlined,\n    Component: TemplateSelect,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateMultipleSelection',\n    name: 'Multiple Selection List',\n    inline: false,\n    icon: UnorderedListOutlined,\n    Component: TemplateMultipleSelection,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateSingleSelection',\n    name: 'Single Selection List',\n    inline: false,\n    icon: OrderedListOutlined,\n    Component: TemplateSingleSelection,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateDate',\n    name: 'Date',\n    inline: false,\n    icon: CalendarOutlined,\n    Component: TemplateDate,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateTime',\n    name: 'Time',\n    inline: false,\n    icon: ClockCircleOutlined,\n    Component: TemplateTime,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateCloze',\n    name: 'Cloze',\n    inline: true,\n    icon: FontColorsOutlined,\n    html: Cloze.html,\n    Component: Cloze.Component,\n  },\n]\n\nexport const snippetTemplateById = compose(\n  mergeAll,\n  map((x: SnippetTemplateListItem) => ({ [x.type]: x }))\n)(snippetTemplateList)\n\nexport const setComponentByTab = compose(\n  map((x: ReportTemplate) => ({\n    ...x,\n    setting: compose(\n      mergeAll,\n      map((key: string) => ({\n        [key]: compose(\n          map((s: SnippetProps) => ({\n            ...s,\n            Component: path([s.type, 'Component'])(snippetTemplateById),\n          })),\n          pathOr([], ['setting', key])\n        )(x),\n      })),\n      keys,\n      pathOr({}, ['setting'])\n    )(x),\n  })),\n  pathOr([], [])\n)\n\nexport const setComponent = compose(\n  map((x: PhraseTemplate) => ({\n    ...x,\n    setting: compose(\n      map((s: SnippetProps) => ({\n        ...s,\n        Component: path([s.type, 'Component'])(snippetTemplateById),\n      })),\n      pathOr([], ['setting'])\n    )(x),\n  })),\n  pathOr([], [])\n)\n\nexport default snippetTemplateList\n","import dayjs from 'dayjs'\nimport customParseFormat from 'dayjs/plugin/customParseFormat'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\nimport weekday from 'dayjs/plugin/weekday'\nimport isMoment from 'dayjs/plugin/isMoment'\nimport badMutable from 'dayjs/plugin/badMutable'\nimport localeData from 'dayjs/plugin/localeData'\nimport advancedFormat from 'dayjs/plugin/advancedFormat'\nimport weekYear from 'dayjs/plugin/weekYear'\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore'\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter'\nimport 'dayjs/locale/zh-tw'\n\ndayjs.extend(isSameOrBefore)\ndayjs.extend(isSameOrAfter)\ndayjs.extend(advancedFormat)\ndayjs.extend(customParseFormat)\ndayjs.extend(weekYear)\ndayjs.extend(weekOfYear)\ndayjs.extend(isMoment)\ndayjs.extend(localeData)\ndayjs.extend(badMutable)\ndayjs.extend(weekday)\n\ndayjs.locale('zh-tw')\n","import * as React from 'react'\n\nexport interface WithChildrenProps {\n  children: React.ReactNode\n}\n\nexport type PackComponentType<\n  T extends WithChildrenProps = WithChildrenProps\n> = React.ElementType<T>\n\nexport function pack(\n  children: React.ReactNode = null,\n  ...components: PackComponentType[]\n) {\n  if (!components.length) {\n    return children as JSX.Element\n  }\n\n  const [Component, ...rest] = components\n\n  if (React.isValidElement(Component)) {\n    return (\n      <Component.type {...Component.props}>\n        {pack(children, ...rest)}\n      </Component.type>\n    )\n  }\n\n  return <Component>{pack(children, ...rest)}</Component>\n}\n\nexport function createPack(...components: any[]) {\n  return function PackComponent({ children }: WithChildrenProps) {\n    return pack(children, ...components)\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Button from '@/components/button'\n\ntype ErrorInfo = {\n  componentStack: string\n}\n\ntype FallbackProps = {\n  error?: Error\n  componentStack?: string\n  resetErrorBoundary: () => void\n}\n\ntype ErrorBoundaryProps = {\n  onResetKeysChange?: (\n    prevResetKeys: Array<any> | undefined,\n    resetKeys: Array<any> | undefined\n  ) => void\n  onReset?: (...args: any) => void\n  onError?: (error: Error, componentStack: string) => void\n  resetKeys?: Array<any>\n  FallbackComponent?: React.ComponentType<FallbackProps>\n  fallbackRender?: (props: FallbackProps) => React.ReactElement<any, any> | null\n  fallback?: React.ReactElement<any, any> | null\n}\n\ntype ErrorBoundaryState = {\n  hasError?: boolean\n  error?: Error | null\n  info?: ErrorInfo | null\n}\n\nconst ErrorFallbackWrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  margin: 0 auto;\n  padding: 50px;\n`\n\nfunction ErrorFallback({\n  error,\n  componentStack,\n  resetErrorBoundary,\n}: FallbackProps) {\n  return (\n    <ErrorFallbackWrapper role=\"alert\">\n      <p className=\"text-xl\">Something went wrong:</p>\n      <pre className=\"text-sm\">{error?.message}</pre>\n      <pre className=\"text-sm\">{componentStack}</pre>\n      <Button onClick={resetErrorBoundary}>Try again</Button>\n    </ErrorFallbackWrapper>\n  )\n}\n\nconst changedArray = (a: any[] | undefined = [], b: any[] | undefined = []) =>\n  a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]))\n\nconst initialState = { error: null, info: null }\nexport default class ErrorBoundary extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  state: ErrorBoundaryState = initialState\n\n  resetErrorBoundary = (...args: any) => {\n    this.props.onReset?.(...args)\n    this.setState(initialState)\n  }\n\n  componentDidCatch(error: Error, info: ErrorInfo) {\n    this.props.onError?.(error, info?.componentStack)\n    this.setState({ error, info })\n  }\n\n  componentDidUpdate(prevProps: ErrorBoundaryProps) {\n    const { error } = this.state\n    const { resetKeys } = this.props\n    if (error !== null && changedArray(prevProps.resetKeys, resetKeys)) {\n      this.props.onResetKeysChange?.(prevProps.resetKeys, resetKeys)\n      this.setState(initialState)\n    }\n  }\n\n  render() {\n    const { error, info } = this.state\n    const {\n      fallbackRender,\n      FallbackComponent = ErrorFallback,\n      fallback,\n    } = this.props\n\n    if (error !== null) {\n      const props = {\n        componentStack: info?.componentStack,\n        error,\n        resetErrorBoundary: this.resetErrorBoundary,\n      }\n      if (React.isValidElement(fallback)) {\n        return fallback\n      } else if (typeof fallbackRender === 'function') {\n        return fallbackRender(props)\n      } else if (FallbackComponent) {\n        return <FallbackComponent {...props} />\n      } else {\n        throw new Error(\n          'react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop'\n        )\n      }\n    }\n\n    return this.props.children\n  }\n}\n\nfunction withErrorBoundary<P>(\n  Component: React.ComponentType<P>,\n  errorBoundaryProps: ErrorBoundaryProps\n) {\n  function Wrapped(props: any) {\n    return (\n      <ErrorBoundary {...errorBoundaryProps}>\n        <Component {...props} />\n      </ErrorBoundary>\n    )\n  }\n\n  // Format for display in DevTools\n  const name = Component.displayName || Component.name || 'Unknown'\n  Wrapped.displayName = `withErrorBoundary(${name})`\n\n  return Wrapped\n}\n\nfunction useErrorHandler<P = Error>(givenError?: P) {\n  const [error, setError] = React.useState(null)\n  if (givenError) throw givenError\n  if (error) throw error\n  return setError\n}\n\nexport { ErrorBoundary, withErrorBoundary, useErrorHandler }\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Button from '@/components/button'\nimport { envStore } from '@/constants/env'\n\ntype Props = {\n  type?: number | string | 404\n}\n\nexport default function Exception({ type = 404 }: Props) {\n  return (\n    <ExceptionWrapper>\n      <div className=\"exception\">\n        <div className=\"exception__imgBlock\">\n          <div\n            className=\"exception__imgEle\"\n            style={{\n              backgroundImage: `url(\"${envStore.publicUrl}/images/${type}.svg\")`,\n            }}\n          />\n        </div>\n        <div className=\"exception__content\">\n          <h1>404</h1>\n          <div className=\"exception__desc\">抱歉，你訪問的頁面不存在</div>\n          <div className=\"exception__actions\">\n            <Link to=\"/\">\n              <Button color=\"primary\">回首頁</Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </ExceptionWrapper>\n  )\n}\n\nconst ExceptionWrapper = styled.div`\n  height: 100%;\n  margin-right: -24px;\n  background: #f9f9fb;\n  border-radius: 4px;\n\n  .exception {\n    display: flex;\n    align-items: center;\n    height: 100%;\n  }\n\n  .exception .exception__imgBlock {\n    flex: 0 0 62.5%;\n    width: 62.5%;\n    padding-right: 152px;\n    zoom: 1;\n  }\n\n  .exception .exception__imgEle {\n    float: right;\n    width: 100%;\n    max-width: 430px;\n    height: 360px;\n    background-repeat: no-repeat;\n    background-position: 50% 50%;\n    background-size: contain;\n  }\n\n  .exception .exception__content {\n    flex: auto;\n  }\n\n  .exception .exception__content h1 {\n    margin-bottom: 24px;\n    color: #434e59;\n    font-weight: 600;\n    font-size: 72px;\n    line-height: 72px;\n  }\n\n  .exception .exception__content .exception__desc {\n    margin-bottom: 24px;\n    color: rgba(0, 0, 0, 0.45);\n    font-size: 20px;\n    line-height: 28px;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Row, Col } from 'antd'\nimport { Loading3QuartersOutlined } from '@ant-design/icons'\n\ntype PropTypes = {\n  className?: string\n  style?: React.CSSProperties\n}\n\nconst Wrapper = styled.div`\n  .ant-spin {\n    &--inner {\n      margin: 0 auto;\n    }\n  }\n`\n\nexport function Loading(props: PropTypes) {\n  return <Loading3QuartersOutlined {...props} />\n}\n\nexport default React.memo(function Loading({\n  className,\n  style,\n  ...props\n}: PropTypes) {\n  return (\n    <Wrapper className=\"bg-greyF9\">\n      <Row justify=\"center\" className={className}>\n        <Col className=\"ant-spin--inner\">\n          <Loading3QuartersOutlined spin style={style} />\n        </Col>\n      </Row>\n    </Wrapper>\n  )\n})\n","import { Breadcrumb } from 'antd'\nimport styled from 'styled-components'\n\nconst StyledBreadcrumb = styled(Breadcrumb)`\n  &.ant-breadcrumb {\n    font-size: 16px;\n\n    .ant-breadcrumb-link {\n      cursor: pointer;\n    }\n\n    .ant-breadcrumb-link,\n    a {\n      color: #fff;\n    }\n\n    .anticon {\n      font-size: 16px;\n    }\n\n    .ant-breadcrumb-link:hover,\n    a:hover {\n      text-decoration: underline;\n    }\n\n    .ant-breadcrumb-separator {\n      margin: 0 16px;\n      color: #fff;\n    }\n\n    > span:last-child {\n      color: #fff;\n      text-decoration: underline;\n    }\n  }\n`\n\nexport default StyledBreadcrumb\n","import React from 'react'\nimport { ModalProps } from 'antd/lib/modal'\nimport styled from 'styled-components'\nimport { ExclamationCircleFilled } from '@ant-design/icons'\nimport Modal from '@/components/modal'\nimport Button from '@/components/button'\n\ninterface Props extends ModalProps {}\n\nconst StyledModal = styled(Modal)`\n  .ant-modal-footer {\n    border-top: none;\n  }\n`\n\nexport default function LogoutConfirmModal({\n  onOk,\n  onCancel,\n  ...props\n}: Props) {\n  return (\n    <StyledModal\n      {...props}\n      visible\n      centered\n      closable={false}\n      bodyStyle={{ paddingTop: 48 }}\n      width={350}\n      footer={[\n        <div\n          key=\"logout-modal-footer\"\n          className=\"flex items-center justify-center mb-4\">\n          <Button\n            key=\"btn-ok\"\n            color=\"primary\"\n            style={{ minWidth: 120, marginRight: 16 }}\n            onClick={onOk}>\n            確定\n          </Button>\n          <Button\n            key=\"btn-cancel\"\n            color=\"outline\"\n            style={{ minWidth: 120 }}\n            onClick={onCancel}>\n            取消\n          </Button>\n        </div>,\n      ]}>\n      <div className=\"text-center\">\n        <ExclamationCircleFilled\n          className=\"mb-6\"\n          style={{ fontSize: 48, color: '#e53e3e' }}\n        />\n        <div className=\"text-lg font-medium text-darkGrey mb-4\">\n          請問是否確定要登出？\n        </div>\n      </div>\n    </StyledModal>\n  )\n}\n","import React from 'react'\nimport cx from 'classnames'\nimport { Layout, Menu, Select } from 'antd'\nimport {\n  SettingOutlined,\n  ExportOutlined,\n  HomeOutlined,\n  CaretDownOutlined,\n} from '@ant-design/icons'\nimport styled from 'styled-components'\nimport Button from '@/components/button'\nimport Breadcrumb from '@/components/breadcrumb'\nimport LogoutConfirmModal from '@/components/logout-confirm-modal'\nimport { useBreadcrumbState, useHeaderContentValue } from '@/hooks/useApp'\nimport useAuth from '@/hooks/useAuth'\nimport useVisible from '@/hooks/useVisible'\nimport history from '@/utils/history'\nimport { envStore } from '@/constants/env'\nimport * as routes from '@/constants/routes'\nimport { divisions } from '@/services/authService'\n\nexport default function AppHeader() {\n  const [items] = useBreadcrumbState()\n  const content = useHeaderContentValue()\n\n  const { logout, user, setUser } = useAuth()\n\n  const [current, setCurrentPath] = React.useState(history.location.pathname)\n\n  const [logoutModalVisible, handleLogoutModalVisible] = useVisible()\n\n  const handleTo = (pathname?: string) => () => {\n    if (pathname) {\n      setCurrentPath(pathname)\n      history.push(pathname)\n    }\n  }\n\n  const getMenuClassName = (targetUrl: string) => {\n    return cx({ 'is--current': current !== '/' && targetUrl.includes(current) })\n  }\n\n  const handleUserChange = (value: string) => {\n    setUser(prev => ({ ...prev, division: value } as any))\n  }\n\n  return (\n    <>\n      {logoutModalVisible && (\n        <LogoutConfirmModal\n          onOk={logout as any}\n          onCancel={handleLogoutModalVisible}\n        />\n      )}\n      <Header>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center\">\n            <Logo onClick={handleTo('/')}>\n              <img\n                src={`${envStore.publicUrl}/images/logo-sm@2x.png`}\n                alt=\"app-logo\"\n                className=\"cursor-pointer\"\n              />\n            </Logo>\n            {user.division !== 'CLINICIAN' && (\n              <Menu\n                mode=\"horizontal\"\n                className=\"bg-transparent ml-3\"\n                style={{ borderBottom: 'none', lineHeight: '46px' }}>\n                {user.division === 'PATH' && (\n                  <MenuItem\n                    key={routes.IMAGE_SCHEDULER}\n                    onClick={handleTo(routes.IMAGE_SCHEDULER)}\n                    className={getMenuClassName(routes.IMAGE_SCHEDULER)}>\n                    <div className=\"flex items-center text-base\">\n                      <SettingOutlined />\n                      報告排班\n                    </div>\n                  </MenuItem>\n                )}\n                <SubMenu\n                  key={routes.REPORT_LIST}\n                  className={getMenuClassName(routes.REPORT_LIST)}\n                  popupOffset={[-14, 0]}\n                  popupClassName=\"rounded\"\n                  title={\n                    <div className=\"flex items-center text-base\">\n                      <SettingOutlined />\n                      報告查詢\n                      <CaretDownOutlined className=\"ml-2 mr-0\" />\n                    </div>\n                  }>\n                  {user.division !== 'RAD' && (\n                    <Menu.Item\n                      key={routes.REPORT_LIST}\n                      onClick={handleTo(routes.REPORT_LIST)}\n                      className={getMenuClassName(routes.REPORT_LIST)}>\n                      <div className=\"flex items-center text-sm\">\n                        <SettingOutlined />\n                        病理報告查詢\n                      </div>\n                    </Menu.Item>\n                  )}\n                  {user.division !== 'PATH' && (\n                    <Menu.Item\n                      key={routes.RADIOL_REPORT_LIST}\n                      onClick={handleTo(routes.RADIOL_REPORT_LIST)}\n                      className={getMenuClassName(routes.RADIOL_REPORT_LIST)}>\n                      <div className=\"flex items-center text-sm\">\n                        <SettingOutlined />\n                        放射報告查詢\n                      </div>\n                    </Menu.Item>\n                  )}\n                  {user.division === 'PATH' && (\n                    <Menu.Item\n                      key={routes.REPORT_VERSION_COMPARISON}\n                      onClick={handleTo(routes.REPORT_VERSION_COMPARISON)}\n                      className={getMenuClassName(\n                        routes.REPORT_VERSION_COMPARISON\n                      )}>\n                      <div className=\"flex items-center text-sm\">\n                        <SettingOutlined />\n                        版本比較\n                      </div>\n                    </Menu.Item>\n                  )}\n                  <Menu.Item\n                    key={routes.YELLOW_CARD_INQUIRY}\n                    onClick={handleTo(routes.YELLOW_CARD_INQUIRY)}\n                    className={getMenuClassName(routes.YELLOW_CARD_INQUIRY)}>\n                    <div className=\"flex items-center text-sm\">\n                      <SettingOutlined />\n                      黃卡新檢索\n                    </div>\n                  </Menu.Item>\n                  <Menu.Item\n                    key={routes.BLOOD_BANK_REVIEW}\n                    onClick={handleTo(routes.BLOOD_BANK_REVIEW)}\n                    className={getMenuClassName(routes.BLOOD_BANK_REVIEW)}\n                    style={{ display: 'none' }}>\n                    <div className=\"flex items-center text-sm\">\n                      <SettingOutlined />\n                      血庫備血審查作業\n                    </div>\n                  </Menu.Item>\n                </SubMenu>\n                <MenuItem\n                  key={routes.REPORT_INQUIRY}\n                  onClick={handleTo(routes.REPORT_INQUIRY)}\n                  className={getMenuClassName(routes.REPORT_INQUIRY)}>\n                  <div className=\"flex items-center text-base\">\n                    <SettingOutlined />\n                    輸入報告\n                  </div>\n                </MenuItem>\n                <SubMenu\n                  key={routes.REPORT_TEMPLATE_LIST}\n                  className={getMenuClassName(routes.REPORT_TEMPLATE_LIST)}\n                  popupOffset={[-14, 0]}\n                  popupClassName=\"rounded\"\n                  title={\n                    <div className=\"flex items-center text-base\">\n                      <SettingOutlined />\n                      報告模版\n                      <CaretDownOutlined className=\"ml-2 mr-0\" />\n                    </div>\n                  }>\n                  <Menu.Item\n                    key={routes.REPORT_TEMPLATE_LIST}\n                    onClick={handleTo(routes.REPORT_TEMPLATE_LIST)}\n                    className={getMenuClassName(routes.REPORT_TEMPLATE_LIST)}>\n                    <div className=\"flex items-center text-sm\">\n                      <SettingOutlined />\n                      結構式報告模版\n                    </div>\n                  </Menu.Item>\n                  <Menu.Item\n                    key={routes.PHRASE_LIST}\n                    onClick={handleTo(routes.PHRASE_LIST)}\n                    className={getMenuClassName(routes.PHRASE_LIST)}>\n                    <div className=\"flex items-center text-sm\">\n                      <SettingOutlined />\n                      片語模版\n                    </div>\n                  </Menu.Item>\n                </SubMenu>\n                <MenuItem\n                  key=\"outside\"\n                  onClick={handleTo('/')}\n                  className={getMenuClassName('outside')}>\n                  <div className=\"flex items-center text-base\">\n                    <SettingOutlined />\n                    醫學影像教學平台\n                  </div>\n                </MenuItem>\n              </Menu>\n            )}\n          </div>\n          <div className=\"flex items-center\">\n            <Select\n              bordered={false}\n              placeholder=\"切換身分\"\n              className=\"text-white\"\n              style={{ width: 120, marginRight: -10 }}\n              suffixIcon={false}\n              defaultValue={user.division}\n              onChange={handleUserChange}>\n              <Select.Option value={divisions.RAD}>放射科醫師</Select.Option>\n              <Select.Option value={divisions.PATH}>病理科醫師</Select.Option>\n              <Select.Option value={divisions.CLINICIAN}>\n                臨床醫師\n              </Select.Option>\n            </Select>\n            <div className=\"text-white mr-1\">Hi, 使用者</div>\n            {/* <Avatar className=\"flex items-center h-12 w-12\">\n              <div className=\"text-2xl\">C</div>\n            </Avatar> */}\n            <Button\n              icon={\n                <ExportOutlined\n                  className=\"text-white text-2xl\"\n                  style={{ marginRight: 0 }}\n                />\n              }\n              onClick={handleLogoutModalVisible}\n              className=\"ml-4 bg-transparent border border-white rounded pr-1 hover--none\"\n              style={{ minWidth: 35, borderColor: '#fff' }}\n            />\n          </div>\n        </div>\n        <div className=\"mt-3 ml-4 pb-0 flex justify-between\">\n          <Breadcrumb\n            separator=\">\"\n            style={{ minHeight: 32, display: 'flex', alignItems: 'center' }}>\n            <Breadcrumb.Item onClick={handleTo('/')}>\n              <HomeOutlined className=\"relative\" style={{ top: -4 }} />\n            </Breadcrumb.Item>\n            {items.map((x, idx) => (\n              <Breadcrumb.Item\n                key={`breadcrumb-${idx}`}\n                onClick={handleTo(x.href)}>\n                {x.name}\n              </Breadcrumb.Item>\n            ))}\n          </Breadcrumb>\n          {content}\n        </div>\n      </Header>\n    </>\n  )\n}\n\nconst Header = styled(Layout.Header)`\n  &.ant-layout-header {\n    height: auto;\n    padding: 16px 1.7rem 10px 2.1rem;\n    background: ${p => `linear-gradient(-90deg, #42c2b8, ${p.theme.primary})`};\n    color: ${p => p.theme.primary};\n    box-shadow: 0 0 20px ${p => p.theme.purple150};\n  }\n\n  .anticon {\n    cursor: pointer;\n  }\n`\n\nconst MenuItem = styled(Menu.Item)`\n  &.ant-menu-item {\n    margin: 0 2px !important;\n    padding: 0 10px !important;\n    border-radius: 6px;\n    border-bottom: none !important;\n    color: #fff;\n\n    &.is--current,\n    &:hover {\n      color: #fff !important;\n      background: rgba(24, 144, 138, 1) !important;\n    }\n  }\n\n  &.ant-menu-item-selected {\n    color: #fff !important;\n  }\n`\n\nconst SubMenu = styled(Menu.SubMenu)`\n  &.ant-menu-submenu {\n    margin: 0 5px !important;\n    padding: 0 15px !important;\n    border-radius: 6px;\n    border-bottom: none !important;\n\n    .ant-menu-submenu-title {\n      color: #fff;\n    }\n\n    &.is--current,\n    &:hover {\n      background: rgba(24, 144, 138, 1) !important;\n    }\n  }\n`\n\nconst Logo = styled.div``\n","import React from 'react'\n\nexport default React.lazy(() => import('./home'))\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Loading from '@/components/loading'\n\nconst Login = React.lazy(() => import('./login'))\n\nconst ForgetPassword = React.lazy(() => import('./forget-password'))\n\nexport default function LoginRoute() {\n  return (\n    <React.Suspense fallback={<Loading />}>\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/forget-password\" component={ForgetPassword} />\n        <Route component={Login} />\n      </Switch>\n    </React.Suspense>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { Layout } from 'antd'\nimport ErrorBoundary from '@/components/error-boundary'\nimport Exception from '@/components/exception'\nimport Loading from '@/components/loading'\nimport AppHeader from '@/components/app-header'\nimport { useRoutes, RouteItem } from '@/constants/routes'\nimport Home from '@/containers/home'\nimport Login from '@/containers/login'\nimport useAuth from '@/hooks/useAuth'\n\nfunction App() {\n  const { isAuthenticated } = useAuth()\n\n  const routes = useRoutes()\n\n  const renderRouteItem = React.useCallback((item: RouteItem) => {\n    const path = `${item.path}${item.param ? `/${item.param}` : ''}`\n\n    return (\n      <Route\n        exact\n        key={item.id}\n        path={path}\n        component={\n          item.component ? item.component : () => <h1> {item.title} </h1>\n        }\n      />\n    )\n  }, [])\n\n  const renderRoute: any = React.useCallback(\n    (data: RouteItem[]) => {\n      return data.map((item: RouteItem) => {\n        return [\n          renderRouteItem(item),\n          item.children && renderRoute(item.children),\n          item.hide && renderRoute(item.hide),\n        ]\n      })\n    },\n    [renderRouteItem]\n  )\n\n  return (\n    <ErrorBoundary>\n      {!isAuthenticated && <Login />}\n      {isAuthenticated && (\n        <Layout>\n          <AppHeader />\n          <React.Suspense fallback={<Loading />}>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              {renderRoute(routes)}\n              <Route component={Exception} />\n            </Switch>\n          </React.Suspense>\n        </Layout>\n      )}\n    </ErrorBoundary>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './bootstrap'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Router } from 'react-router-dom'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { RecoilRoot, MutableSnapshot } from 'recoil'\nimport { ConfigProvider } from 'antd'\nimport zhTW from 'antd/lib/locale/zh_TW'\nimport { ThemeProvider } from 'styled-components'\nimport { SWRConfig } from 'swr'\nimport request from '@/utils/request'\nimport history from '@/utils/history'\nimport { createPack } from '@/utils/createPack'\nimport { redirect } from '@/utils/webHelper'\nimport { AuthProvider } from '@/hooks/useAuth'\nimport App from './app'\nimport theme from './theme'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nredirect()\n\nconst initializeState = ({ set }: MutableSnapshot) => {\n  // set('reportTemplateListState', Store.get('reportTemplateListState'))\n  // for(const [key, value] of Storage.entries()) {\n  //   set(myLookupOfAtomWithKey(key), JSON.parse(value).value);\n  // }\n}\n\nconst EnhancedApp = createPack(\n  <RecoilRoot initializeState={initializeState} />,\n  <ThemeProvider theme={theme} />,\n  <ConfigProvider locale={zhTW} />,\n  <AuthProvider />,\n  <SWRConfig\n    value={{ suspense: true, fetcher: request, revalidateOnFocus: false }}\n  />,\n  <DndProvider backend={HTML5Backend} />,\n  <Router history={history} />\n)\n\n// ReactDOM.unstable_createRoot(document.getElementById('root') as any).render(\n//   <EnhancedApp>\n//     <App />\n//   </EnhancedApp>\n// )\nReactDOM.render(\n  <EnhancedApp>\n    <App />\n  </EnhancedApp>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\nimport { atom, useRecoilState, selectorFamily } from 'recoil'\nimport {\n  find,\n  mergeAll,\n  map,\n  values,\n  head,\n  pathOr,\n  flatten,\n  length,\n  of,\n  filter,\n  keys,\n} from 'ramda'\nimport Store from 'store'\nimport { setComponentByTab } from '@/components/snippet-template-list'\nimport { Snippets, SnippetProps, ReportTemplate } from '@/constants/types'\nimport useAuth from '@/hooks/useAuth'\nconst { compose } = require('ramda')\n\n// 模版分類\nexport const useSnippetCategoryOfReport = () => {\n  const { user } = useAuth()\n\n  if (user.division === 'PATH') {\n    return {\n      PATHOLOGICAL_DIAGNOSIS: 'Pathological diagnosis',\n      GROSS: 'Gross',\n      MICROSCOPY: 'Microscopy',\n      NOTES: 'Notes',\n      REFERENCES: 'References',\n    }\n  }\n\n  return {\n    PROCEDURE_INFORMATION: 'Procedure Information',\n    CLINICAL_INFORMATION: 'Clinical Information',\n    COMPARISON: 'Comparison',\n    FINDINGS: 'Findings',\n    IMPRESSION: 'Impression',\n  }\n}\n\nconst fakeReportTemplateList: ReportTemplate[] = setComponentByTab(\n  Store.get('reportTemplateListState')\n)\n\nconst useDefaultSnippetsOfReport = () => {\n  const snippetCategoryOfReport = useSnippetCategoryOfReport()\n\n  return compose(\n    mergeAll,\n    map((key: string) => ({ [key]: [] })),\n    values\n  )(snippetCategoryOfReport)\n}\n\nconst reportTemplateListState = atom({\n  key: 'reportTemplateListState',\n  default: fakeReportTemplateList,\n})\n\nexport const snippetsOfReportState = selectorFamily<\n  ReportTemplate,\n  React.Key | undefined\n>({\n  key: 'reportSnippetsState',\n  get: id => ({ get }) => {\n    return compose(find((x: ReportTemplate) => `${x.id}` === `${id}`))(\n      setComponentByTab(get(reportTemplateListState))\n    )\n  },\n})\n\nconst reportPreviewState = atom({\n  key: 'reportPreviewState',\n  default: false,\n})\n\nconst useCategoryState = () => {\n  const snippetCategoryOfReport = useSnippetCategoryOfReport()\n\n  return atom<string>({\n    key: 'categoryState',\n    default: compose(head, values)(snippetCategoryOfReport),\n  })\n}\n\n// 報告模版清單\nexport function useReportTemplateState() {\n  return useRecoilState(reportTemplateListState)\n}\n\n// 模版報告資料\nexport function useReportTemplate({\n  id,\n  data,\n}: {\n  id?: React.Key\n  data?: any\n}) {\n  const [reportTemplateList] = useRecoilState(reportTemplateListState)\n\n  const defaultSnippetsOfReport = useDefaultSnippetsOfReport()\n\n  const [reportTemplate, setReportTemplate] = React.useState<ReportTemplate>({\n    setting: defaultSnippetsOfReport,\n  } as any)\n\n  // const [reportTemplate] = useRecoilState<ReportTemplate>(\n  //   snippetsOfReportState(id) as any\n  // )\n\n  React.useEffect(() => {\n    if (data?.id) {\n      setReportTemplate(compose(head, setComponentByTab, of)(data))\n    }\n  }, [data])\n\n  React.useEffect(() => {\n    if (id) {\n      setReportTemplate(\n        compose(find((x: ReportTemplate) => `${x.id}` === `${id}`))(\n          setComponentByTab(reportTemplateList)\n        )\n      )\n    }\n  }, [id]) // eslint-disable-line\n\n  let _snippetList = pathOr(defaultSnippetsOfReport, ['setting'])(\n    reportTemplate\n  )\n\n  React.useEffect(() => {\n    setSnippetList(_snippetList)\n  }, [JSON.stringify(_snippetList)]) // eslint-disable-line\n\n  const [snippetList, setSnippetList] = React.useState<Snippets>(_snippetList)\n\n  let snippetById: { [key: string]: SnippetProps } = {}\n\n  return {\n    reportTemplate,\n    snippetList,\n    setSnippetList,\n    categoryCountById: compose(\n      mergeAll,\n      map((key: string) => ({ [key]: length(snippetList[key]) })),\n      keys\n    )(snippetList),\n    categoryCount: compose(length, keys)(snippetList),\n    total: compose(\n      length,\n      filter((x: SnippetProps) => x.type !== 'TemplateSectionHeader'),\n      flatten,\n      values\n    )(snippetList),\n    snippetById: compose(\n      map((x: SnippetProps) => (snippetById[x.id] = x)),\n      flatten,\n      values\n    )(snippetList),\n  }\n}\n\n// 切換編輯/檢視模式\nexport function useReportPreview() {\n  const [isPreview, setIsPreview] = useRecoilState(reportPreviewState)\n\n  return [isPreview, () => setIsPreview(prev => !prev)] as [boolean, () => void]\n}\n\n// 更方便切換編輯/檢視模式\nexport function useToggleReportPreview(state: boolean = false) {\n  const [isPreview, setIsPreview] = useRecoilState(reportPreviewState)\n\n  React.useEffect(() => {\n    setIsPreview(state)\n\n    return () => {\n      setIsPreview(false)\n    }\n  }, [state]) // eslint-disable-line\n\n  return [isPreview, () => setIsPreview(prev => !prev)] as [boolean, () => void]\n}\n\n// 編輯報告/模版時，當前的分類\nexport function useCurrentCategoryOfSnippet() {\n  const categoryState = useCategoryState()\n  return useRecoilState(categoryState)\n}\n","import React from 'react'\nimport { Checkbox } from 'antd'\nimport { CheckboxProps } from 'antd/lib/checkbox'\nimport styled from 'styled-components'\nimport { RefProps } from '@/constants/types'\n\nconst CheckboxGroup = Checkbox.Group\n\nconst StyledCheckbox = styled(Checkbox)`\n  .ant-checkbox-checked .ant-checkbox-inner {\n    background-color: ${p => p.theme.primary};\n    border-color: ${p => p.theme.primary};\n  }\n\n  &.ant-checkbox-wrapper:hover .ant-checkbox-inner,\n  .ant-checkbox:hover .ant-checkbox-inner,\n  .ant-checkbox-input:focus + .ant-checkbox-inner {\n    border-color: ${p => p.theme.primary};\n  }\n\n  .ant-checkbox-checked .ant-checkbox-inner:after {\n    border: 2px solid #fff;\n    border-top: 0;\n    border-left: 0;\n  }\n\n  .ant-checkbox-inner {\n    border: 1px solid ${p => p.theme.secondary};\n  }\n\n  &.is--normal {\n    font-size: 14px !important;\n    font-weight: normal !important;\n  }\n`\n\ntype Props = RefProps & CheckboxProps\n\nconst CheckboxComponent: React.ElementType<Props> = React.forwardRef<\n  typeof StyledCheckbox,\n  Props\n>(({ ...props }, ref) => <StyledCheckbox forwardRef={ref} {...props} />)\n\nCheckboxComponent.displayName = 'Checkbox'\n\nexport { CheckboxComponent as Checkbox, CheckboxGroup }\n\nexport default CheckboxComponent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal } from 'antd'\nimport { ModalProps } from 'antd/lib/modal'\n\nconst StyledModal = styled(Modal)`\n  animation-duration: 0s !important;\n  transition: none !important;\n\n  .ant-modal-header--border-none {\n    border-bottom: none;\n  }\n\n  .ant-modal-footer {\n    padding-top: 14px;\n    padding-bottom: 14px;\n  }\n`\n\nexport default class ModalComponent extends React.Component<ModalProps, any> {\n  static confirm = Modal.confirm\n  static error = Modal.error\n  static success = Modal.success\n  static info = Modal.info\n\n  render() {\n    return <StyledModal {...this.props}>{this.props.children}</StyledModal>\n  }\n}\n","import { Collapse } from 'antd'\nimport styled from 'styled-components'\n\nconst borderRadius = '8px'\n\nconst StyledCollapse = styled(Collapse)`\n  &.ant-collapse {\n    border-radius: ${borderRadius};\n    border-bottom: none;\n\n    > .ant-collapse-item > .ant-collapse-header {\n      padding-left: 0;\n      background: ${p => p.theme.primary};\n      color: #fff;\n    }\n\n    &.header-pl-clear > .ant-collapse-item > .ant-collapse-header {\n      padding-left: 16px;\n    }\n\n    > .ant-collapse-item:first-child > .ant-collapse-header {\n      border-top-left-radius: ${borderRadius};\n      border-top-right-radius: ${borderRadius};\n    }\n\n    > .ant-collapse-item:last-child {\n      border-bottom: none;\n    }\n\n    > .ant-collapse-item:last-child > .ant-collapse-content {\n      border-bottom-left-radius: ${borderRadius};\n      border-bottom-right-radius: ${borderRadius};\n    }\n\n    > .ant-collapse-item.ant-collapse-item-active:last-child {\n      border-bottom: 1px solid #d9d9d9;\n    }\n\n    > .ant-collapse-item:not(.ant-collapse-item-active):last-child\n      > .ant-collapse-header {\n      border-bottom-left-radius: ${borderRadius};\n      border-bottom-right-radius: ${borderRadius};\n    }\n  }\n`\n\nexport default StyledCollapse\n","import { History, createHashHistory } from 'history'\nimport { envStore } from '@/constants/env'\n\nconst history = createHashHistory({ basename: envStore.appBaseName })\n\nexport default history as NonNullable<History>\n","import React from 'react'\nimport { Select } from 'antd'\nimport { SelectProps } from 'antd/lib/select'\nimport styled from 'styled-components'\n\nconst StyledSelect: any = styled(Select)`\n  &.ant-select {\n    &.ant-select-single:not(.ant-select-customize-input) .ant-select-selector,\n    .ant-select-selection:hover,\n    .ant-select-selection:active,\n    .ant-select-selection:focus {\n      border-color: #d9d9d9;\n    }\n\n    .ant-select-selection {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    .ant-select-selection:active,\n    .ant-select-selection:focus {\n      box-shadow: none;\n    }\n\n    .ant-select-arrow {\n      color: ${p => p.theme.primary};\n    }\n\n    .ant-select-arrow-icon {\n      position: relative;\n      top: -1px;\n      font-size: 14px;\n    }\n\n    &.ant-select-borderless .ant-select-selector {\n      position: relative;\n      bottom: 1px;\n      border: 0;\n      border-bottom: 1px #d9d9d9 solid !important;\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  }\n\n  &.ant-select.is--outline {\n    > .ant-select-selector {\n      background: transparent;\n      border: 1px solid #fff;\n      color: #fff;\n\n      &:active,\n      &:focus,\n      &:hover {\n        border: 1px solid #fff;\n      }\n    }\n\n    .ant-select-selection-placeholder,\n    .ant-select-arrow {\n      color: #fff;\n    }\n\n    .ant-select-selection-placeholder {\n      opacity: 1;\n      left: 30%;\n    }\n  }\n\n  &.ant-select.is--transparent {\n    &.ant-select-focused > .ant-select-selector {\n      border: 1px solid #666a8f;\n    }\n\n    > .ant-select-selector {\n      background: transparent;\n      border: 1px solid #666a8f;\n      color: #a9b6d8;\n\n      &:active,\n      &:focus,\n      &:hover {\n        border: 1px solid #666a8f;\n      }\n    }\n\n    .ant-select-arrow {\n      color: #a9b6d8;\n    }\n  }\n`\n\nclass SelectComponent<T = any> extends React.Component<SelectProps<T>, any> {\n  public static Option = Select.Option\n\n  public static displayName = 'Select'\n\n  render() {\n    return <StyledSelect {...this.props}>{this.props.children}</StyledSelect>\n  }\n}\n\nexport default SelectComponent\n","import React from 'react'\nimport { atom, useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'\n\ntype BreadcrumbItem = {\n  href?: string\n  name: string\n}\n\nexport const breadcrumbState = atom<BreadcrumbItem[]>({\n  key: 'breadcrumbState',\n  default: [],\n})\n\nexport function useBreadcrumbState() {\n  const state = useRecoilState(breadcrumbState)\n  return state\n}\n\nexport function useBreadcrumb(items: BreadcrumbItem[] = []) {\n  const setter = useSetRecoilState(breadcrumbState)\n\n  React.useEffect(() => {\n    setter(items)\n  }, []) // eslint-disable-line\n\n  return setter\n}\n\nexport const headerContentState = atom<React.ReactNode>({\n  key: 'headerContentState',\n  default: null,\n})\n\nexport function useHeaderContentState() {\n  return useRecoilState(headerContentState)\n}\n\nexport function useHeaderContent(node?: React.ReactNode) {\n  const setter = useSetRecoilState(headerContentState)\n\n  React.useEffect(() => {\n    setter(node)\n\n    return () => {\n      setter(null)\n    }\n  }, [node]) // eslint-disable-line\n}\n\nexport function useHeaderContentValue() {\n  const value = useRecoilValue(headerContentState)\n  return value\n}\n","export { default } from '../theme'\n","import React from 'react'\nimport { Modal } from 'antd'\nimport { ModalProps, ModalFuncProps } from 'antd/lib/modal'\n\nexport const modalDefaultProps = (\n  content?: React.ReactNode,\n  props?: ModalProps\n): ModalFuncProps => ({\n  content: (\n    <div\n      className=\"text-darkGrey font-medium\"\n      css={{ marginTop: 16, marginBottom: 30 }}>\n      {content}\n    </div>\n  ),\n  icon: null,\n  width: 440,\n  okText: '刪除',\n  cancelText: '取消',\n  centered: true,\n  // maskStyle: {\n  //   background: theme.modal.maskDarken,\n  // },\n  autoFocusButton: null,\n  okButtonProps: {\n    className: 'c-btn is--danger',\n    style: { minWidth: 80, marginRight: 24 },\n  },\n  cancelButtonProps: {\n    className: 'c-btn is--outline mr-0 float-right',\n    style: { minWidth: 80 },\n  },\n  ...props,\n})\n\nexport const success = ({\n  onOk,\n  onCancel,\n  content = '資料已儲存',\n  ...props\n}: ModalFuncProps) => {\n  Modal.info({\n    ...modalDefaultProps(),\n    ...props,\n    onOk: () => {\n      if (onOk) {\n        onOk()\n      }\n    },\n    onCancel() {\n      if (onCancel) {\n        onCancel()\n      }\n    },\n  })\n}\n\nexport const confirm = ({\n  onOk,\n  onCancel,\n  content = '刪除後將無法還原，確認繼續？',\n  ...props\n}: ModalFuncProps) => {\n  Modal.confirm({\n    ...modalDefaultProps(content),\n    ...props,\n    onOk: () => {\n      if (onOk) {\n        onOk()\n      }\n    },\n    onCancel() {\n      if (onCancel) {\n        onCancel()\n      }\n    },\n  })\n}\n","const preserveCamelCase = (string: string) => {\n  let isLastCharLower = false\n  let isLastCharUpper = false\n  let isLastLastCharUpper = false\n\n  for (let i = 0; i < string.length; i++) {\n    const character = string[i]\n\n    if (\n      isLastCharLower &&\n      /[a-zA-Z]/.test(character) &&\n      character.toUpperCase() === character\n    ) {\n      string = string.slice(0, i) + '-' + string.slice(i)\n      isLastCharLower = false\n      isLastLastCharUpper = isLastCharUpper\n      isLastCharUpper = true\n      i++\n    } else if (\n      isLastCharUpper &&\n      isLastLastCharUpper &&\n      /[a-zA-Z]/.test(character) &&\n      character.toLowerCase() === character\n    ) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1)\n      isLastLastCharUpper = isLastCharUpper\n      isLastCharUpper = false\n      isLastCharLower = true\n    } else {\n      isLastCharLower =\n        character.toLowerCase() === character &&\n        character.toUpperCase() !== character\n      isLastLastCharUpper = isLastCharUpper\n      isLastCharUpper =\n        character.toUpperCase() === character &&\n        character.toLowerCase() !== character\n    }\n  }\n\n  return string\n}\n\nconst camelCase = (\n  input: string | string[],\n  options: { pascalCase?: boolean } = {}\n) => {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`')\n  }\n\n  options = Object.assign(\n    {\n      pascalCase: false,\n    },\n    options\n  )\n\n  const postProcess = (x: string) =>\n    options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x\n\n  if (Array.isArray(input)) {\n    input = input\n      .map(x => x.trim())\n      .filter(x => x.length)\n      .join('-')\n  } else {\n    input = input.trim()\n  }\n\n  if (input.length === 0) {\n    return ''\n  }\n\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase()\n  }\n\n  const hasUpperCase = input !== input.toLowerCase()\n\n  if (hasUpperCase) {\n    input = preserveCamelCase(input)\n  }\n\n  input = input\n    .replace(/^[_.\\- ]+/, '')\n    .toLowerCase()\n    .replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n    .replace(/\\d+(\\w|$)/g, m => m.toUpperCase())\n\n  return postProcess(input)\n}\n\nexport default camelCase\n","import React from 'react'\nimport Store from 'store'\nimport {\n  keys,\n  filter,\n  join,\n  map,\n  merge,\n  includes,\n  isNil,\n  always,\n  T,\n  path,\n  ifElse,\n  invoker,\n  identity,\n  mergeDeepRight,\n  is,\n} from 'ramda'\n// import message, { error } from '@/utils/message'\nimport { MutationOptions } from '@/constants/types'\nimport envStore from '@/constants/env'\nimport camelcase from '@/utils/camelcase'\nconst { compose, cond } = require('ramda')\n\n/**\n * 替換Url中的變數，例如/v1/api/user/{id} 轉換成 /v1/api/user/5\n * @param url API Url\n * @param body Query Parameters\n */\nexport function format(url: string, params: { [key: string]: any } = {}) {\n  const regex = /(\\{.+?\\})/gi\n  const _params = { ...params }\n\n  const _url = url.replace(regex, v => {\n    const replacable = v[0] === '{'\n\n    if (!replacable) {\n      return v\n    }\n\n    const propName = v.slice(1, -1)\n    const replacedValue = _params[propName]\n\n    _params[propName] = undefined\n\n    return replacedValue\n  })\n\n  return { fullUrl: _url, params: _params }\n}\n\nexport function toQueryString(\n  paramsObject: {\n    [key: string]: any\n  } = {}\n) {\n  if (!paramsObject) {\n    return ''\n  }\n\n  return compose(\n    join('&'),\n    map((key: string) =>\n      Array.isArray(paramsObject[key])\n        ? // convert to key=val1,val2,val3 string\n          `${key}=${paramsObject[key]\n            .map((val: string | number) => `${encodeURIComponent(val)}`)\n            .join(',')}`\n        : // convert to key=val string\n          `${key}=${encodeURIComponent(paramsObject[key])}`\n    ),\n    filter(\n      (key: string) =>\n        paramsObject[key] !== '' &&\n        paramsObject[key] !== null &&\n        typeof paramsObject[key] !== 'undefined'\n    ),\n    keys\n  )(paramsObject)\n}\n\ninterface RequestInit\n  extends Omit<MutationOptions, 'onError' | 'onCompleted' | 'refetchQueries'> {\n  body?: any\n  credentials?: RequestCredentials_\n  headers?: HeadersInit_\n  integrity?: string\n  keepalive?: boolean\n  method?: 'DELETE' | 'PUT' | 'PATCH' | 'GET' | 'POST'\n  mode?: RequestMode_\n  referrer?: string\n  window?: any\n  errorMsg?: boolean\n  throwable?: boolean\n  withToken?: boolean\n  endpoint?: 'apiBaseUrl' | 'fakeApiBaseUrl'\n  onError?: (err: Error) => any\n  onCompleted?: (data: any) => any\n}\n\nexport function useMeta() {\n  const [loading, setIsLoading] = React.useState(false)\n\n  const withMeta = React.useCallback((handler: any) => {\n    setIsLoading(true)\n\n    return handler().then((response: any) => {\n      setIsLoading(false)\n\n      return response\n    })\n  }, [])\n\n  return [loading, withMeta] as [boolean, (handler: any) => any]\n}\n\ninterface UseRequestOptions extends RequestInit {\n  lazy?: boolean\n  variables?: { [key: string]: any }\n}\n\nexport function useRequest<T = any>(\n  url: string,\n  { lazy = true, variables = {}, ..._options }: UseRequestOptions = {}\n) {\n  const called = React.useRef(false)\n\n  const [loading, withMeta] = useMeta()\n\n  const [data, setData] = React.useState<T>()\n\n  const [error, setError] = React.useState<Error>()\n\n  const _refetch = (data: { [key: string]: any } = {}) => {\n    let { fullUrl, params } = format(url, mergeDeepRight(variables, data))\n\n    if (_options.method === 'GET') {\n      fullUrl = `${fullUrl}?${toQueryString(params)}`\n    }\n\n    return withMeta(async () => {\n      const response = await request<T>(fullUrl, {\n        ..._options,\n        ...(_options.method !== 'GET' ? { body: data } : {}),\n        onCompleted: response => {\n          if (_options.onCompleted) {\n            _options.onCompleted({ data, response })\n          }\n\n          setData(response)\n        },\n        onError: error => {\n          if (_options.onError) {\n            _options.onError(error)\n          }\n\n          setError(error)\n        },\n      })\n\n      return response\n    })\n  }\n\n  React.useEffect(() => {\n    if (!lazy && !called.current) {\n      _refetch()\n\n      called.current = true\n    }\n  }, [lazy, called]) // eslint-disable-line\n\n  return {\n    loading,\n    mutate: _refetch as (\n      v?: { [key: string]: any } | { [key: string]: any }[]\n    ) => Promise<T>,\n    data,\n    error,\n    called,\n  }\n}\n\nconst contentTypeIs = (s: string) => {\n  return compose(\n    ifElse(isNil, identity, (c = '') => c.includes(s)),\n    invoker(1, 'get')('content-type'),\n    path(['headers'])\n  )\n}\n\nconst convertObjectKeys: any = (\n  object: any[] | { [key: string]: any },\n  keypath: string[] = []\n) => {\n  if (!object || typeof object !== 'object') {\n    return object\n  }\n\n  if (Array.isArray(object)) {\n    return object.map((o, index) =>\n      convertObjectKeys(o, [...keypath, String(index)])\n    )\n  }\n\n  return Object.keys(object).reduce((acc: any, key: string) => {\n    let value = object[key]\n\n    const nestedKeyPath = [...keypath, key]\n\n    acc[camelcase(key)] = convertObjectKeys(value, nestedKeyPath)\n    return acc\n  }, {})\n}\n\nexport function request<T = any>(\n  url: string,\n  {\n    body,\n    headers,\n    msg = true,\n    errorMsg = true,\n    withToken = true,\n    throwable = false,\n    successMessage,\n    onCompleted,\n    onError,\n    endpoint,\n    ...options\n  }: RequestInit = {}\n): Promise<T> {\n  const fullUrl = cond([\n    [includes('http'), always(url)],\n    [T, always(envStore.apiBaseUrl + url)],\n  ])(url)\n\n  return fetch(fullUrl, {\n    ...options,\n    body: body instanceof FormData ? body : JSON.stringify(body),\n    headers: merge(\n      {\n        ...(withToken\n          ? {\n              Authorization: `Bearer ${Store.get('sctc_token')}` as NonNullable<\n                string\n              >,\n            }\n          : {}),\n      },\n      headers\n        ? { ...headers }\n        : { 'Content-Type': 'application/json', Accept: 'application/json' }\n    ) as Record<string, string>,\n  })\n    .then(async (response: Response) => {\n      // if (\n      //   compose(\n      //     and(msg),\n      //     allPass([compose(not, isNil), compose(not, equals(__, 'GET'))]),\n      //     path(['method'])\n      //   )(options)\n      // ) {\n      //   message({\n      //     content: successMessage || '資料已更新成功',\n      //     type: 'success',\n      //   })\n      // }\n\n      let result: any\n\n      if (response.status === 404) {\n        return Promise.reject(response.statusText)\n      }\n\n      if (contentTypeIs('application/json')(response)) {\n        result = await response.json()\n\n        if (!response.ok) {\n          return Promise.reject(result)\n        }\n\n        result = convertObjectKeys(result)\n      }\n\n      if (contentTypeIs('sheet')(response)) {\n        result = await response.blob()\n      }\n\n      if (isNil(result)) {\n        result = await response.text()\n      }\n\n      if (onCompleted) {\n        onCompleted(result)\n      }\n\n      return result\n    })\n    .catch((err: Error) => {\n      // if (errorMsg) {\n      //   error(err)\n      // }\n\n      if (onError) {\n        onError(err)\n      }\n\n      if (throwable) {\n        throw new Error(\n          err.message || is(String, err) ? err : ('Server Error' as any)\n        )\n      }\n\n      return err\n    })\n}\n\nexport default request\n","import React from 'react'\nimport { Radio } from 'antd'\nimport { RadioProps } from 'antd/lib/radio'\nimport styled from 'styled-components'\n\nconst StyledRadio = styled(Radio)`\n  &.ant-radio-wrapper {\n    color: ${p => p.theme.darkGrey};\n\n    span.ant-radio + * {\n      padding-left: 16px;\n    }\n\n    .ant-radio-inner,\n    .ant-radio-checked .ant-radio-inner {\n      border-color: initial;\n    }\n\n    .ant-radio-inner::after {\n      background: ${p => p.theme.primary};\n    }\n\n    &:hover,\n    .ant-radio:hover .ant-radio-inner,\n    .ant-radio-input:focus + .ant-radio-inner {\n      border-color: ${p => p.theme.primary};\n    }\n  }\n`\n\ninterface Props extends RadioProps {\n  css?: React.CSSProperties\n}\n\nclass RadioComponent extends React.Component<Props, any> {\n  public static Group = Radio.Group\n\n  public static displayName = 'Radio'\n\n  public render() {\n    return <StyledRadio {...this.props} />\n  }\n}\n\nexport default RadioComponent\n","import React from 'react'\n\ntype Props = {\n  /**\n   * 開關 Modal 時希望處理的事情\n   */\n  onRequestOpen?: () => any\n}\n\nexport default function useVisible({ onRequestOpen }: Props = {}) {\n  const [visible, setVisible] = React.useState(false)\n\n  const handleVisible: any = (evt: React.MouseEvent<HTMLElement>) => {\n    setVisible(prev => !prev)\n\n    if (onRequestOpen) {\n      onRequestOpen()\n    }\n  }\n\n  const handleClose = () => {\n    setVisible(false)\n  }\n\n  return [visible, handleVisible, handleClose]\n}\n","export default {\n  CARD: 'card',\n  BOARD: 'board',\n  SNIPPET: 'snippet',\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { DatePicker, TimePicker } from 'antd'\nimport { DatePickerProps } from 'antd/lib/date-picker'\n\nconst borderLess = css`\n  &.ant-picker-borderless {\n    border: none;\n    border-bottom: 1px solid #d9d9d9 !important;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  &.ant-picker-focused:not(.ant-picker-borderless) {\n    box-shadow: 0 0 0 1px ${p => p.theme.primary};\n  }\n`\n\nconst RangePicker = styled(DatePicker.RangePicker)`\n  &.ant-picker {\n    border: 1px solid #d9d9d9;\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    &.ant-picker-focused {\n      box-shadow: 0 0 0 1px ${p => p.theme.primary};\n    }\n  }\n`\n\nconst StyledDatePicker: any = styled(DatePicker)`\n  &.ant-picker {\n    border: 1px solid #d9d9d9;\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    .ant-picker-suffix {\n      color: ${p => p.theme.primary};\n    }\n\n    ${borderLess};\n  }\n`\n\nconst StyledTimePicker = styled(TimePicker)`\n  &.ant-picker {\n    border: 1px solid #d9d9d9;\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    .ant-picker-suffix {\n      color: ${p => p.theme.primary};\n    }\n\n    ${borderLess};\n  }\n`\n\nfunction DatePickerComponent(props: DatePickerProps) {\n  return <StyledDatePicker {...props} />\n}\n\nexport {\n  DatePickerComponent as DatePicker,\n  RangePicker,\n  StyledTimePicker as TimePicker,\n}\n\nexport default DatePickerComponent\n","import React from 'react'\n\nexport enum divisions {\n  'PATH' = 'PATH',\n  'RAD' = 'RAD',\n  'CLINICIAN' = 'CLINICIAN',\n}\n\nexport type User = {\n  id: React.Key\n  division: 'PATH' | 'RAD' | 'CLINICIAN'\n}\n\nexport class AuthService {}\n\nexport function useLogin() {}\n\nexport default new AuthService()\n","import React from 'react'\nimport { includes, pathOr } from 'ramda'\nimport { XYCoord } from 'react-dnd'\nimport { isNil, mapIndexed } from '@/utils/webHelper'\nimport Snippet from '@/components/snippet'\nimport { SnippetProps } from '@/constants/types'\nconst { compose } = require('ramda')\n\n/* prettier-ignore */\nconst REPORT_TEMPLATE_BUILDER_CLASSNAME = 'report-template-builder__main-content'\nconst UI_DRAGGABLE_CLASSNAME = 'ui-draggable'\n\nconst hasClassName = (nodes: Element[], className: string) => {\n  return nodes.find(\n    n => !isNil(n.className) && includes(className)(n.className)\n  )\n}\n\nexport function canMoveSnippet(\n  element: Element | null,\n  className = REPORT_TEMPLATE_BUILDER_CLASSNAME\n) {\n  let elem = element\n\n  const nodes: Element[] = []\n  nodes.push(elem as Element)\n\n  while (elem?.parentNode) {\n    nodes.unshift(elem.parentNode as Element)\n    elem = elem.parentNode as Element\n  }\n\n  if (\n    hasClassName(nodes, 'report-template-builder-contentarea--fixed-layout') ||\n    hasClassName(nodes, 'snippet-drawer-menu')\n  ) {\n    return false\n  }\n  if (\n    hasClassName(nodes, className) ||\n    hasClassName(nodes, UI_DRAGGABLE_CLASSNAME)\n  ) {\n    return true\n  }\n\n  return false\n}\n\nfunction findSnippet(\n  element: HTMLElement,\n  className = UI_DRAGGABLE_CLASSNAME\n): HTMLElement | null {\n  if (element.classList.contains(className)) {\n    return element\n  }\n  return element.parentElement && findSnippet(element.parentElement, className)\n}\n\nexport function getPlaceHolderIndex(clientOffset: XYCoord) {\n  const hoverElement = document.elementFromPoint(clientOffset.x, clientOffset.y)\n\n  // find ui-draggable classname\n  const overSnippet = findSnippet(hoverElement as NonNullable<HTMLElement>)\n\n  const snippetIndex = overSnippet && overSnippet.dataset.index\n  const placeholderIndex = overSnippet ? Number(overSnippet.dataset.index) : -1\n\n  const isOverSnippet = !isNil(snippetIndex)\n\n  return {\n    overSnippet,\n    placeholderIndex,\n    isOverSnippet: isOverSnippet,\n  }\n}\n\nexport function renderSnippets(props: { [key: string]: any } = {}) {\n  return (snippetList?: SnippetProps[]) =>\n    compose(\n      mapIndexed((item: SnippetProps, idx: number) => (\n        <Snippet\n          {...props}\n          key={item.id}\n          wrapperId={`${item.id}`}\n          item={item}\n          draggable={false}\n          tabSize={item.tabSize}>\n          {item.inline ? (\n            <div\n              id={`${item.id}`}\n              className={`${item.id}`}\n              css={{ padding: 16 }}\n              dangerouslySetInnerHTML={{ __html: item.html }}\n            />\n          ) : (\n            <item.Component\n              id={item.id}\n              className={item.id}\n              item={item}\n              index={idx}\n            />\n          )}\n        </Snippet>\n      )),\n      pathOr([], [])\n    )(snippetList)\n}\n","import React from 'react'\nimport { ColumnProps, TableProps, TablePaginationConfig } from 'antd/lib/table'\nimport { SpinProps } from 'antd/lib/spin'\nimport { mergeDeepRight } from 'ramda'\nimport { DataSource } from '@/constants/types'\nimport Table from '@/components/table'\n\ntype Props<T> = Omit<TableProps<T>, 'dataSource'> & {\n  columns: ColumnProps<T>[]\n  className?: string\n  pageNum?: number\n  dataSource: DataSource<T>\n  onChange?: (pagination: TablePaginationConfig) => any\n  loading?: boolean | SpinProps\n  rowSelection?: {\n    selectedRowKeys: any[]\n    onChange: (selectedRowKeys: any, selectedRows: any) => void\n  }\n}\n\nexport default function QueryTable<T>({\n  columns,\n  className,\n  pageNum = 1,\n  dataSource,\n  onChange,\n  loading = false,\n  rowSelection,\n  pagination = {},\n  ...props\n}: Props<T>) {\n  const handleTableChange = ({ current, pageSize }: TablePaginationConfig) => {\n    if (onChange) {\n      onChange({ current, pageSize })\n    }\n  }\n\n  let paginationConfig: false | TablePaginationConfig = mergeDeepRight<\n    any,\n    any\n  >(\n    {\n      current: pageNum,\n      pageSize: 10,\n      total: dataSource.total,\n      showSizeChanger: false,\n    },\n    pagination\n  )\n\n  if (pagination === false) {\n    paginationConfig = false\n  }\n\n  return (\n    <Table\n      rowKey=\"id\"\n      dataSource={dataSource.content}\n      columns={columns as any}\n      pagination={paginationConfig}\n      onChange={handleTableChange}\n      rowSelection={rowSelection}\n      loading={loading}\n      className={className}\n      {...props}\n    />\n  )\n}\n","import { atom, useRecoilState } from 'recoil'\nimport Store from 'store'\nimport { setComponentByTab } from '@/components/snippet-template-list'\n\nexport const reportListState = atom({\n  key: 'reportListState',\n  default: setComponentByTab(Store.get('reportListState') || []),\n})\n\n// 輸入報告清單\nexport function useReportList() {\n  return useRecoilState(reportListState)\n}\n","import React from 'react'\nimport store from 'store'\nimport moment from 'moment'\nimport { update, length, keys, pathOr, map, mergeAll } from 'ramda'\nimport {\n  Mutation,\n  MutationOptions,\n  DataSource,\n  SnippetProps,\n} from '@/constants/types'\nimport { useReportList } from '@/data/useReport'\nimport { uuid } from '@/utils/webHelper'\nconst { compose } = require('ramda')\n\nexport const useReports = () => {\n  const [data, setData] = React.useState<DataSource>({\n    content: [],\n    total: 0,\n    totalPages: 0,\n  })\n\n  const [reportList, setReportList] = useReportList()\n\n  const refetch = (values?: any) => {\n    setData({\n      content: reportList,\n      total: length(reportList),\n      totalPages: Math.floor(length(reportList) / 10) + 1,\n    })\n  }\n\n  return {\n    data,\n    refetch,\n    loading: false,\n    reportList,\n    setReportList,\n  }\n}\n\nexport function useReportItem(id: string) {\n  const [reportList] = useReportList()\n\n  const [data, setData] = React.useState<any>()\n\n  React.useEffect(() => {\n    const _data = reportList.find((x: any) => x.id === id)\n    const valueById = pathOr({}, ['data'], _data)\n\n    setData({\n      ..._data,\n      setting: compose(\n        mergeAll,\n        map((key: string) => ({\n          [key]: compose(\n            map((x: SnippetProps) => ({\n              ...x,\n              setting: {\n                ...x.setting,\n                value: pathOr(undefined, [x.id], valueById),\n              },\n            })),\n            pathOr([], ['setting', key])\n          )(_data),\n        })),\n        keys,\n        pathOr({}, ['setting'])\n      )(_data),\n    })\n  }, [id]) // eslint-disable-line\n\n  return data\n}\n\nexport const useAddNewReport = ({ onCompleted }: MutationOptions = {}) => {\n  const [reportList, setReportList] = useReportList()\n  const handler = (values: any) => {\n    let id = uuid()\n    let newList = [\n      ...reportList,\n      {\n        ...values,\n        id,\n        createdAt: moment(),\n        createdAtStr: moment().format('YYYY/MM/DD HH:mm'),\n        updatedAt: moment(),\n        updatedAtStr: moment().format('YYYY/MM/DD HH:mm'),\n      },\n    ]\n\n    setReportList(newList)\n    store.set('reportListState', newList)\n\n    if (onCompleted) {\n      onCompleted({ ...values, id })\n    }\n  }\n  return [false, handler] as Mutation\n}\n\nexport const useUpdateReport = ({ onCompleted }: MutationOptions = {}) => {\n  const [reportList, setReportList] = useReportList()\n\n  const handler = (values: any) => {\n    let index = reportList.findIndex((x: any) => `${x.id}` === `${values.id}`)\n    let newList = update(\n      index,\n      {\n        ...values,\n        updatedAt: moment(),\n        updatedAtStr: moment().format('YYYY/MM/DD HH:mm'),\n      },\n      reportList\n    )\n    setReportList(newList)\n    store.set('reportListState', newList)\n\n    if (onCompleted) {\n      onCompleted()\n    }\n  }\n  return [false, handler] as Mutation\n}\n","import moment from 'moment'\nimport { envStore } from '@/constants/env'\nconst {\n  forEach,\n  addIndex,\n  map,\n  isEmpty,\n  either,\n  compose,\n  not,\n  isNil: RisNil,\n  path,\n} = require('ramda')\n\nexport function queryString(search: string): { [key: string]: any } {\n  if (!search) {\n    search = window.location.search\n  }\n\n  const params = new URLSearchParams(search)\n\n  let result: object | any = {}\n\n  params.forEach((value: string, key: string) => (result[key] = value))\n\n  return result\n}\n\nexport function uuid() {\n  let d = Date.now()\n  if (\n    typeof performance !== 'undefined' &&\n    typeof performance.now === 'function'\n  ) {\n    d += performance.now()\n  }\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (d + Math.random() * 16) % 16 | 0\n    d = Math.floor(d / 16)\n    return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16)\n  })\n}\n\nexport function isUUID(uuid: string) {\n  return /^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(\n    uuid\n  )\n}\n\nexport const forEachIndexed = addIndex(forEach)\nexport const mapIndexed: any = addIndex(map)\n\nexport const isNil = either(isEmpty, RisNil)\n\nexport const hasPath = (namedPath: Array<string | number>) =>\n  compose(not, isNil, path(namedPath))\n\nexport const getRangeDate = (\n  date: [moment.Moment, moment.Moment],\n  dateFormat?: string\n) => {\n  const [startDate, stopDate] = date\n\n  return [\n    startDate\n      ? dateFormat\n        ? startDate.format(dateFormat)\n        : startDate.valueOf()\n      : undefined,\n    stopDate\n      ? dateFormat\n        ? stopDate.format(dateFormat)\n        : stopDate.valueOf()\n      : undefined,\n  ]\n}\n\nexport const toThousandSeparator = (number: number | string) => {\n  if (number && (typeof number === 'number' || isNaN(number as any))) {\n    return number.toLocaleString()\n  }\n  return number\n}\n\nexport const capitalize = (s: string) => {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport function getNumberFromString(str?: string) {\n  if (!str) {\n    return str\n  }\n  return str.replace(/[^\\d.]/g, '')\n}\n\nexport const redirect = () => {\n  if (!envStore.isEnvDev && window.location.pathname === '/') {\n    window.location.href = envStore.appUrl\n    return\n  }\n}\n\nexport function downloadAsJson({\n  json,\n  filename,\n}: {\n  json: object\n  filename: string\n}) {\n  const dataStr =\n    'data:text/json;charset=utf-8,' +\n    encodeURIComponent(JSON.stringify(json, null, 2))\n  const downloadAnchorNode = document.createElement('a')\n  downloadAnchorNode.setAttribute('href', dataStr)\n  downloadAnchorNode.setAttribute('download', filename + '.json')\n  document.body.appendChild(downloadAnchorNode) // required for firefox\n  downloadAnchorNode.click()\n  downloadAnchorNode.remove()\n\n  return json\n}\n\nexport function selectFile({\n  accept = '*',\n  callback,\n}: {\n  accept?: string\n  callback?: (files: FileList | null) => any\n}) {\n  const input = document.createElement('input')\n  input.setAttribute('type', 'file')\n  input.setAttribute('class', 'hidden')\n  input.setAttribute('accept', accept)\n\n  if (callback) {\n    input.addEventListener('change', () => callback(input.files))\n  }\n\n  input.click()\n}\n\nexport async function readFile<T = any>(file: File): Promise<T> {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader()\n    fileReader.addEventListener('load', () => resolve(fileReader.result as any))\n    fileReader.onerror = reject\n    fileReader.readAsText(file)\n  })\n}\n","import React from 'react'\nimport { Table, Empty, Tooltip } from 'antd'\nimport { TableProps } from 'antd/lib/table'\nimport { CloseOutlined, PlusOutlined } from '@ant-design/icons'\nimport styled from 'styled-components'\n\nconst StyledTable: any = styled(Table)`\n  &.ant-table-wrapper {\n    .ant-pagination-prev .ant-pagination-item-link,\n    .ant-pagination-next .ant-pagination-item-link {\n      border-color: ${p => p.theme.pagination};\n      border-radius: 6px;\n      color: ${p => p.theme.pagination};\n    }\n\n    .ant-pagination-item {\n      border-color: ${p => p.theme.pagination};\n    }\n\n    .ant-pagination-item a {\n      color: ${p => p.theme.pagination};\n    }\n\n    .ant-pagination-item-active,\n    .ant-pagination-item-active:focus,\n    .ant-pagination-item:hover {\n      border-color: ${p => p.theme.pagination};\n      background: ${p => p.theme.pagination};\n\n      a {\n        color: #fff;\n      }\n    }\n\n    .ant-table-pagination.ant-pagination {\n      margin-top: 32px;\n    }\n\n    .ant-pagination-prev:hover .ant-pagination-item-link,\n    .ant-pagination-next:hover .ant-pagination-item-link {\n      border-color: ${p => p.theme.pagination};\n      background: ${p => p.theme.pagination};\n      color: #fff;\n    }\n\n    .ant-pagination-simple-pager {\n      color: ${p => p.theme.pagination};\n    }\n  }\n\n  .ant-table {\n    background: transparent;\n  }\n\n  .ant-table-tbody > tr > td {\n    height: 40px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    line-height: 1em;\n    color: #4a4a4a;\n    background: transparent !important;\n    border-bottom: 1px solid #e9e9e9;\n  }\n\n  .ant-table-thead > tr > th {\n    padding: 12px;\n    background: ${p => p.theme.primary};\n    border-bottom: 1px solid #e9e9e9;\n    color: #fff;\n    font-weight: 500;\n  }\n`\n\ntype Props<T> = TableProps<T> & {\n  editable?: boolean\n  isRowDeletable?: (row: T) => boolean\n  onAddRowClick?: (param?: any) => any\n  onDeleteRowClick?: (param?: any) => any\n  isCanEdit?: any\n}\n\nfunction TableComponent<T = any>({\n  editable = false,\n  columns = [],\n  onAddRowClick,\n  isRowDeletable = () => true,\n  onDeleteRowClick,\n  isCanEdit = '',\n  ...props\n}: Props<T>) {\n  const _columns = React.useMemo(() => {\n    let canEdit: boolean = true\n    if (!editable) {\n      return columns\n    }\n    if (isCanEdit !== '') {\n      canEdit = isCanEdit\n    }\n\n    const handleRowDelete = (key: React.Key) => () => {\n      if (onDeleteRowClick) {\n        onDeleteRowClick(key)\n      }\n    }\n\n    return [\n      {\n        title: (\n          <Tooltip placement=\"topLeft\" title=\"新增\">\n            <PlusOutlined\n              className=\"ml-1 relative\"\n              style={{ top: -3 }}\n              onClick={canEdit ? onAddRowClick : undefined}\n            />\n          </Tooltip>\n        ),\n        width: 50,\n        render: (_: any, __: any, idx: number) => (\n          <div className=\"text-center\">#{idx + 1}</div>\n        ),\n      },\n      ...columns,\n      {\n        width: 50,\n        render: (_: any, r: any, idx: number) => (\n          <Tooltip placement=\"topLeft\" title=\"刪除\">\n            <CloseOutlined\n              onClick={isRowDeletable(r) ? handleRowDelete(r.id) : undefined}\n            />\n          </Tooltip>\n        ),\n      },\n    ]\n  }, [columns, editable]) // eslint-disable-line\n\n  return (\n    <StyledTable\n      columns={_columns}\n      locale={{\n        emptyText: (\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            description={\n              <span>\n                <span className=\"d-block\">\n                  尚無資料，請點選「＋新增」新增資料。\n                </span>\n              </span>\n            }\n          />\n        ),\n      }}\n      {...props}>\n      {props.children}\n    </StyledTable>\n  )\n}\n\nTableComponent.displayName = 'Table'\nTableComponent.Column = Table.Column\n\nexport default TableComponent\n","import React from 'react'\nimport { is } from 'ramda'\nimport _useSWR from 'swr'\nimport {\n  keyInterface,\n  fetcherFn,\n  ConfigInterface,\n  responseInterface,\n} from 'swr/dist/types'\nimport { QueryVariables } from '@/constants/types'\nimport { request, format, toQueryString } from '@/utils/request'\n\ninterface Response<Data = any, Error = any>\n  extends responseInterface<Data, Error> {\n  loading: boolean\n  called: boolean\n  refetch(variables?: QueryVariables): Promise<any>\n}\n\ninterface Config<Data = any, Error = any> extends ConfigInterface<Data, Error> {\n  variables?: { [key: string]: any }\n  lazy?: boolean\n  onCompleted?: (data: Data) => void\n  onError?: (error: Error) => void\n}\n\nexport default function useSWR<Data = any, Error = any>(\n  key: keyInterface,\n  {\n    variables,\n    onCompleted,\n    onError,\n    lazy = false,\n    ...config\n  }: Config<Data, Error> = {},\n  fn?: fetcherFn<Data>\n): Response<Data, Error> {\n  const [query, setQuery] = React.useState(variables)\n\n  const [called, setIsCalled] = React.useState(!lazy)\n\n  const val = React.useRef<Data>()\n\n  const _fn = fn ? fn : (url: any) => request(url, { throwable: true })\n\n  let _key = key\n  if (is(String, key)) {\n    const { fullUrl, params } = format(key as string, query)\n    _key = `${fullUrl}?${toQueryString(params)}`\n  }\n  if (!called) {\n    _key = null\n  }\n\n  const { data, ...rest } = _useSWR(_key, _fn, {\n    ...config,\n    dedupingInterval: 0,\n    revalidateOnFocus: false,\n    shouldRetryOnError: false,\n    suspense: false,\n    onSuccess: data => {\n      if (onCompleted) {\n        onCompleted(data)\n      }\n    },\n    onError: error => {\n      if (onError) {\n        onError(error)\n      }\n    },\n  })\n\n  const refetch = (variables: QueryVariables = {}) => {\n    setQuery(prev => ({ ...prev, ...variables }))\n    setIsCalled(true)\n\n    return Promise.resolve<any>({})\n  }\n\n  if (data !== undefined) {\n    val.current = data\n  }\n\n  return {\n    ...rest,\n    loading: rest.isValidating,\n    data: val.current,\n    refetch,\n    called,\n  }\n}\n","export default function getDisplayName(Component: any) {\n  return (\n    Component.displayName ||\n    Component.name ||\n    (typeof Component === 'string' && Component.length > 0\n      ? Component\n      : 'Unknown')\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  RightOutlined,\n  LeftOutlined,\n} from '@ant-design/icons'\nimport cx from 'classnames'\nimport { Tooltip } from 'antd'\n\ntype Props = {\n  visible?: boolean\n  editable?: boolean\n  tabIndex: number\n  onEdit: () => void\n  onDelete: () => void\n  onShift: (shift: number) => void\n}\n\nconst ToolbarWrapper = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 15px;\n  visibility: hidden;\n  transition: visibility 0s, opacity 0.3s, max-height 0.6s linear;\n  opacity: 0;\n  z-index: 1;\n\n  &.is--over {\n    visibility: visible;\n    transition: visibility 0s, opacity 0.3s, max-height 0.6s linear;\n    opacity: 0.8;\n  }\n`\n\nexport const SHIFT_TYPES = {\n  LEFT: -1,\n  RIGHT: 1,\n}\n\nexport default function SnippetToolbar({\n  tabIndex,\n  onEdit,\n  onDelete,\n  onShift,\n  editable = true,\n  visible = false,\n}: Props) {\n  const handleShift = (shift: number) => () => {\n    onShift(shift)\n  }\n\n  return (\n    <ToolbarWrapper\n      className={cx('text-primary', {\n        'is--over': tabIndex === 1,\n        hidden: !visible,\n      })}>\n      <Tooltip title=\"向左縮排\">\n        <LeftOutlined\n          className=\"mr-2 cursor-pointer\"\n          onClick={handleShift(SHIFT_TYPES.LEFT)}\n        />\n      </Tooltip>\n      <Tooltip title=\"向右縮排\">\n        <RightOutlined\n          className=\"mr-2 cursor-pointer\"\n          onClick={handleShift(SHIFT_TYPES.RIGHT)}\n        />\n      </Tooltip>\n      {editable && (\n        <Tooltip title=\"編輯\">\n          <EditOutlined className=\"mr-2 cursor-pointer\" onClick={onEdit} />\n        </Tooltip>\n      )}\n      <Tooltip title=\"刪除\">\n        <DeleteOutlined className=\"cursor-pointer\" onClick={onDelete} />\n      </Tooltip>\n    </ToolbarWrapper>\n  )\n}\n\nexport { SnippetToolbar }\n","/* eslint-disable no-undef */\nimport React from 'react'\nimport { clone, is, equals } from 'ramda'\nimport envStore from '@/constants/env'\nimport hoist from 'hoist-non-react-statics'\nimport getDisplayName from '@/utils/get-display-name'\n\n// https://stackoverflow.com/questions/57047722/how-to-disable-and-enable-tinymce-with-a-button-and-jquery\n\nlet defaultConfig = {\n  block_formats: 'Heading 1=h1;Heading 2=h2;Heading 3=h3;Paragraph=p',\n  inline: true,\n  menubar: false,\n  external_plugins: {\n    dropdown: `${envStore.publicUrl}/js/tinymce/plugins/dropdown/plugin.js`,\n    inputtext: `${envStore.publicUrl}/js/tinymce/plugins/inputtext/plugin.js`,\n  },\n  fontsize_formats: '10px 12px 14px 16px 18px 20px 24px 32px 36px',\n  force_br_newlines: true,\n  force_p_newlines: false,\n  forced_root_block: 'div',\n  plugins: 'image textcolor lists emoticons link table media code',\n  tinymce: `${envStore.publicUrl}/js/tinymce/4.9.2/tinymce.min.js`,\n  link_title: false,\n  table_toolbar:\n    'tablemergecells tablesplitcells | tableprops tabledelete | tableinsertrowbefore tableinsertrowafter tabledeleterow | tableinsertcolbefore tableinsertcolafter tabledeletecol',\n  textcolor_cols: '5',\n  content_security_policy: '',\n  allow_unsafe_link_target: true,\n  relative_urls: false,\n  convert_urls: false,\n  valid_elements: '*[*]',\n  valid_children:\n    'h1[div|strong|b],h2[div|strong|b],h3[div|strong|b],p[div|strong|b]',\n  toolbar1:\n    'undo redo | custom-formatselect fontsizeselect | bold italic underline strikethrough forecolor removeformat | align numlist bullist outdent indent | link | fontawesome | inputtext | dropdown',\n}\n\nexport default function withTinyMCE(ComposedComponent) {\n  class withTinyMCE extends React.Component {\n    static displayName = `withTinyMCE(${getDisplayName(ComposedComponent)})`\n\n    static defaultProps = {\n      inline: false,\n    }\n\n    state = {\n      top: 0,\n      tabIndex: -1,\n      editor: null,\n      toolbarMouseOver: false,\n      toolbarVisible: false,\n    }\n\n    componentDidMount() {\n      if (this.props.inline) {\n        this.initialize(this.props.item)\n      }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      if (!this.props.isDragging && prevProps.isDragging) {\n        this.setState({ toolbarVisible: false })\n      }\n      if (!this.props.inline) {\n        return\n      }\n      if (!equals(this.props.id, prevProps.id)) {\n        this.initialize(this.props.item)\n      }\n      if (!equals(this.props.item?.html, prevProps.item?.html)) {\n        this.state.editor.setContent(this.props.item?.html)\n      }\n    }\n\n    initialize = snippet => {\n      if (this._get(snippet.id)) {\n        this.remove(snippet.id)\n      }\n\n      const _config = clone(snippet.config || defaultConfig)\n\n      tinymce.init({\n        ..._config,\n        selector: `#${snippet.id}`,\n        language_url: `${envStore.publicUrl}/js/tinymce/langs/zh_TW.js`,\n        content: snippet.html,\n        setup: editor => {\n          editor.on('blur', e => this.onEditorBlur(e))\n          editor.on('focus', e => this.onEditorFocus(e))\n\n          if (is(Function, _config.execInit)) {\n            _config.execInit(editor)\n          }\n\n          if (snippet.html) {\n            editor.on('init', () => editor.setContent(snippet.html))\n          }\n        },\n        init_instance_callback: editor => {\n          if (editor) {\n            this.setState({ editor })\n          }\n          editor.undoManager.add()\n        },\n      })\n    }\n\n    onEditorBlur = e => {\n      const { updateSnippet, item } = this.props\n      if (updateSnippet) {\n        updateSnippet({ ...item, html: e.target.getContent() })\n      }\n    }\n\n    // 這裡應該不用做事\n    onEditorFocus = () => {\n      // const { index } = this.props\n      // $(`.sort-item`).removeClass(s.focus)\n      // $(`.sort-item:nth-child(${index + 1})`).addClass(s.focus)\n    }\n\n    onClick = () => {\n      const { toolbarVisible } = this.state\n\n      if (!toolbarVisible) {\n        const snippetEl = document.getElementById(this.props.id)\n        const top = snippetEl.offsetTop + 30\n\n        this.setState({ toolbarVisible: true, tabIndex: 1, top })\n      }\n    }\n\n    onBlur = () => {\n      const { toolbarVisible, toolbarMouseOver } = this.state\n      if (toolbarVisible && !toolbarMouseOver) {\n        this.setState({ toolbarVisible: false, tabIndex: -1 })\n      }\n    }\n\n    _get = id => {\n      return tinymce.get(id)\n    }\n\n    remove = id => {\n      tinymce.remove(this._get(id || this.props.id))\n    }\n\n    render() {\n      return <ComposedComponent {...this.state} {...this.props} />\n    }\n  }\n\n  return hoist(withTinyMCE, ComposedComponent)\n}\n","import React from 'react'\nimport { DragSource, ConnectDragPreview, ConnectDragSource } from 'react-dnd'\nimport { getEmptyImage } from 'react-dnd-html5-backend'\nimport { mergeRight } from 'ramda'\nimport cx from 'classnames'\nimport { confirm } from '@/utils/message'\nimport { SnippetProps } from '@/constants/types'\nimport ItemTypes from '@/constants/item-types'\nimport SnippetToolbar from './snippet-toolbar'\nimport theme from '../theme'\nimport withTinyMCE from './withTinyMCE'\nconst { compose } = require('ramda')\n\ntype Props = {\n  id?: React.Key\n  wrapperId?: string\n  className?: string\n  style?: React.CSSProperties\n  index?: number\n  tabSize?: number\n  isDragging?: boolean\n  draggable?: boolean\n  inline?: boolean\n  fromMenu?: boolean\n  item: SnippetProps\n  connectDragPreview?: ConnectDragPreview\n  connectDragSource?: ConnectDragSource\n  children?: React.ReactNode\n  updateSnippet?(data: any): void\n  findSnippet?(id: React.Key): { index: number; snippet: SnippetProps }\n  shiftSnippet?(id: React.Key, shift: number): any\n  removeSnippet?(index: number): void\n}\n\ntype State = {\n  tabIndex: number\n  editModalVisible: boolean\n}\n\nconst withDragSource = DragSource(\n  ItemTypes.BOARD,\n  {\n    beginDrag(props: Props) {\n      return {\n        ...props,\n        fromMenu: false,\n        originalIndex: (props as any).findSnippet(props.id).index,\n      }\n    },\n    canDrag(props: Props) {\n      return !!(props.draggable && !props.fromMenu)\n    },\n  },\n  (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging(),\n  })\n)\n\nclass Snippet extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      tabIndex: -1,\n      editModalVisible: false,\n    }\n  }\n\n  componentDidMount = () => {\n    const { connectDragPreview } = this.props\n    if (connectDragPreview) {\n      connectDragPreview(getEmptyImage() /* { anchorX: 0.2, anchorY: 0.1 } */)\n    }\n  }\n\n  handleShift = (shift: number) => {\n    const { id, shiftSnippet } = this.props\n\n    if (shiftSnippet && id) {\n      shiftSnippet(id, shift)\n    }\n  }\n\n  handleRemove = () => {\n    confirm({\n      content: '刪除後將無法還原，確認繼續？',\n      title: '確認要刪除這個模版?',\n      onOk: () => {\n        ;(this.props as any).removeSnippet(this.props.index)\n      },\n      onCancel() {},\n    })\n  }\n\n  handleEditModalVisible = () => {\n    this.setState(prev => ({ editModalVisible: !prev.editModalVisible }))\n  }\n\n  _onMouseOver = () => {\n    this.setState({ tabIndex: 1 })\n  }\n\n  _onMouseOut = () => {\n    this.setState({ tabIndex: -1 })\n  }\n\n  render() {\n    const {\n      props: {\n        connectDragSource = (node: any) => node,\n        connectDragPreview = (node: any) => node,\n        wrapperId,\n        index,\n        draggable,\n        style = {},\n        className = 'mb-3',\n        item,\n      },\n      state: { tabIndex, editModalVisible },\n    } = this\n\n    const styles = mergeRight(\n      getItemStyles({ ...this.props, ...this.state }),\n      style\n    )\n\n    return connectDragSource(\n      connectDragPreview(\n        <div\n          id={wrapperId}\n          style={styles}\n          className={cx(\n            'ui-sortable',\n            { 'ui-draggable': draggable },\n            className\n          )}\n          tabIndex={tabIndex}\n          onMouseOver={this._onMouseOver}\n          onMouseOut={this._onMouseOut}\n          data-index={index}>\n          <SnippetToolbar\n            visible={draggable}\n            tabIndex={tabIndex}\n            editable={!item.inline}\n            onEdit={this.handleEditModalVisible}\n            onDelete={this.handleRemove}\n            onShift={this.handleShift}\n          />\n          {React.Children.map(this.props.children, child =>\n            React.cloneElement(child as any, {\n              editModalVisible,\n              handleEditModalVisible: this.handleEditModalVisible,\n            })\n          )}\n        </div>\n      )\n    )\n  }\n}\n\nfunction getItemStyles(props: Partial<Props & State>): React.CSSProperties {\n  const { isDragging, tabIndex, draggable, tabSize = 0 } = props\n\n  const isFocus = tabIndex === 1\n\n  return {\n    ...(isFocus ? { borderRadius: 3 } : {}),\n    ...(draggable\n      ? { border: `1px dashed ${draggable ? '#e7e7e7' : 'transparent'}` }\n      : {\n          outlineColor: isFocus ? theme.purple150 : 'transparent',\n        }),\n    cursor: 'default',\n    position: 'relative',\n    display: isDragging ? 'none' : 'block',\n    marginLeft: tabSize * 50,\n  }\n}\n\nexport default compose(withDragSource, withTinyMCE)(Snippet) as typeof Snippet\n","import { Tabs } from 'antd'\nimport styled from 'styled-components'\n\nconst bg = 'rgb(43,193,183)'\n\nexport default styled(Tabs)`\n  &.ant-tabs {\n    .ant-tabs-tab {\n      display: flex;\n      align-items: center;\n      padding: 10px 24px !important;\n      margin-right: 4px !important;\n      color: #fff !important;\n      border-color: ${bg} !important;\n      background: ${bg} !important;\n      border-top-left-radius: 12px !important;\n      border-top-right-radius: 12px !important;\n    }\n\n    .ant-tabs-tab-active {\n      border-color: #fff !important;\n      background: #fff !important;\n\n      svg path {\n        fill: ${p => p.theme.primary} !important;\n      }\n    }\n\n    .ant-tabs-tab .anticon {\n      color: #fff !important;\n    }\n\n    .ant-tabs-tab.is--over {\n      border: 1px dashed lightgrey !important;\n    }\n\n    .ant-tabs-tab.is--dragging {\n      opacity: 0.3;\n    }\n\n    > .ant-tabs-nav .ant-tabs-nav-add,\n    .ant-tabs > div > .ant-tabs-nav .ant-tabs-nav-add {\n      background: transparent;\n      border-color: transparent;\n      color: ${p => p.theme.darkGrey};\n\n      .anticon-plus {\n        color: ${p => p.theme.darkGrey};\n      }\n\n      .anticon-plus:hover {\n        color: ${p => p.theme.primary};\n      }\n    }\n\n    .ant-tabs-tab-btn:focus,\n    .ant-tabs-tab-remove:focus,\n    .ant-tabs-tab-btn:active,\n    .ant-tabs-tab-remove:active,\n    .ant-tabs-tab.ant-tabs-tab-active .ant-tabs-tab-btn {\n      color: ${p => p.theme.secondary} !important;\n    }\n  }\n\n  &.ant-tabs-top > .ant-tabs-nav,\n  &.ant-tabs-top > div > .ant-tabs-nav {\n    margin-bottom: 0;\n  }\n\n  &.ant-tabs-top > .ant-tabs-nav::before {\n    border-bottom: none;\n  }\n`\n","import React from 'react'\nimport { DragSource, DropTarget } from 'react-dnd'\nimport cx from 'classnames'\nimport { compose } from 'ramda'\nimport Tabs from '@/components/tabs'\n\n// Drag & Drop node\nclass TabNode extends React.Component {\n  render() {\n    const {\n      connectDragSource,\n      connectDropTarget,\n      isDragging,\n      isOver,\n      moveTabNode,\n      draggingItem,\n      id,\n      ...props\n    } = this.props\n\n    return connectDragSource(\n      connectDropTarget(\n        React.cloneElement(props.children, {\n          className: cx(props.children.props.className, {\n            'is--dragging': isDragging,\n            'is--over': isOver && id !== draggingItem?.id,\n          }),\n        })\n      )\n    )\n  }\n}\n\nconst withDropTarget = DropTarget(\n  'DND_NODE',\n  {\n    drop(props, monitor) {\n      const dragKey = monitor.getItem().index\n      const hoverKey = props.index\n\n      if (dragKey === hoverKey) {\n        return\n      }\n\n      props.moveTabNode(dragKey, hoverKey)\n      monitor.getItem().index = hoverKey\n    },\n  },\n  (connect, monitor) => ({\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    draggingItem: monitor.getItem(),\n  })\n)\n\nconst withDragSource = DragSource(\n  'DND_NODE',\n  {\n    beginDrag(props) {\n      return {\n        id: props.id,\n        index: props.index,\n      }\n    },\n  },\n  (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  })\n)\n\nconst WrapTabNode = compose(withDropTarget, withDragSource)(TabNode)\n\nexport default class DraggableTabs extends React.Component {\n  static defaultProps = {\n    order: [],\n  }\n\n  moveTabNode = (dragKey, hoverKey) => {\n    const { children, order, moveTabNode } = this.props\n    const newOrder = order.slice()\n\n    React.Children.forEach(children, c => {\n      if (newOrder.indexOf(c.key) === -1) {\n        newOrder.push(c.key)\n      }\n    })\n\n    const dragIndex = newOrder.indexOf(dragKey)\n    const hoverIndex = newOrder.indexOf(hoverKey)\n\n    newOrder.splice(dragIndex, 1)\n    newOrder.splice(hoverIndex, 0, dragKey)\n\n    moveTabNode(newOrder)\n  }\n\n  renderTabBar = (props, DefaultTabBar) => (\n    <DefaultTabBar {...props}>\n      {node => (\n        <WrapTabNode\n          key={node.key}\n          id={node.key}\n          index={node.key}\n          moveTabNode={this.moveTabNode}>\n          {node}\n        </WrapTabNode>\n      )}\n    </DefaultTabBar>\n  )\n\n  render() {\n    const { moveTabNode, children, ...props } = this.props\n\n    return (\n      <Tabs renderTabBar={this.renderTabBar} {...props}>\n        {children}\n      </Tabs>\n    )\n  }\n}\n\nDraggableTabs.TabPane = Tabs.TabPane\n","import React from 'react'\nimport { ModalProps, ModalFuncProps } from 'antd/lib/modal'\nimport { find, path } from 'ramda'\nimport Modal from '@/components/modal'\nimport { modalDefaultProps } from '@/utils/message'\n\nexport const confirm = Modal.confirm\n\ntype Props<T> = {\n  /**\n   * 是否可刪除: false的話不會跳確認刪除窗\n   */\n  isDeletable?: boolean\n  /**\n   * 刪除確認視窗的文字內容\n   */\n  content?: string | React.ReactNode\n  /**\n   * 確認刪除的行為，例如打 API\n   */\n  onRequestDelete?: (values?: any, resolve?: (values?: any) => any) => any\n  /**\n   * 跳出確認刪除時可以做的事情，例如關掉正在編輯的對話框\n   */\n  onBeforeDelete?: () => any\n  /**\n   * 刪除成功後，可重新取得(列表)資料\n   */\n  refetchQueries?: () => any\n  /**\n   * 取消刪除後做的事情，例如重新打開編輯對話窗\n   */\n  onCancel?: () => any\n  /**\n   * 列表資料，可在跳確認窗時從裡面查找要刪除的資料並回傳\n   */\n  dataSource?: T[]\n  /**\n   * 刪除的項目，可以是單一物件或陣列物件...\n   */\n  deleteItem?: any\n  /**\n   * 自訂確認視窗屬性\n   */\n  modalProps?: ModalProps\n  /**\n   * 刪除成功後可作的事情\n   */\n  onAfterDelete?: () => any\n}\n\nlet modal: {\n  destroy: () => void\n  update: (newConfig: ModalFuncProps) => void\n}\n\nexport function useDelete<T extends any>(props: Props<T>) {\n  const {\n    isDeletable = true,\n    content,\n    dataSource = [],\n    onRequestDelete,\n    onBeforeDelete,\n    refetchQueries,\n    onCancel,\n    deleteItem,\n    modalProps = {},\n    onAfterDelete,\n  } = props\n\n  let onAfterDeleteResolve = React.useRef(() => ({}))\n\n  const handleConfirmDeletion = (evt: React.MouseEvent<HTMLElement>) => {\n    if (onBeforeDelete) {\n      onBeforeDelete()\n    }\n    handleConfirm(evt)\n  }\n\n  const handleDeleteFailure = () => {\n    if (modal) {\n      modal.update({\n        okButtonProps: {\n          className: 'c-btn c-btn--danger',\n          style: { minWidth: 96, marginRight: 104 },\n          loading: false,\n        },\n      })\n    }\n  }\n\n  const handleConfirm = (evt: React.MouseEvent<HTMLElement>) => {\n    if (!isDeletable) {\n      return\n    }\n\n    const item = find<any>(\n      x =>\n        `${path(['id'], x)}` ===\n        (evt.currentTarget as HTMLElement).dataset['id']\n    )(dataSource)\n\n    modal = confirm({\n      ...modalDefaultProps(content, modalProps),\n      onOk() {\n        if (modal) {\n          modal.update({\n            okButtonProps: {\n              className: 'c-btn c-btn--danger',\n              style: { minWidth: 80, marginRight: 24 },\n              loading: true,\n            },\n          })\n        }\n\n        return new Promise(resolve => {\n          if (onRequestDelete) {\n            onRequestDelete(item || deleteItem)\n          }\n\n          if (onAfterDelete) {\n            onAfterDelete()\n          }\n\n          onAfterDeleteResolve.current = (() => {\n            resolve()\n            if (refetchQueries) {\n              refetchQueries()\n            }\n          }) as any\n        })\n      },\n      onCancel() {\n        if (onCancel) {\n          onCancel()\n        }\n      },\n    })\n  }\n\n  return {\n    handleConfirmDeletion,\n    handleConfirm,\n    handleDeleteFailure,\n    onAfterDelete: onAfterDeleteResolve,\n  }\n}\n\nexport default useDelete\n","import React from 'react'\nimport {\n  length,\n  pathOr,\n  ifElse,\n  isNil,\n  identity,\n  takeLast,\n  compose,\n  filter,\n  concat,\n} from 'ramda'\nimport { ModalFuncProps } from 'antd/lib/modal'\nimport useDelete from './useDelete'\n\ntype Props<T> = {\n  defaultRowKeys?: number[] | string[]\n  defaultRows?: T[]\n  multiple?: boolean\n  limit?: number\n  modalProps?: ModalFuncProps\n  onRequestDelete?: (values: any) => any\n  refetchQueries?: () => any\n}\n\nexport default function useRowSelection<T = any>(props: Props<T> = {}) {\n  const {\n    limit,\n    defaultRowKeys = [],\n    defaultRows = [],\n    multiple = true,\n  } = props\n\n  const [selectedRowKeys, setSelectedRowKeys] = React.useState<\n    string[] | number[]\n  >(defaultRowKeys)\n\n  const [selectedRows, setSelectedRows] = React.useState<T[]>(defaultRows)\n\n  const onSelectChange = (rowKeys: React.Key[], rows: T[]) => {\n    if (!isNil(limit) && length(rowKeys) > limit) {\n      return\n    }\n\n    setSelectedRowKeys(ifElse(() => multiple, identity, takeLast(1))(rowKeys))\n\n    setSelectedRows(prev =>\n      ifElse(\n        () => multiple,\n        compose(\n          filter((x: any) => rowKeys.includes(x.id)),\n          concat(prev)\n        ),\n        takeLast(1)\n      )(rows)\n    )\n  }\n\n  const isDeletable = React.useMemo(() => selectedRowKeys.length > 0, [\n    selectedRowKeys,\n  ])\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n  }\n\n  const { handleConfirm, onAfterDelete } = useDelete({\n    ...props,\n    isDeletable,\n    content: `確定要刪除 ${length(selectedRowKeys as any)} 筆資料嗎？`,\n    deleteItem: selectedRows.map(x => ({ id: pathOr('code', ['id'], x) })),\n    onAfterDelete: () => {\n      setSelectedRowKeys([])\n      setSelectedRows([])\n    },\n  })\n\n  return {\n    rowSelection,\n    isDeletable,\n    handleConfirm,\n    selectedRowKeys,\n    selectedRows,\n    selectedRowCount: selectedRowKeys.length,\n    onAfterDelete,\n    clearSelection: () => {\n      setSelectedRowKeys([])\n      setSelectedRows([])\n    },\n  }\n}\n","import { Input } from 'antd'\nimport styled, { css } from 'styled-components'\n\nconst borderLess = css`\n  &.ant-input-borderless {\n    border: none;\n    border-bottom: 1px solid #d9d9d9;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  &:active:not(.ant-input-borderless) {\n    box-shadow: 0 0 0 1px ${p => p.theme.primary};\n  }\n`\n\nconst StyledInput = styled(Input)`\n  &.ant-input-affix-wrapper .ant-input,\n  &.ant-input {\n    border-color: #d9d9d9;\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    ${borderLess};\n  }\n\n  &.ant-input.is--linked {\n    border: 1px solid #2d6ca2;\n    background-color: #d9edf7;\n  }\n`\n\nconst Search = styled(Input.Search)`\n  &.ant-input-search {\n    .ant-input {\n      border-color: #d9d9d9;\n\n      &:hover,\n      &:focus {\n        border-color: ${p => p.theme.secondary};\n      }\n\n      &:focus {\n        box-shadow: 0 0 0 1px ${p => p.theme.primary};\n      }\n    }\n\n    .anticon-search {\n      font-size: 20px;\n      color: ${p => p.theme.primary};\n    }\n  }\n`\n\nconst TextArea = styled(Input.TextArea)`\n  &.ant-input {\n    resize: none;\n    border: 1px solid #d9d9d9;\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    ${borderLess};\n  }\n`\n\nexport { StyledInput as Input, TextArea, Search }\n\nexport default StyledInput\n","import React from 'react'\nimport { replace } from 'ramda'\nimport { envStore } from '@/constants/env'\n\nexport interface UseTitleOptions {\n  restoreOnUnmount?: boolean\n}\n\nconst DEFAULT_USE_TITLE_OPTIONS: UseTitleOptions = {\n  restoreOnUnmount: false,\n}\n\nfunction useTitle(\n  title: string,\n  options: UseTitleOptions = DEFAULT_USE_TITLE_OPTIONS\n) {\n  const prevTitleRef = React.useRef(document.title)\n  document.title = replace(/%s/, title)(envStore.appTitle)\n  React.useEffect(() => {\n    if (options && options.restoreOnUnmount) {\n      return () => {\n        document.title = prevTitleRef.current // eslint-disable-line\n      }\n    } else {\n      return\n    }\n  }, []) // eslint-disable-line\n}\n\nexport default typeof document !== 'undefined'\n  ? useTitle\n  : (_title: string) => {}\n","import React from 'react'\nimport { Layout } from 'antd'\nimport cx from 'classnames'\nimport AppFooter from '@/components/app-footer'\nimport theme from '../theme'\n\ninterface PageProps {\n  children: React.ReactNode\n  style?: React.CSSProperties\n  className?: string\n  wrapperClassName?: string\n  wrapperStyle?: React.CSSProperties\n}\n\nexport function Page({ children, style, className = 'pr-12' }: PageProps) {\n  return (\n    <Layout>\n      <Layout.Content\n        style={{\n          background: `linear-gradient(-90deg,#42c2b8,${theme.primary})`,\n        }}>\n        <div\n          className={cx('pl-8 pt-6 pb-12', className)}\n          style={style}\n          css={{\n            background: 'rgb(221, 228, 237)',\n            // borderTopLeftRadius: 32,\n            // borderTopRightRadius: 32,\n          }}>\n          {children}\n        </div>\n      </Layout.Content>\n      <AppFooter />\n    </Layout>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { findDOMNode } from 'react-dom'\nimport { DndContext } from 'react-dnd'\nimport throttle from 'lodash.throttle'\nimport raf from 'raf'\nimport hoist from 'hoist-non-react-statics'\nimport getDisplayName from '@/utils/get-display-name'\n\nfunction noop() {}\n\nfunction intBetween(min, max, val) {\n  return Math.floor(Math.min(max, Math.max(min, val)))\n}\n\nfunction getCoords(evt) {\n  if (evt.type === 'touchmove') {\n    return {\n      x: evt.changedTouches[0].clientX,\n      y: evt.changedTouches[0].clientY,\n    }\n  }\n\n  return { x: evt.clientX, y: evt.clientY }\n}\n\nconst DEFAULT_BUFFER = 150\n\nexport function createHorizontalStrength(_buffer) {\n  return function defaultHorizontalStrength({ x, w, y, h }, point) {\n    const buffer = Math.min(w / 2, _buffer)\n    const inRange = point.x >= x && point.x <= x + w\n    const inBox = inRange && point.y >= y && point.y <= y + h\n\n    if (inBox) {\n      if (point.x < x + buffer) {\n        return (point.x - x - buffer) / buffer\n      } else if (point.x > x + w - buffer) {\n        return -(x + w - point.x - buffer) / buffer\n      }\n    }\n\n    return 0\n  }\n}\n\nexport function createVerticalStrength(_buffer) {\n  return function defaultVerticalStrength({ y, h, x, w }, point) {\n    const buffer = Math.min(h / 2, _buffer)\n    const inRange = point.y >= y && point.y <= y + h\n    const inBox = inRange && point.x >= x && point.x <= x + w\n\n    if (inBox) {\n      if (point.y < y + buffer) {\n        return (point.y - y - buffer) / buffer\n      } else if (point.y > y + h - buffer) {\n        return -(y + h - point.y - buffer) / buffer\n      }\n    }\n\n    return 0\n  }\n}\n\nexport const defaultHorizontalStrength = createHorizontalStrength(\n  DEFAULT_BUFFER\n)\n\nexport const defaultVerticalStrength = createVerticalStrength(DEFAULT_BUFFER)\n\nexport default function createScrollingComponent(WrappedComponent) {\n  class ScrollingComponent extends React.Component {\n    static displayName = `Scrolling(${getDisplayName(WrappedComponent)})`\n\n    static propTypes = {\n      onScrollChange: PropTypes.func,\n      verticalStrength: PropTypes.func,\n      horizontalStrength: PropTypes.func,\n      strengthMultiplier: PropTypes.number,\n    }\n\n    static defaultProps = {\n      useScroll: true,\n      onScrollChange: noop,\n      verticalStrength: defaultVerticalStrength,\n      horizontalStrength: defaultHorizontalStrength,\n      strengthMultiplier: 30,\n    }\n\n    static contextType = DndContext\n\n    constructor(props, ctx) {\n      super(props, ctx)\n\n      this.scaleX = 0\n      this.scaleY = 0\n      this.frame = null\n\n      this.attached = false\n      this.dragging = false\n    }\n\n    componentDidMount() {\n      if (this.props.useScroll) {\n        this._initial()\n      }\n    }\n\n    _initial() {\n      // window.document.body.addEventListener('dragover', this.handleEvent);\n      this.container = findDOMNode(this.wrappedInstance)\n      this.container.addEventListener('dragover', this.handleEvent)\n      // touchmove events don't seem to work across siblings, so we unfortunately\n      // have to attach the listeners to the body\n      window.document.body.addEventListener('touchmove', this.handleEvent)\n\n      this.clearMonitorSubscription = this.context.dragDropManager\n        .getMonitor()\n        .subscribeToStateChange(() => this.handleMonitorChange())\n    }\n\n    componentWillUnmount() {\n      if (this.props.useScroll) {\n        this._remove()\n      }\n    }\n\n    _remove() {\n      // window.document.body.removeEventListener('dragover', this.handleEvent);\n      this.container.removeEventListener('dragover', this.handleEvent)\n      window.document.body.removeEventListener('touchmove', this.handleEvent)\n      this.clearMonitorSubscription()\n      this.stopScrolling()\n    }\n\n    handleEvent = evt => {\n      if (this.dragging && !this.attached) {\n        this.attach()\n        this.updateScrolling(evt)\n      }\n    }\n\n    handleMonitorChange() {\n      const isDragging = this.context.dragDropManager.getMonitor().isDragging()\n\n      if (!this.dragging && isDragging) {\n        this.dragging = true\n      } else if (this.dragging && !isDragging) {\n        this.dragging = false\n        this.stopScrolling()\n      }\n    }\n\n    attach() {\n      this.attached = true\n      window.document.body.addEventListener('dragover', this.updateScrolling)\n      window.document.body.addEventListener('touchmove', this.updateScrolling)\n    }\n\n    detach() {\n      this.attached = false\n      window.document.body.removeEventListener('dragover', this.updateScrolling)\n      window.document.body.removeEventListener(\n        'touchmove',\n        this.updateScrolling\n      )\n    }\n\n    // Update scaleX and scaleY every 100ms or so\n    // and start scrolling if necessary\n    updateScrolling = throttle(\n      evt => {\n        const {\n          left: x,\n          top: y,\n          width: w,\n          height: h,\n        } = this.container.getBoundingClientRect()\n        const box = { x, y, w, h }\n        const coords = getCoords(evt)\n\n        // calculate strength\n        this.scaleX = this.props.horizontalStrength(box, coords)\n        this.scaleY = this.props.verticalStrength(box, coords)\n\n        // start scrolling if we need to\n        if (!this.frame && (this.scaleX || this.scaleY)) {\n          this.startScrolling()\n        }\n      },\n      100,\n      { trailing: false }\n    )\n\n    startScrolling() {\n      let i = 0\n      const tick = () => {\n        const { scaleX, scaleY, container } = this\n        const { strengthMultiplier, onScrollChange } = this.props\n\n        // stop scrolling if there's nothing to do\n        if (strengthMultiplier === 0 || scaleX + scaleY === 0) {\n          this.stopScrolling()\n          return\n        }\n\n        // there's a bug in safari where it seems like we can't get\n        // mousemove events from a container that also emits a scroll\n        // event that same frame. So we double the strengthMultiplier and only adjust\n        // the scroll position at 30fps\n        if (i++ % 2) {\n          const {\n            scrollLeft,\n            scrollTop,\n            scrollWidth,\n            scrollHeight,\n            clientWidth,\n            clientHeight,\n          } = container\n\n          const newLeft = scaleX\n            ? (container.scrollLeft = intBetween(\n                0,\n                scrollWidth - clientWidth,\n                scrollLeft + scaleX * strengthMultiplier\n              ))\n            : scrollLeft\n\n          const newTop = scaleY\n            ? (container.scrollTop = intBetween(\n                0,\n                scrollHeight - clientHeight,\n                scrollTop + scaleY * strengthMultiplier\n              ))\n            : scrollTop\n\n          onScrollChange(newLeft, newTop)\n        }\n        this.frame = raf(tick)\n      }\n\n      tick()\n    }\n\n    stopScrolling() {\n      this.detach()\n      this.scaleX = 0\n      this.scaleY = 0\n\n      if (this.frame) {\n        raf.cancel(this.frame)\n        this.frame = null\n      }\n    }\n\n    render() {\n      const {\n        // not passing down these props\n        strengthMultiplier,\n        verticalStrength,\n        horizontalStrength,\n        onScrollChange,\n        ...props\n      } = this.props\n\n      return (\n        <WrappedComponent\n          ref={ref => {\n            this.wrappedInstance = ref\n          }}\n          {...props}\n        />\n      )\n    }\n  }\n\n  return hoist(ScrollingComponent, WrappedComponent)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport cx from 'classnames'\nimport withScroll, { createVerticalStrength } from './withScroll'\n\ninterface Props {\n  className?: string\n  useScroll?: boolean\n}\n\nconst DndScrollableElement = styled.div`\n  height: 85vh;\n  padding-top: 0;\n  overflow-y: scroll;\n\n  .report-template-builder {\n    &__main-content {\n      min-height: 371.25mm;\n      margin: 0 auto;\n      padding: 16px;\n      box-sizing: border-box;\n      max-width: 100%;\n      background: #fff;\n      border-top-right-radius: 16px;\n      border-bottom-left-radius: 16px;\n      border-bottom-right-radius: 16px;\n    }\n\n    &__contentarea {\n      min-height: 348.75mm;\n    }\n\n    &__contentarea--fixed-layout {\n      min-height: auto;\n    }\n\n    &__snippet-toolbar {\n      visibility: hidden;\n    }\n  }\n\n  .ui-draggable {\n    &:focus,\n    &:active {\n      outline: 0;\n\n      .course-builder__snippet-toolbar {\n        visibility: visible;\n        opacity: 1;\n        transition: visibility 0s, opacity 0.3s, max-height 0.6s linear;\n      }\n    }\n  }\n\n  &.is--preview {\n    height: auto;\n  }\n`\n\nconst ScrollableComponent = withScroll(DndScrollableElement)\n\nconst vStrength = createVerticalStrength(150)\n\nexport default class ReactDndProvider extends React.Component<Props> {\n  static defaultProps = {\n    useScroll: true,\n  }\n\n  render() {\n    const { className, useScroll } = this.props\n\n    return (\n      <ScrollableComponent\n        useScroll={useScroll}\n        verticalStrength={vStrength}\n        strengthMultiplier={100}\n        className={cx('report-template-builder', className)}>\n        {this.props.children}\n      </ScrollableComponent>\n    )\n  }\n}\n","import { confirm } from '@/utils/message'\nimport history from '@/utils/history'\n\nexport default function useRouteLeaveConfirm(pathname: string) {\n  const handleConfirm = () => {\n    confirm({\n      title: '確認要取消嗎？',\n      content: '取消後未儲存的資料將會消失，確認取消嗎？',\n      okText: '確認',\n      onOk: () => {\n        if (pathname) {\n          history.push(pathname)\n        }\n      },\n    })\n  }\n\n  return handleConfirm\n}\n","import React from 'react'\nimport { SelectProps } from 'antd/lib/select'\nimport useSwr from 'swr'\nimport { pathOr, head, forEach } from 'ramda'\nimport request from '@/utils/request'\nimport useSWR from '@/hooks/useSWR'\nimport Select from '@/components/select'\nimport { QueryVariables } from '@/constants/types'\nconst { compose } = require('ramda')\n\nexport type MedicalOrder = {\n  CFINANCL: string\n  CSECT: string\n  HBED: string\n  HBIRTHDT: string\n  HHISNUM: string\n  HNAMEC: string\n  HNURSTA: string\n  HSEX: string\n  ORDATE: string\n  ORDCLNM: string\n  ORDOCNM: string\n  ORHPCODE: string\n  ORPROCED: string\n  ORREQNO: string\n  ORSPENAM: string\n  ORSTATUS: string\n  ORWORD: string\n  ORWORKNO: string\n  ZRSREGORD: string\n}\n\nexport type Doctor = {\n  id: number\n  doctorId: number\n  doctor: string\n  division: 'PATH' | 'RAD'\n}\n\nexport function usePathology() {\n  const { data, ...others } = useSwr(`/api/b2/getPathologyResult`, url =>\n    request(url, {\n      method: 'POST',\n      body: {\n        classification: 'pathorderview',\n        noType: 'HHISNUM',\n        no: '16685033',\n      },\n    })\n  )\n\n  return {\n    ...others,\n    data: compose(head, pathOr([], []))(data) as MedicalOrder,\n  }\n}\n\nexport function useDoctors({\n  division = 'PATH',\n  ...variables\n}: QueryVariables = {}) {\n  const { data = [], ...rest } = useSWR<Doctor[]>(\n    '/api/v1/c2/getC2DoctorList/{division}',\n    {\n      variables: { division, ...variables },\n    }\n  )\n\n  const _data = data?.map(x => ({ ...x, id: x.doctorId }))\n\n  const doctorById: { [key: string]: any } = {}\n\n  forEach(s => (doctorById[s.doctorId] = s), _data)\n\n  return {\n    ...rest,\n    doctorById,\n    data: _data,\n    doctorEnums: _data,\n  }\n}\n\nexport function DoctorSelect(props: SelectProps<any>) {\n  const { data } = useDoctors()\n  return (\n    <Select {...props}>\n      {data.map(x => (\n        <Select.Option key={x.id} value={x.id}>\n          {x.doctor}\n        </Select.Option>\n      ))}\n    </Select>\n  )\n}\n","import styled from 'styled-components'\n\ntype Props = {\n  border?: string\n}\n\nexport default styled.div.attrs({\n  className: 'block-placeholder',\n})<Props>`\n  display: flex;\n  align-items: center;\n  padding-left: 25px;\n  height: 50px;\n  border: rgba(225, 225, 225, 0.9) 2px ${p => p.border || 'dashed'};\n  background-color: transparent;\n  margin-bottom: 35px;\n`\n","/**\n * NOTE:\n * nerver using index as list component key forever,\n * it will completely fucked up your page\n */\nimport React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { DropTarget, ConnectDropTarget, XYCoord } from 'react-dnd'\nimport {\n  equals,\n  length,\n  remove,\n  update,\n  insert,\n  cond,\n  gt,\n  lt,\n  T,\n  __,\n  add,\n  pathOr,\n  identity,\n  always,\n} from 'ramda'\nimport cx from 'classnames'\nimport { uuid } from '@/utils/webHelper'\nimport ItemTypes from '@/constants/item-types'\nimport { SnippetProps } from '@/constants/types'\nimport Snippet from '@/components/snippet'\nimport BlockPlaceholder from '@/components/snippet-block-placeholder'\nimport { canMoveSnippet, getPlaceHolderIndex } from './snippet-utils'\nconst { compose } = require('ramda')\n\ninterface Props {\n  draggingItem: any\n  isOver?: boolean\n  draggable?: boolean\n  canDrop?: boolean\n  snippetList: SnippetProps[]\n  connectDropTarget: ConnectDropTarget\n  onSnippetUpdate(data: any): void\n}\n\ninterface State {\n  placeholderIndex: number | null\n}\n\nconst withDropTarget = DropTarget<Props>(\n  ItemTypes.BOARD,\n  {\n    drop(_, monitor, component) {\n      if (!component || !component.props.draggable) {\n        return\n      }\n\n      const canDrop = monitor.canDrop()\n      let { placeholderIndex } = component.state\n      const item = monitor.getItem()\n\n      if (canDrop && item.fromMenu) {\n        component.handleSnippetDrop({ ...item, placeholderIndex })\n      }\n\n      if (canDrop && !item.fromMenu) {\n        component.handleSnippetMove(item.id, placeholderIndex)\n      }\n    },\n    canDrop({ snippetList }, monitor) {\n      // if there is no items in cards, and is over on the board currently,\n      // we can display a placeholder and drop the snippet item on the board.\n      if (snippetList.length === 0 && monitor.isOver()) {\n        return true\n      }\n\n      const clientOffset = monitor.getClientOffset() as XYCoord\n      const element = document.elementFromPoint(clientOffset.x, clientOffset.y)\n\n      return canMoveSnippet(element)\n    },\n    hover(_, monitor, component) {\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset() as XYCoord\n\n      let {\n        placeholderIndex,\n        isOverSnippet,\n        overSnippet,\n      } = getPlaceHolderIndex(clientOffset)\n\n      // 還要判斷是否是在最後一個 snippet 下面及 snippets-container 裡面\n      if (!isOverSnippet) {\n        return\n      }\n\n      const hoverBoundingRect = (overSnippet as HTMLElement).getBoundingClientRect()\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\n\n      if (hoverClientY < hoverMiddleY) {\n        placeholderIndex -= 1\n      }\n\n      if (\n        monitor.canDrop() &&\n        !equals(component.state.placeholderIndex, placeholderIndex)\n      ) {\n        component.setState({ placeholderIndex })\n      }\n    },\n  },\n  (connect, monitor) => ({\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    canDrop: monitor.canDrop(),\n    didDrop: monitor.didDrop(),\n    draggingItem: monitor.getItem(),\n  })\n)\n\nclass SnippetsContainer extends React.Component<Props, State> {\n  static defaultProps = {\n    draggable: true,\n    snippetList: [],\n  }\n\n  public state: State = {\n    placeholderIndex: null,\n  }\n\n  handleSnippetMove = (id: React.Key, atIndex: number) => {\n    const { snippetList } = this.props\n    const { snippet, index } = this.handleFindSnippet(id)\n\n    const newList = []\n    let isPlaced = false\n\n    snippetList.forEach((s, idx) => {\n      if (idx === index) {\n        return\n      }\n\n      if (!isPlaced && atIndex < idx) {\n        newList.push(snippet)\n        isPlaced = true\n      }\n\n      newList.push(s)\n\n      if (!isPlaced && atIndex === idx) {\n        newList.push(snippet)\n        isPlaced = true\n      }\n    })\n\n    // we dropped the only one snippet in the list so let it back to list.\n    if (length(snippetList) === 1 && !atIndex) {\n      newList.push(snippet)\n    }\n\n    this.props.onSnippetUpdate(newList)\n    this.setState({ placeholderIndex: null })\n  }\n\n  // prettier-ignore\n  handleSnippetDrop = (droppedItem: { [key: string]: any; placeholderIndex: number }) => {\n    const { placeholderIndex, ...item } = droppedItem\n\n    const snippetList = [...this.props.snippetList]\n\n    const nextIndex = placeholderIndex + 1\n    let newList: any[] = []\n\n    const snippet: Partial<SnippetProps> = {\n      ...item,\n      fromMenu: false,\n      id: `${item.id}__${uuid()}`,\n    }\n\n    if (length(snippetList) === 0) {\n      newList = insert(0, snippet)(snippetList)\n    }\n    if (length(snippetList) > 0) {\n      newList = insert(nextIndex, snippet)(snippetList)\n    }\n\n    this.props.onSnippetUpdate(newList)\n    this.setState({ placeholderIndex: null })\n  }\n\n  handleSnippetRemove = (index: number) => {\n    this.props.onSnippetUpdate(remove(index, 1)(this.props.snippetList))\n  }\n\n  handleSnippetShift = (id: React.Key, shift: number) => {\n    const { snippet } = this.handleFindSnippet(id)\n\n    this.handleSnippetUpdate({\n      ...snippet,\n      tabSize: compose(\n        cond([\n          [gt(__, 2), always(2)],\n          [lt(__, 0), always(0)],\n          [T, identity],\n        ]),\n        add(shift),\n        pathOr(0, ['tabSize'])\n      )(snippet),\n    })\n  }\n\n  handleSnippetUpdate = (data: any) => {\n    const { snippet, index } = this.handleFindSnippet(data.id)\n\n    this.props.onSnippetUpdate(\n      update(index, { ...snippet, ...data })(this.props.snippetList)\n    )\n  }\n\n  handleFindSnippet = (id: React.Key) => {\n    const { snippetList } = this.props\n    const snippet = snippetList.filter(x => x.id === id)[0]\n\n    return {\n      snippet,\n      index: snippetList.indexOf(snippet),\n    }\n  }\n\n  render() {\n    const {\n      connectDropTarget,\n      isOver,\n      canDrop,\n      snippetList,\n      draggingItem,\n      draggable, // 模版是否可拖曳，編輯模式下才會是 true\n    } = this.props\n\n    const { placeholderIndex } = this.state\n\n    let isPlaceHold = false\n    const cardList = []\n\n    snippetList.forEach((item, idx) => {\n      if (isOver && canDrop) {\n        isPlaceHold = false\n        if (idx === 0 && placeholderIndex === -1) {\n          cardList.push(<BlockPlaceholder key={`block-placeholder-${idx}`} />)\n        } else if ((placeholderIndex as any) > idx) {\n          isPlaceHold = true\n        }\n      }\n\n      if (item !== undefined) {\n        cardList.push(\n          <Snippet\n            key={item.id}\n            id={item.id}\n            index={idx}\n            draggable={draggable}\n            item={item}\n            inline={item.inline}\n            // wrapperId={(item.id || `snippet-wrapper-${idx}`) as string}\n            wrapperId={`snippet-wrapper-${idx}`}\n            tabSize={item.tabSize}\n            findSnippet={this.handleFindSnippet}\n            updateSnippet={this.handleSnippetUpdate}\n            shiftSnippet={this.handleSnippetShift}\n            removeSnippet={this.handleSnippetRemove}>\n            {item.inline ? (\n              <div\n                id={`${item.id}`}\n                className={`${item.id}`}\n                css={{ padding: 16, lineHeight: 2 }}\n              />\n            ) : (\n              <item.Component\n                id={item.id}\n                className={item.id}\n                item={item}\n                index={idx}\n                onUpdate={this.handleSnippetUpdate}\n              />\n            )}\n          </Snippet>\n        )\n      }\n\n      if (isOver && canDrop && placeholderIndex === idx) {\n        cardList.push(<BlockPlaceholder key={`block-placeholder-${idx}`} />)\n      }\n    })\n\n    // if placeholder index is greater than array.length, display placeholder as last\n    if (isPlaceHold) {\n      cardList.push(<BlockPlaceholder key={'block-placeholder-bottom'} />)\n    }\n\n    // if there is no items in cards currently, display a placeholder anyway\n    if (isOver && canDrop && snippetList.length === 0) {\n      cardList.push(<BlockPlaceholder key={'block-placeholder-zero'} />)\n    }\n\n    // if just has only one item in list and currently dragged, display a placeholder\n    if (isOver && canDrop && snippetList.length === 1) {\n      if (!draggingItem.fromMenu) {\n        cardList.push(<BlockPlaceholder key={'block-placeholder-zero'} />)\n      }\n    }\n\n    return connectDropTarget(\n      <div\n        className={cx('report-template-builder__contentarea', {\n          'report-template-builder__contentarea--fixed-layout': !draggable,\n        })}>\n        {cardList}\n      </div>\n    )\n  }\n}\n\nexport default compose(withRouter, withDropTarget)(SnippetsContainer)\n","import React from 'react'\nimport { DragSource, ConnectDragSource } from 'react-dnd'\nimport styled from 'styled-components'\nimport ItemTypes from '@/constants/item-types'\n\ninterface Props {\n  connectDragSource: ConnectDragSource\n  children?: React.ReactNode\n  className?: string\n  id?: React.Key\n}\n\nconst withDragSource = DragSource(\n  ItemTypes.BOARD,\n  {\n    beginDrag(props: Props) {\n      const { children, className, ...rest } = props // eslint-disable-line\n      return {\n        ...rest,\n        fromMenu: true,\n      }\n    },\n    endDrag(_, monitor) {\n      if (!monitor.didDrop()) {\n        return\n      }\n    },\n    isDragging(props, monitor) {\n      const isDragging = props.id === monitor.getItem().id\n\n      return isDragging\n    },\n  },\n  (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging(),\n  })\n)\n\nclass SnippetListMenuItem extends React.Component<Props> {\n  render() {\n    const { connectDragSource, id, ...rest } = this.props\n\n    return (\n      <SnippetListMenuWrapper\n        {...rest}\n        ref={comp => connectDragSource(comp)}\n        id={`${id}`}>\n        <div className=\"snippet-drawer-menu__item--content\">\n          {this.props.children}\n        </div>\n      </SnippetListMenuWrapper>\n    )\n  }\n}\n\nconst SnippetListMenuWrapper = styled.div`\n  cursor: move;\n`\n\nexport default withDragSource(SnippetListMenuItem)\n","import React from 'react'\nimport cx from 'classnames'\nimport { FontColorsOutlined } from '@ant-design/icons'\nimport styled from 'styled-components'\nimport SnippetListMenuItem from '@/components/snippet-list-menu-item'\nimport snippetTemplateList from '@/components/snippet-template-list'\n\ninterface Props {\n  className?: string\n  style?: React.CSSProperties\n}\n\nexport default class SnippetListMenu extends React.Component<Props> {\n  render() {\n    return (\n      <SnippetListMenuWrapper\n        className={cx('snippet-drawer-menu', this.props.className)}\n        {...this.props}>\n        <div className=\"snippet-drawer-menu__list\">\n          {snippetTemplateList.map(item => (\n            <SnippetListMenuItem\n              {...item}\n              key={item.id}\n              className=\"snippet-drawer-menu__item py-3\">\n              <div className=\"flex items-center\">\n                {item.icon ? (\n                  <item.icon className=\"mr-2\" />\n                ) : (\n                  <FontColorsOutlined className=\"mr-2\" />\n                )}\n                {item.name}\n              </div>\n            </SnippetListMenuItem>\n          ))}\n        </div>\n      </SnippetListMenuWrapper>\n    )\n  }\n}\n\nconst SnippetListMenuWrapper = styled.div`\n  .snippet-drawer-menu {\n    &__list {\n      height: 100%;\n      overflow-y: auto;\n      overflow-x: hidden;\n\n      ::-webkit-scrollbar {\n        display: none;\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { atom, useRecoilState } from 'recoil'\nimport { find, map, head, pathOr, of } from 'ramda'\nimport Store from 'store'\nimport { setComponent } from '@/components/snippet-template-list'\nimport { SnippetProps, PhraseTemplate } from '@/constants/types'\nconst { compose } = require('ramda')\n\nconst fakePhraseTemplateList: PhraseTemplate[] = setComponent(\n  Store.get('phraseTemplateListState')\n)\n\nconst phraseTemplateListState = atom({\n  key: 'phraseTemplateListState',\n  default: fakePhraseTemplateList,\n})\n\n// 片語模版清單\nexport function usePhraseTemplates() {\n  return useRecoilState(phraseTemplateListState)\n}\n\n// 片語模版資料\nexport function usePhraseTemplate({\n  id,\n  data,\n}: {\n  id?: React.Key\n  data?: any\n}) {\n  const [phraseTemplateList] = useRecoilState(phraseTemplateListState)\n\n  const [phraseTemplate, setPhraseTemplate] = React.useState<PhraseTemplate>({\n    setting: [],\n  } as any)\n\n  React.useEffect(() => {\n    if (data?.id) {\n      setPhraseTemplate(compose(head, setComponent, of)(data))\n    }\n  }, [data])\n\n  React.useEffect(() => {\n    if (id) {\n      setPhraseTemplate(\n        compose(find((x: PhraseTemplate) => `${x.id}` === `${id}`))(\n          setComponent(phraseTemplateList)\n        )\n      )\n    }\n  }, [id]) // eslint-disable-line\n\n  let _snippetList = pathOr([], ['setting'])(phraseTemplate)\n\n  React.useEffect(() => {\n    setSnippetList(_snippetList)\n  }, [JSON.stringify(_snippetList)]) // eslint-disable-line\n\n  const [snippetList, setSnippetList] = React.useState<SnippetProps[]>(\n    _snippetList\n  )\n\n  let snippetById: { [key: string]: SnippetProps } = {}\n\n  return {\n    phraseTemplate,\n    snippetList,\n    setSnippetList,\n    snippetById: map((x: SnippetProps) => (snippetById[x.id] = x), snippetList),\n  }\n}\n","import store from 'store'\nimport moment from 'moment'\nimport { update, length } from 'ramda'\nimport { Mutation, MutationOptions, PhraseTemplate } from '@/constants/types'\nimport { usePhraseTemplates, usePhraseTemplate } from '@/data/usePhrase'\nimport { uuid } from '@/utils/webHelper'\n\nexport const usePhraseList = () => {\n  const [phraseTemplates] = usePhraseTemplates()\n\n  const refetch = () => ({})\n\n  return {\n    refetch,\n    data: {\n      content: phraseTemplates,\n      total: length(phraseTemplates),\n      totalPages: Math.floor(length(phraseTemplates) / 10 + 1),\n    },\n    loading: false,\n  }\n}\n\nexport const useAddNewPhrase = ({ onCompleted }: MutationOptions = {}) => {\n  const [phraseTemplates, setPhraseTemplates] = usePhraseTemplates()\n\n  const handler = (values: PhraseTemplate) => {\n    let id = uuid()\n    let newList = [\n      ...phraseTemplates,\n      {\n        ...values,\n        id,\n        createdAt: moment(),\n        createdAtStr: moment().format('YYYY/MM/DD HH:mm'),\n        updatedAt: moment(),\n        updatedAtStr: moment().format('YYYY/MM/DD HH:mm'),\n      },\n    ]\n\n    setPhraseTemplates(newList)\n\n    store.set('phraseTemplateListState', newList)\n\n    if (onCompleted) {\n      onCompleted({ ...values, id })\n    }\n  }\n\n  return [false, handler] as Mutation\n}\n\nexport const useUpdatePhrase = ({ onCompleted }: MutationOptions = {}) => {\n  const [phraseTemplates, setPhraseTemplates] = usePhraseTemplates()\n\n  const handler = (values: PhraseTemplate) => {\n    let index = phraseTemplates.findIndex(x => `${x.id}` === `${values.id}`)\n    let newList = update(\n      index,\n      {\n        ...values,\n        updatedAt: moment(),\n        updatedAtStr: moment().format('YYYY/MM/DD HH:mm'),\n      },\n      phraseTemplates\n    )\n\n    setPhraseTemplates(newList)\n    store.set('phraseTemplateListState', newList)\n\n    if (onCompleted) {\n      onCompleted()\n    }\n  }\n\n  return [false, handler] as Mutation\n}\n\nexport const useRemovePhrase = ({ onCompleted }: MutationOptions = {}) => {\n  const [phraseTemplates, setPhraseTemplates] = usePhraseTemplates()\n\n  const handler = (values: PhraseTemplate) => {\n    let newList = phraseTemplates.filter(x => `${x.id}` !== `${values.id}`)\n\n    setPhraseTemplates(newList)\n    store.set('phraseTemplateListState', newList)\n\n    if (onCompleted) {\n      onCompleted()\n    }\n  }\n\n  return [false, handler] as Mutation\n}\n\nexport const usePhraseItem = (options: { id?: React.Key; data?: any }) => {\n  const { setSnippetList, snippetList, ...rest } = usePhraseTemplate(options)\n\n  return {\n    ...rest,\n    snippetList,\n    setSnippetList,\n    handleSnippetUpdate: setSnippetList,\n  }\n}\n","import React from 'react'\n\nexport default React.lazy(() => import('./report-template-builder'))\n","import React from 'react'\n\nexport default React.lazy(\n  () => import('../report-template-list/report-template-list')\n)\n","import React from 'react'\n\nexport default React.lazy(() => import('./report-inquiry'))\n","/* eslint eqeqeq: 0 */\nimport React from 'react'\n\nexport type IReactComponent<P = any> =\n  | React.StatelessComponent<P>\n  | React.ComponentClass<P>\n  | React.ClassicComponentClass<P>\n\nfunction computeHeight(node: HTMLDivElement) {\n  const totalHeight = parseInt(getComputedStyle(node).height, 10)\n  const padding =\n    parseInt(getComputedStyle(node).paddingTop, 10) +\n    parseInt(getComputedStyle(node).paddingBottom, 10)\n  return totalHeight - padding\n}\n\nfunction getAutoHeight(n: HTMLDivElement | undefined) {\n  if (!n) {\n    return 0\n  }\n\n  let node = n\n\n  let height = computeHeight(node)\n\n  while (!height) {\n    node = node.parentNode as HTMLDivElement\n    if (node) {\n      height = computeHeight(node)\n    } else {\n      break\n    }\n  }\n\n  return height\n}\n\ninterface AutoHeightProps {\n  height?: number\n}\n\nfunction autoHeight() {\n  return <P extends AutoHeightProps>(\n    WrappedComponent: React.ComponentClass<P> | React.FC<P>\n  ) =>\n    class extends React.Component<P & AutoHeightProps> {\n      state = {\n        computedHeight: 0,\n      }\n\n      root: HTMLDivElement | undefined = undefined\n\n      componentDidMount() {\n        const { height } = this.props\n        if (!height) {\n          const h = getAutoHeight(this.root)\n          // eslint-disable-next-line\n          this.setState({ computedHeight: h })\n        }\n      }\n\n      handleRoot = (node: HTMLDivElement) => {\n        this.root = node\n      }\n\n      render() {\n        const { height } = this.props\n        const { computedHeight } = this.state\n        const h = height || computedHeight\n        return (\n          <div ref={this.handleRoot}>\n            {h > 0 && <WrappedComponent {...this.props} height={h} />}\n          </div>\n        )\n      }\n    }\n}\n\nexport default autoHeight\n","import React from 'react'\nimport moment from 'moment'\nimport { replace } from 'ramda'\nimport useRouteLeaveConfirm from '@/hooks/useRouteLeaveConfirm'\nimport Button from '@/components/button'\nimport env from '@/constants/env'\nimport useAuth from '@/hooks/useAuth'\nimport { REPORT_INQUIRY } from '@/constants/routes'\nimport { ReportTemplate } from '@/constants/types'\nconst html2pdf = require('html2pdf.js')\n\nexport enum menuState {\n  VISIBLE_RIGHT = '1',\n  VISIBLE_LEFT = '2',\n}\n\ntype Props = {\n  data: ReportTemplate\n  isExport?: boolean\n  onToggleExport: () => void\n  onOk: () => void\n  onExportJson?: () => void\n  onExport?: () => void\n}\n\nexport default function Header({\n  data,\n  isExport,\n  onToggleExport,\n  onOk,\n}: Props) {\n  const handleConfirm = useRouteLeaveConfirm(REPORT_INQUIRY)\n\n  const { user } = useAuth()\n\n  const [exporting, setIsExporting] = React.useState(false)\n\n  const handleSave = () => {\n    onOk()\n  }\n\n  const handleOpenImageViewer = () => {\n    let url = replace(\n      ':studyInstanceUIDs',\n      '1.3.6.1.4.1.14519.5.2.1.3098.4963.119176436435873112231353675460'\n    )(env.viewerUrl)\n\n    // remove last `/`\n    // let url = compose(join('/'), dropLast(1), split('/'))(envStore.appUrl)\n\n    window.open(`${url}?id=${data.id}`, '__blank')\n  }\n\n  const handleExport = async () => {\n    setIsExporting(true)\n\n    const element = document.querySelector('.js-export-pdf')\n    const opt = {\n      margin: 1,\n      filename: `報告匯出_${moment().format('YYYYMMDDHHmmss')}.pdf`,\n      image: { type: 'jpeg', quality: 0.98 },\n      html2canvas: { scale: 2 },\n      jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' },\n    }\n\n    // New Promise-based usage:\n    html2pdf().set(opt).from(element).save()\n  }\n\n  return (\n    <div className=\"inline-flex\">\n      {!isExport && (\n        <>\n          <Button\n            color=\"outline\"\n            className=\"ml-2 text-white border-white bg-transparent\"\n            onClick={handleOpenImageViewer}\n            style={{ minWidth: 80 }}>\n            影像\n          </Button>\n          <Button\n            color=\"outline\"\n            className=\"ml-2 text-white border-white bg-transparent\"\n            onClick={handleSave}\n            style={{ minWidth: 80 }}>\n            儲存\n          </Button>\n          <Button\n            color=\"outline\"\n            className=\"ml-2 text-white border-white bg-transparent\"\n            onClick={handleConfirm}\n            style={{ minWidth: 80 }}>\n            取消\n          </Button>\n          <Button\n            color=\"outline\"\n            className=\"ml-6 text-white border-white bg-transparent\"\n            onClick={onToggleExport}>\n            輸出報告\n          </Button>\n        </>\n      )}\n      {isExport && (\n        <>\n          {user.division !== 'CLINICIAN' && (\n            <Button\n              color=\"outline\"\n              className=\"text-white border-white bg-transparent\"\n              onClick={onToggleExport}>\n              取消\n            </Button>\n          )}\n          <Button\n            color=\"outline\"\n            className=\"ml-6 text-white border-white bg-transparent\">\n            下載 JSON\n          </Button>\n          <Button\n            color=\"outline\"\n            className=\"ml-2 text-white border-white bg-transparent\"\n            loading={exporting}\n            onClick={handleExport}>\n            下載報告\n          </Button>\n        </>\n      )}\n    </div>\n  )\n}\n","import { Anchor } from 'antd'\nimport styled from 'styled-components'\n\nconst StyledAnchor = styled(Anchor)`\n  &.ant-anchor-wrapper {\n    background: transparent;\n  }\n\n  .fixed {\n    position: relative !important;\n  }\n\n  a:hover,\n  .ant-anchor-link-active > .ant-anchor-link-title {\n    color: ${p => p.theme.primary};\n  }\n\n  .ant-anchor-ink-ball {\n    border: 2px solid ${p => p.theme.primary};\n  }\n\n  .ant-anchor-ink::before {\n    /* background-color: ${p => p.theme.secondary}; */\n  }\n`\n\nconst PieChart = styled.div<{\n  legendWidth?: number\n  chartWidth?: number\n}>`\n  &.pie {\n    position: relative;\n\n    .chart {\n      position: relative;\n    }\n\n    &.hasLegend .chart {\n      width: calc(100% - ${p => p.chartWidth + 'px'});\n    }\n\n    .legend {\n      position: absolute;\n      top: 50%;\n      right: 0;\n      min-width: ${p => p.legendWidth}px;\n      margin: 0 20px;\n      padding: 0;\n      list-style: none;\n      transform: translateY(-50%);\n      li {\n        height: 22px;\n        margin-bottom: 16px;\n        line-height: 22px;\n        cursor: pointer;\n        &:last-child {\n          margin-bottom: 0;\n        }\n      }\n    }\n\n    .dot {\n      position: relative;\n      top: -1px;\n      display: inline-block;\n      width: 8px;\n      height: 8px;\n      margin-right: 8px;\n      border-radius: 8px;\n    }\n\n    .line {\n      display: inline-block;\n      width: 1px;\n      height: 16px;\n      margin-right: 8px;\n      background-color: hsv(0, 0, 91%);\n    }\n\n    .legendTitle {\n      color: rgba(0, 0, 0, 0.65);\n    }\n\n    .percent {\n      color: rgba(0, 0, 0, 0.45);\n    }\n\n    .value {\n      position: absolute;\n      right: 0;\n    }\n\n    .title {\n      margin-bottom: 8px;\n    }\n\n    .total {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      max-height: 62px;\n      text-align: center;\n      transform: translate(-50%, -50%);\n      font-size: 14px;\n\n      & > h4 {\n        height: 22px;\n        margin-bottom: 8px;\n        color: rgba(0, 0, 0, 0.45);\n        font-weight: normal;\n        font-size: 14px;\n        line-height: 22px;\n      }\n      & > p {\n        display: block;\n        height: 32px;\n        color: rgba(0, 0, 0, 0.85);\n        font-size: 1.2em;\n        line-height: 32px;\n        white-space: nowrap;\n      }\n    }\n  }\n\n  &.legendBlock {\n    &.hasLegend .chart {\n      width: 100%;\n      margin: 0 0 32px 0;\n    }\n    .legend {\n      position: relative;\n      transform: none;\n    }\n  }\n`\n\nexport { StyledAnchor as Anchor, PieChart }\n","import { G2 } from 'bizcharts/typings/index'\nimport React from 'react'\nimport Chart from 'bizcharts/lib/components/Chart'\nimport Tooltip from 'bizcharts/lib/components/Tooltip'\nimport Coord from 'bizcharts/lib/components/Coord'\nimport Geom from 'bizcharts/lib/components/Geom'\nimport { Divider } from 'antd'\nimport classNames from 'classnames'\nimport Debounce from 'lodash.debounce'\nimport autoHeight from './autoHeight'\nimport { PieChart } from './components'\nimport theme from '../../theme'\nconst ReactFitText = require('react-fittext')\nconst { DataView } = require('@antv/data-set')\n\ninterface PieProps {\n  animate?: boolean\n  color?: string\n  colors?: string[]\n  selected?: boolean\n  height?: number\n  margin?: [number, number, number, number]\n  hasLegend?: boolean\n  padding?: [number, number, number, number]\n  percent?: number\n  data?: {\n    x: string | string\n    y: number\n  }[]\n  inner?: number\n  lineWidth?: number\n  forceFit?: boolean\n  style?: React.CSSProperties\n  className?: string\n  total?: React.ReactNode | number | (() => React.ReactNode | number)\n  title?: React.ReactNode\n  tooltip?: boolean\n  valueFormat?: (value: string) => string | React.ReactNode\n  subTitle?: React.ReactNode\n  width?: number\n  legendWidth?: number\n}\n\ninterface PieState {\n  legendData: {\n    checked: boolean\n    x: string\n    color: string\n    percent: number\n    y: string\n  }[]\n  legendBlock: boolean\n}\n\nclass Pie extends React.PureComponent<PieProps, PieState> {\n  state: PieState = {\n    legendData: [],\n    legendBlock: false,\n  }\n\n  requestRef: number | undefined = undefined\n\n  root: HTMLDivElement | undefined = undefined\n\n  chart: G2.Chart | undefined = undefined\n\n  componentDidMount() {\n    window.addEventListener(\n      'resize',\n      () => {\n        this.requestRef = requestAnimationFrame(() => this.resize())\n      },\n      { passive: true }\n    )\n  }\n\n  componentDidUpdate(preProps: PieProps) {\n    const { data } = this.props\n    if (data !== preProps.data) {\n      // because of charts data create when rendered\n      // so there is a trick for get rendered time\n      this.getLegendData()\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.requestRef) {\n      window.cancelAnimationFrame(this.requestRef)\n    }\n    if (this.resize) {\n      window.removeEventListener('resize', this.resize)\n      this.resize.cancel()\n    }\n  }\n\n  getG2Instance = (chart: G2.Chart) => {\n    this.chart = chart\n    requestAnimationFrame(() => {\n      this.getLegendData()\n      this.resize()\n    })\n  }\n\n  // for custom lengend view\n  getLegendData = () => {\n    if (!this.chart) return\n    const geom = this.chart.getAllGeoms()[0] // 获取所有的图形\n    if (!geom) return\n    const items = (geom as any).get('dataArray') || [] // 获取图形对应的\n\n    const legendData = items.map((item: { color: any; _origin: any }[]) => {\n      /* eslint no-underscore-dangle:0 */\n      const origin = item[0]._origin\n      origin.color = item[0].color\n      origin.checked = true\n      return origin\n    })\n\n    this.setState({\n      legendData,\n    })\n  }\n\n  handleRoot = (n: HTMLDivElement) => {\n    this.root = n\n  }\n\n  handleLegendClick = (item: any, i: number) => {\n    const newItem = item\n    newItem.checked = !newItem.checked\n\n    const { legendData } = this.state\n    legendData[i] = newItem\n\n    const filteredLegendData = legendData.filter(l => l.checked).map(l => l.x)\n\n    if (this.chart) {\n      this.chart.filter('x', val => filteredLegendData.indexOf(`${val}`) > -1)\n    }\n\n    this.setState({\n      legendData,\n    })\n  }\n\n  resize = Debounce(() => {\n    const { hasLegend } = this.props\n    const { legendBlock } = this.state\n    if (!hasLegend || !this.root) {\n      window.removeEventListener('resize', this.resize)\n      return\n    }\n    if (\n      this.root &&\n      this.root.parentNode &&\n      (this.root.parentNode as HTMLElement).clientWidth <= 380\n    ) {\n      if (!legendBlock) {\n        this.setState({\n          legendBlock: true,\n        })\n      }\n    } else if (legendBlock) {\n      this.setState({\n        legendBlock: false,\n      })\n    }\n  }, 400)\n\n  render() {\n    const {\n      valueFormat,\n      subTitle,\n      total,\n      hasLegend = false,\n      className,\n      style,\n      height,\n      forceFit = true,\n      percent,\n      color,\n      inner = 0.75,\n      animate = true,\n      colors,\n      lineWidth = 0,\n      width = 240,\n      legendWidth = 250,\n    } = this.props\n\n    const { legendData, legendBlock } = this.state\n    const pieClassName = classNames('pie', className, {\n      hasLegend: !!hasLegend,\n      legendBlock: legendBlock,\n    })\n\n    const {\n      data: propsData,\n      selected: propsSelected = true,\n      tooltip: propsTooltip = true,\n    } = this.props\n\n    let data = propsData || []\n    let selected = propsSelected\n    let tooltip = propsTooltip\n\n    const defaultColors = colors\n    data = data || []\n    selected = selected || true\n    tooltip = tooltip || true\n    let formatColor\n\n    const scale = {\n      x: {\n        type: 'cat',\n        range: [0, 1],\n      },\n      y: {\n        min: 0,\n      },\n    }\n\n    if (percent || percent === 0) {\n      selected = false\n      tooltip = false\n      formatColor = (value: string) => {\n        if (value === '占比') {\n          return color || theme.primary\n        }\n        return '#f0f2f5'\n      }\n\n      data = [\n        {\n          x: '占比',\n          y: parseFloat(`${percent}`),\n        },\n        {\n          x: '反比',\n          y: 100 - parseFloat(`${percent}`),\n        },\n      ]\n    }\n\n    const tooltipFormat = [\n      'x*percent',\n      (x: string, p: number) => ({\n        name: x,\n        value: `${(p * 100).toFixed(2)}%`,\n      }),\n    ]\n\n    const padding = [6, 0, 6, 0]\n\n    const dv = new DataView()\n    dv.source(data).transform({\n      type: 'percent',\n      field: 'y',\n      dimension: 'x',\n      as: 'percent',\n    })\n\n    return (\n      <PieChart\n        ref={this.handleRoot}\n        className={pieClassName}\n        chartWidth={width}\n        style={style}\n        legendWidth={legendWidth}>\n        <ReactFitText maxFontSize={25}>\n          <div className=\"chart\">\n            <Chart\n              scale={scale}\n              height={height}\n              forceFit={forceFit}\n              data={dv}\n              padding={padding}\n              animate={animate}\n              onGetG2Instance={this.getG2Instance}>\n              {!!tooltip && <Tooltip showTitle={false} />}\n              <Coord type=\"theta\" innerRadius={inner} />\n              <Geom\n                style={{ lineWidth, stroke: '#fff' }}\n                tooltip={tooltip && tooltipFormat}\n                type=\"intervalStack\"\n                position=\"percent\"\n                color={[\n                  'x',\n                  percent || percent === 0 ? formatColor : defaultColors,\n                ]}\n                selected={selected}\n              />\n            </Chart>\n\n            {(subTitle || total) && (\n              <div className=\"total\">\n                {subTitle && <h4 className=\"pie-sub-title\">{subTitle}</h4>}\n                {/* eslint-disable-next-line */}\n                {total && (\n                  <div className=\"pie-stat\">\n                    {typeof total === 'function' ? total() : total}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </ReactFitText>\n\n        {hasLegend && (\n          <ul className=\"legend\">\n            {legendData.map((item, i) => (\n              <li key={item.x} onClick={() => this.handleLegendClick(item, i)}>\n                <span\n                  className=\"dot\"\n                  style={{\n                    backgroundColor: !item.checked ? '#aaa' : item.color,\n                  }}\n                />\n                <span className=\"legendTitle\">{item.x}</span>\n                <Divider type=\"vertical\" />\n                <span className=\"percent\">\n                  {`${(Number.isNaN(item.percent)\n                    ? 0\n                    : item.percent * 100\n                  ).toFixed(2)}%`}\n                </span>\n                <span className=\"value\">\n                  {valueFormat ? valueFormat(item.y) : item.y}\n                </span>\n              </li>\n            ))}\n          </ul>\n        )}\n      </PieChart>\n    )\n  }\n}\n\nexport default autoHeight()(Pie)\n","export enum ActionTypes {\n  DELETABLE = 'deletable',\n  UPDATABLE = 'updatable',\n  CREATABLE = 'creatable',\n  READABLE = 'readable',\n}\n\nexport const reportAnnotations = [\n  '檢體不適當',\n  '不符合',\n  '通知惡性或疑似',\n  '通知癌前病灶',\n  '其他危險值',\n  '肺結核',\n  '是否保留',\n]\n\nexport const statusEnums = {\n  f: '草稿',\n  s: '完成',\n}\n","import React from 'react'\nimport cx from 'classnames'\nimport { Form, Tooltip } from 'antd'\nimport { DoubleRightOutlined } from '@ant-design/icons'\nimport Collapse from '@/components/collapse'\nimport { Checkbox, CheckboxGroup } from '@/components/checkbox'\nimport Radio from '@/components/radio'\nimport { reportAnnotations } from '@/constants/enums'\n\ntype Props = {\n  data?: any\n  reviewDoctor?: string\n  onSave?: () => void\n  onPhraseOpen?: () => void\n  onToggle?: () => void\n}\n\nexport default function ReportMedicalOrder({\n  data,\n  reviewDoctor,\n  onToggle,\n}: Props) {\n  return (\n    <Collapse\n      activeKey={[1, 2, 3, 4]}\n      expandIcon={() => null}\n      className=\"shadow-2xl\">\n      <Collapse.Panel\n        header={\n          <div className=\"text-center relative\">\n            <Tooltip title=\"收合醫囑內容\">\n              <DoubleRightOutlined\n                className=\"absolute\"\n                style={{ top: 5, left: 15 }}\n                onClick={onToggle}\n              />\n            </Tooltip>\n            醫囑名稱\n          </div>\n        }\n        key={1}>\n        <div className=\"border-b border-gray-600 p-3\">\n          申請序號：{data?.ORREQNO}\n        </div>\n        <div className=\"border-b border-gray-600 p-3\">\n          病理號：{data?.ORWORKNO}\n        </div>\n        <div className=\"border-b border-gray-600 p-3\">\n          病患姓名：{data?.HNAMEC}\n        </div>\n        <div className=\"border-b border-gray-600 p-3\">性別：{data?.HSEX}</div>\n        <div className=\"border-b border-gray-600 p-3\">\n          申請科別：{data?.CSECT}\n        </div>\n        <div className=\"border-b border-gray-600 p-3\">\n          病歷號：{data?.HHISNUM}\n        </div>\n        <div className=\"border-b border-gray-600 p-3\">\n          病房：{data?.HNURSTA}\n        </div>\n        <div className=\"border-b border-gray-600 p-3\">\n          病房床號：{data?.HBED}\n        </div>\n        <div className=\"border-b border-gray-600 p-3\">\n          出生日期：{data?.HBIRTHDT}\n        </div>\n        <div className=\"border-b border-gray-600 p-3\">\n          醫屬名稱：{data?.ORPROCED}\n        </div>\n        <div className=\"border-b border-gray-600 p-3\">\n          現在輸入：{'LoginUser'}\n        </div>\n        <div className=\"border-b border-gray-600 p-3\">\n          審核者：{reviewDoctor}\n        </div>\n      </Collapse.Panel>\n      <Collapse.Panel\n        header={<div className=\"text-center\">儲存狀態</div>}\n        key={2}>\n        <Form.Item noStyle name=\"state\">\n          <Radio.Group className=\"pl-3\">\n            <Radio className=\"block\" value=\"1\">\n              已輸\n            </Radio>\n            <Radio className=\"block mt-1\" value=\"2\">\n              待發\n            </Radio>\n            <Radio className=\"block mt-1\" value=\"3\">\n              急發\n            </Radio>\n          </Radio.Group>\n        </Form.Item>\n      </Collapse.Panel>\n      <Collapse.Panel\n        header={<div className=\"text-center\">報告註記</div>}\n        key={3}>\n        <Form.Item noStyle name=\"annotations\">\n          <CheckboxGroup>\n            {reportAnnotations.map((x, idx) => (\n              <Checkbox\n                key={`annotations-${idx}`}\n                className={cx('block ml-0 pl-2', {\n                  'mt-1': idx > 0,\n                })}\n                defaultChecked={false}\n                value={`${idx}`}>\n                {x}\n              </Checkbox>\n            ))}\n          </CheckboxGroup>\n        </Form.Item>\n      </Collapse.Panel>\n      <Collapse.Panel\n        header={<div className=\"text-center\">操作熱鍵</div>}\n        key={4}>\n        <div className=\"pl-6\">\n          <code className=\"bg-yellow-400 px-1\">CTRL＋W</code>,{' '}\n          <code className=\"bg-yellow-400 px-1\">CTRL+S</code> 儲存\n        </div>\n        <div className=\"pl-6 pt-2\">\n          <code className=\"bg-yellow-400 px-1\">F9</code> 片語視窗\n        </div>\n      </Collapse.Panel>\n    </Collapse>\n  )\n}\n","import React from 'react'\nimport { Affix } from 'antd'\nimport { keys, pathOr } from 'ramda'\nimport { mapIndexed } from '@/utils/webHelper'\nimport { SnippetProps, Snippets } from '@/constants/types'\nimport { Anchor } from './components'\nconst { compose } = require('ramda')\n\nconst { Link } = Anchor\n\ntype Props = {\n  affixed?: boolean\n  onClick: (\n    e: React.MouseEvent<HTMLElement>,\n    link: {\n      title: React.ReactNode\n      href: string\n    }\n  ) => void\n  onChange: (affixed?: boolean) => void\n  snippetList: Snippets\n}\n\nexport default function ReportTypingAffix({\n  affixed = false,\n  onChange,\n  onClick,\n  snippetList,\n}: Props) {\n  return (\n    <Affix offsetTop={0} onChange={onChange}>\n      <Anchor\n        showInkInFixed\n        affix={false}\n        className=\"is--fixed\"\n        style={getAnchorStyles(affixed)}\n        onClick={onClick}>\n        {compose(\n          mapIndexed((key: string, idx: number) => (\n            <Link key={`${key}-${idx}`} href={key} title={key}>\n              {compose(\n                mapIndexed((x: SnippetProps) => (\n                  <Link\n                    key={x.id}\n                    href={`${key}-${x.id}`}\n                    title={pathOr(x.id, ['setting', 'text'], x)}\n                  />\n                )),\n                pathOr([], [key])\n              )(snippetList)}\n            </Link>\n          )),\n          keys\n        )(snippetList)}\n      </Anchor>\n    </Affix>\n  )\n}\n\nfunction getAnchorStyles(affixed?: boolean): React.CSSProperties | undefined {\n  if (!affixed) {\n    return undefined\n  }\n\n  return {\n    marginLeft: -16,\n    marginRight: -16,\n    background: '#fff',\n    padding: 24,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 8,\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { length, keys, pathOr, gt, __, map } from 'ramda'\nimport cx from 'classnames'\nimport { Row, Col, Divider as AntDivider, Form } from 'antd'\nimport { useBreadcrumb } from '@/hooks/useApp'\nimport { createFormItemLayout } from '@/utils/form'\nimport {\n  Snippets,\n  SnippetProps,\n  ReportTemplateSettingOption,\n} from '@/constants/types'\nimport { Input } from '@/components/input'\nimport { MedicalOrder } from '@/services/pathology'\nimport { mapIndexed } from '@/utils/webHelper'\nconst { compose } = require('ramda')\n\ntype Props = {\n  className?: string\n  style?: React.CSSProperties\n  data: {\n    template: any\n    snippetList: Snippets\n    medical: MedicalOrder\n  }\n}\n\nconst formItemLayout = createFormItemLayout(8)\nconst shortFormItemLayout = createFormItemLayout(3)\n\nconst FormItem = styled(Form.Item)`\n  margin-bottom: 12px;\n`\n\nconst Divider = styled(AntDivider)`\n  margin: 16px 0;\n`\n\nconst SnippetPreviewWrapper = styled.div`\n  .ant-card-head {\n    min-height: auto;\n  }\n\n  .ant-card-head-title {\n    padding-top: 0;\n    font-size: 14px;\n  }\n\n  .ant-card-body {\n    padding-top: 6px;\n    padding-bottom: 8px;\n    padding-left: 18px;\n  }\n`\n\nexport default function ReportTypingPreview({ className, style, data }: Props) {\n  const { snippetList, medical } = data\n\n  useBreadcrumb([{ name: '輸入報告' }, { name: '文件報告' }])\n\n  return (\n    <div style={style} className={cx('js-export-pdf', className)}>\n      <Row className=\"mb-3\">\n        <Col span={24}>\n          <div className=\"text-xl text-center mt-2\">\n            高雄榮總 <span className=\"mx-6\">病理檢驗部</span> 檢查報告單\n          </div>\n        </Col>\n      </Row>\n      <Divider />\n      <Row gutter={16}>\n        <Col span={8}>\n          <FormItem {...formItemLayout} label=\"病房床號\">\n            <Input readOnly bordered={false} value={medical?.HBED} />\n          </FormItem>\n        </Col>\n        <Col span={8}>\n          <FormItem {...formItemLayout} label=\"病患姓名\">\n            <Input readOnly bordered={false} value={medical?.HNAMEC} />\n          </FormItem>\n        </Col>\n        <Col span={8}>\n          <FormItem {...formItemLayout} label=\"病歷號\">\n            <Input readOnly bordered={false} value={medical?.HHISNUM} />\n          </FormItem>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={8}>\n          <FormItem {...formItemLayout} label=\"病患性別\">\n            <Input readOnly bordered={false} value={medical?.HSEX} />\n          </FormItem>\n        </Col>\n        <Col span={8}>\n          <FormItem {...formItemLayout} label=\"病患身分\">\n            <Input readOnly bordered={false} value={'xxxxx'} />\n          </FormItem>\n        </Col>\n        <Col span={8}>\n          <FormItem {...formItemLayout} label=\"出生日期\">\n            <Input readOnly bordered={false} value={medical?.HBIRTHDT} />\n          </FormItem>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={8}>\n          <FormItem {...formItemLayout} label=\"申請序號\">\n            <Input readOnly bordered={false} value={medical?.ORREQNO} />\n          </FormItem>\n        </Col>\n        <Col offset={8} span={8}>\n          <FormItem {...formItemLayout} label=\"病理號\">\n            <Input readOnly bordered={false} value={medical?.ORWORKNO} />\n          </FormItem>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <FormItem {...shortFormItemLayout} label=\"醫囑項目\">\n            <div\n              dangerouslySetInnerHTML={{ __html: medical?.ORWORD }}\n              style={{\n                maxWidth: '100%',\n                whiteSpace: 'initial',\n                borderBottom: '1px solid #d9d9d9',\n                paddingBottom: 5,\n                paddingLeft: 5,\n              }}\n            />\n          </FormItem>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <FormItem {...shortFormItemLayout} label=\"檢查日期\">\n            <Input readOnly bordered={false} value={'xxxx'} />\n          </FormItem>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <FormItem {...shortFormItemLayout} label=\"開立科別\">\n            <Input readOnly bordered={false} value={medical?.CSECT} />\n          </FormItem>\n        </Col>\n      </Row>\n      <Divider />\n      <Row>\n        <Col span={24}>\n          <SnippetPreviewWrapper>\n            {compose(\n              map((key: string) => (\n                <div\n                  key={key}\n                  css={{\n                    fontSize: 15,\n                    lineHeight: 1.65,\n                    color: 'rgba(0, 0, 0, 0.85)',\n                  }}>\n                  {compose(\n                    gt(__, 0),\n                    length,\n                    pathOr([], [key])\n                  )(snippetList) && (\n                    <h2 className=\"mb-1 font-normal\" css={{ fontSize: 16 }}>\n                      {key}\n                    </h2>\n                  )}\n                  {compose(\n                    mapIndexed(\n                      ({ setting, ...x }: SnippetProps, idx: number) => (\n                        <div key={x.id}>\n                          {(() => {\n                            if (x.inline) {\n                              return (\n                                <div\n                                  dangerouslySetInnerHTML={{ __html: x.html }}\n                                />\n                              )\n                            }\n\n                            const content = (\n                              <div>\n                                {idx + 1}. {setting.text}\n                                {setting.value ? '：' + setting.value : ''}\n                              </div>\n                            )\n\n                            if (setting.options) {\n                              return (\n                                <div>\n                                  {content}\n                                  {mapIndexed(\n                                    (\n                                      o: ReportTemplateSettingOption,\n                                      oIdx: number\n                                    ) => (\n                                      <div key={o.id} className=\"pl-2\">\n                                        {'I'.padEnd(oIdx, 'I')}. {o.text}\n                                      </div>\n                                    ),\n                                    setting.options\n                                  )}\n                                </div>\n                              )\n                            }\n\n                            return content\n                          })()}\n                        </div>\n                      )\n                    ),\n                    pathOr([], [key])\n                  )(snippetList)}\n                </div>\n              )),\n              keys\n            )(snippetList)}\n          </SnippetPreviewWrapper>\n        </Col>\n      </Row>\n      <Divider />\n      <Row gutter={16}>\n        <Col span={8}>\n          <FormItem {...formItemLayout} label=\"判讀醫師\">\n            <Input bordered={false} />\n          </FormItem>\n        </Col>\n        <Col span={8}>\n          <FormItem {...formItemLayout} label=\"複審醫師\">\n            <Input bordered={false} />\n          </FormItem>\n        </Col>\n        <Col span={8}>\n          <FormItem {...formItemLayout} label=\"申請醫師\">\n            <Input bordered={false} />\n          </FormItem>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={12}>\n          <FormItem {...formItemLayout} label=\"報告輸入人員\">\n            <Input bordered={false} />\n          </FormItem>\n        </Col>\n        <Col span={12}>\n          <FormItem {...formItemLayout} label=\"報告複審人員\">\n            <Input bordered={false} />\n          </FormItem>\n        </Col>\n      </Row>\n      <Divider />\n      <Row className=\"mb-4\">\n        <Col span={24}>\n          <div className=\"text-center\">病解專醫字第000001號</div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n","import React from 'react'\nimport { ColumnProps } from 'antd/lib/table'\nimport { ModalProps } from 'antd/lib/modal'\nimport { flatten, pluck } from 'ramda'\nimport Modal from '@/components/modal'\nimport Table from '@/components/query-table'\nimport Button from '@/components/button'\nimport { usePhraseList } from '@/services/phrase'\nimport { PhraseTemplate, SnippetProps } from '@/constants/types'\nimport useTableRowSelection from '@/hooks/useTableRowSelection'\nconst { compose } = require('ramda')\n\ninterface Props extends Omit<ModalProps, 'onOk'> {\n  onOk: (values: SnippetProps[]) => void\n}\n\nexport default function PhraseListModal({ onOk, onCancel, ...props }: Props) {\n  const { data } = usePhraseList()\n\n  const { rowSelection, selectedRows } = useTableRowSelection()\n\n  const handleOk = () => {\n    onOk(compose(flatten, pluck('setting'))(selectedRows))\n    ;(onCancel as any)()\n  }\n\n  const columns: ColumnProps<PhraseTemplate>[] = [\n    {\n      title: '模版名稱',\n      dataIndex: 'name',\n    },\n    {\n      title: '創作者',\n      dataIndex: 'author',\n    },\n    {\n      title: '狀態',\n      dataIndex: 'statusName',\n    },\n    {\n      title: '創作時間',\n      dataIndex: 'createdAtStr',\n    },\n    {\n      title: '上次修改時間',\n      dataIndex: 'updatedAtStr',\n    },\n    {\n      title: '模版描述',\n      dataIndex: 'description',\n    },\n  ]\n\n  return (\n    <Modal\n      {...props}\n      visible\n      title=\"選擇片語模版\"\n      bodyStyle={{\n        paddingTop: 48,\n        paddingLeft: 64,\n        paddingRight: 64,\n      }}\n      width={800}\n      footer={[\n        <Button key=\"btn-cancel\" color=\"outline\" onClick={onCancel}>\n          取消\n        </Button>,\n        <Button\n          key=\"btn-ok\"\n          color=\"primary\"\n          onClick={handleOk}\n          className=\"ml-3\">\n          確認\n        </Button>,\n      ]}\n      onCancel={onCancel}\n      keyboard={false}\n      maskClosable={false}>\n      <Table\n        size=\"small\"\n        columns={columns}\n        dataSource={data}\n        rowSelection={rowSelection}\n      />\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { Row, Col, BackTop, Affix, Form, message, Tooltip } from 'antd'\nimport {\n  BulbOutlined,\n  LeftOutlined,\n  RightOutlined,\n  DoubleLeftOutlined,\n} from '@ant-design/icons'\nimport cx from 'classnames'\nimport {\n  map,\n  pathOr,\n  keys,\n  gt,\n  __,\n  length,\n  ifElse,\n  equals,\n  always,\n  filter,\n  values,\n  not,\n  replace,\n  split,\n  join,\n  includes,\n} from 'ramda'\nimport useTitle from '@/hooks/useTitle'\nimport useVisible from '@/hooks/useVisible'\nimport { useBreadcrumb, useHeaderContent } from '@/hooks/useApp'\nimport useAuth from '@/hooks/useAuth'\nimport {\n  useToggleReportPreview,\n  useSnippetCategoryOfReport,\n} from '@/data/useReportTemplate'\nimport { isNil, queryString, uuid } from '@/utils/webHelper'\nimport { ReportTemplate, SnippetProps } from '@/constants/types'\nimport { Page } from '@/components/layout'\nimport ReactDndProvider from '@/components/snippet-scrollable-container'\nimport SnippetsContainer from '@/components/snippets-container'\nimport Input from '@/components/input'\nimport Select from '@/components/select'\nimport Collapse from '@/components/collapse'\nimport SnippetListMenu from '@/components/snippet-list-menu'\nimport { renderSnippets } from '@/components/snippet-utils'\nimport Tabs from '@/components/draggable-tabs'\nimport {\n  useAllReportTemplates,\n  useReportTemplate,\n} from '@/services/reportTemplate'\nimport {\n  useReportItem,\n  useAddNewReport,\n  useUpdateReport,\n} from '@/services/report'\nimport { usePathology } from '@/services/pathology'\nimport history from '@/utils/history'\nimport { REPORT_EDIT } from '@/constants/routes'\nimport Pie from './pie'\nimport Header from './report-typing-header'\nimport ReportMedicalOrder from './report-typing-medical-order'\nimport ReportAffix from './report-typing-affix'\nimport ReportPreview from './report-typing-preview'\nimport PhraseListModal from './phrase-list-modal'\nconst { compose } = require('ramda')\n\nenum menuState {\n  VISIBLE_RIGHT = '1',\n  VISIBLE_LEFT = '2',\n}\n\ninterface Props extends RouteComponentProps<{ id: string }> {\n  id: any\n  reviewDoctor: string\n  serialNo: string\n}\n\nconst col = ifElse(equals(false), always(5), always(0))\n\nexport default function ReportTyping(props: Props) {\n  useTitle('輸入報告')\n\n  useBreadcrumb([{ name: '輸入報告' }, { name: '病理報告輸入' }])\n\n  useToggleReportPreview(true)\n\n  const { user } = useAuth()\n\n  const snippetCategoryOfReport = useSnippetCategoryOfReport()\n\n  React.useEffect(() => {\n    if (user.division !== 'PATH' && user.division !== 'RAD') {\n      handleExportable()\n    }\n  }, [user.division]) // eslint-disable-line\n\n  const [form] = Form.useForm()\n\n  const [reportTemplates] = useAllReportTemplates()\n\n  const [keyword, setKeyword] = React.useState<string>()\n\n  const [exportable, handleExportable] = useVisible()\n\n  const [phraseListModalVisible, handlePhraseListModalVisible] = useVisible()\n\n  const { data /* isValidating */ } = usePathology()\n\n  const [visibleLayouts, setVisibleLayouts] = React.useState<string[]>([\n    menuState.VISIBLE_LEFT,\n    menuState.VISIBLE_RIGHT,\n  ])\n\n  // 沒有 QS 代表是編輯，會有 params.id 要用 useReportItem 取得報告資料後，\n  // 再餵進去 useReportTemplate 作編輯\n  const { params } = props.match\n\n  // 有 QS 代表新增，會沒有 params.id，此時的資料要用 reportTemplate\n  const qs = queryString(props.location.search)\n\n  // 只有新增時有 QS 才會有\n  const [templateId, setCurrentTemplateId] = React.useState(qs.templateId)\n\n  React.useEffect(() => {\n    setCurrentTemplateId(qs.templateId)\n  }, [qs.templateId])\n\n  const item = useReportItem(params.id)\n\n  const {\n    total,\n    category,\n    reportTemplate,\n    snippetList,\n    handleTabEdit,\n    handleTabChange,\n    handleTabMove,\n    handleTabNameChange,\n    handleSnippetUpdate,\n  } = useReportTemplate({\n    id: templateId,\n    data: item,\n  })\n\n  React.useEffect(() => {\n    const handleKeyPress = (evt: KeyboardEvent) => {\n      // ctrl + s\n      if (evt.ctrlKey && evt.keyCode === 83) {\n        handleOk()\n      }\n      // f9\n      if (!evt.ctrlKey && evt.keyCode === 120) {\n        handlePhraseListModalVisible()\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyPress)\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress)\n    }\n  }, []) // eslint-disable-line\n\n  React.useEffect(() => {\n    form.setFieldsValue(reportTemplate)\n  }, [JSON.stringify(reportTemplate)]) // eslint-disable-line\n\n  React.useEffect(() => {\n    if (qs.reviewDoctor) {\n      form.setFieldsValue({ reviewDoctor: qs.reviewDoctor })\n    }\n    if (qs.serialNo) {\n      form.setFieldsValue({ serialNo: qs.serialNo })\n    }\n  }, [JSON.stringify(qs)]) // eslint-disable-line\n\n  const handleLayoutChange = (value: string) => () => {\n    setVisibleLayouts((prev: string[]) =>\n      prev.includes(value) ? prev.filter(x => x !== value) : [...prev, value]\n    )\n  }\n\n  const leftContentVisible = visibleLayouts.includes(menuState.VISIBLE_LEFT)\n  const rightContentVisible = visibleLayouts.includes(menuState.VISIBLE_RIGHT)\n\n  const [, handleAdd] = useAddNewReport({\n    onCompleted: ({ id }: any) => {\n      history.push(replace(':id', id)(REPORT_EDIT))\n      message.success('報告資料已新增')\n    },\n  })\n\n  const [, handleUpdate] = useUpdateReport({\n    onCompleted: () => message.success('報告資料已儲存'),\n  })\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      let payload = {\n        ...values,\n        ...(params.id ? { id: params.id } : {}),\n        ...data,\n        setting: snippetList,\n      }\n\n      const handler = params.id ? handleUpdate : handleAdd\n\n      handler(payload)\n    })\n  }\n\n  useHeaderContent(\n    <Header\n      // leftContentVisible={leftContentVisible}\n      // rightContentVisible={rightContentVisible}\n      // onLayoutChange={handleLayoutChange}\n      data={reportTemplate}\n      isExport={exportable}\n      onToggleExport={handleExportable}\n      onOk={handleOk}\n    />\n  )\n\n  const handleReportSearch = (value: string) => {\n    setKeyword(value)\n  }\n\n  const handleReportChange = (value: string) => {\n    setCurrentTemplateId(value)\n  }\n\n  const [affixed, setIsAffixed] = React.useState<boolean | undefined>(false)\n\n  const [percentage, setPercentage] = React.useState(0)\n\n  const handleAffixChange = (affixed?: boolean) => {\n    setIsAffixed(affixed)\n  }\n\n  const handleAnchorClick = (\n    e: React.MouseEvent<HTMLElement>,\n    link: {\n      title: React.ReactNode\n      href: string\n    }\n  ) => {\n    e.preventDefault()\n\n    const [tab, href] = compose(\n      ([tab, ...rest]: string[]) => [tab, join('-')(rest)],\n      split('-'),\n      pathOr('', ['href'])\n    )(link)\n\n    if (category !== 'overview') {\n      handleTabChange(tab)\n    }\n\n    if (!href) {\n      return\n    }\n\n    window.scroll({\n      behavior: 'smooth',\n      left: 0,\n      top: document.getElementById(href)?.offsetTop,\n    })\n  }\n\n  const handlePhraseAdd = (values: SnippetProps[]) => {\n    let newList = [\n      ...snippetList[category],\n      ...values.map(x => ({\n        ...x,\n        fromMenu: false,\n        id: `${x.id}__${uuid()}`,\n      })),\n    ]\n\n    handleSnippetUpdate(newList)\n  }\n\n  const handleValuesChange = React.useCallback(\n    (_: any, { data }: { data: { [key: string]: any } }) => {\n      setPercentage(\n        Math.round(\n          (compose(length, filter(compose(not, isNil)), values)(data) / total) *\n            100\n        )\n      )\n    },\n    [total]\n  )\n\n  React.useEffect(() => {\n    handleValuesChange(null, form.getFieldsValue())\n  }, [total]) // eslint-disable-line\n\n  const renderCategory = (category: string) => {\n    return compose(gt(__, 0), length, pathOr([], [category]))(snippetList) ? (\n      <h2 id={category} className=\"my-2\">\n        {category}\n      </h2>\n    ) : null\n  }\n\n  const colSpan = 14 + col(leftContentVisible) + col(rightContentVisible)\n\n  const filterReportTemplates: ReportTemplate[] = React.useMemo(\n    () =>\n      ifElse(isNil, always(reportTemplates), val =>\n        filter((x: ReportTemplate) =>\n          compose(includes(val), pathOr('', ['name']))(x)\n        )(reportTemplates)\n      )(keyword),\n    [keyword] // eslint-disable-line\n  )\n\n  const { reviewDoctor } = props\n\n  return (\n    <ReactDndProvider className=\"is--preview\">\n      {phraseListModalVisible && (\n        <PhraseListModal\n          onOk={handlePhraseAdd}\n          onCancel={handlePhraseListModalVisible}\n        />\n      )}\n      <BackTop />\n      <Page>\n        <Form\n          form={form}\n          labelAlign={exportable ? 'left' : 'right'}\n          className=\"relative\"\n          onValuesChange={handleValuesChange}>\n          {!leftContentVisible && (\n            <Tooltip title=\"展開報告內容\">\n              <div\n                className=\"absolute z-10 bg-secondary text-white rounded-tr-md rounded-br-md flex items-center justify-center cursor-pointer py-2 pl-1\"\n                css={{ left: -40, top: 7 }}\n                onClick={handleLayoutChange(menuState.VISIBLE_LEFT)}>\n                <RightOutlined className=\"text-xl\" />\n              </div>\n            </Tooltip>\n          )}\n          <Row gutter={16}>\n            {leftContentVisible && (\n              <Col span={5}>\n                <Collapse\n                  defaultActiveKey={[1, 2]}\n                  expandIcon={() => null}\n                  className=\"shadow-2xl\">\n                  <Collapse.Panel\n                    header={\n                      <div className=\"text-center relative\">\n                        報告內容\n                        <Tooltip title=\"收合報告內容\">\n                          <DoubleLeftOutlined\n                            className=\"absolute cursor-pointer\"\n                            style={{ top: 5, right: 0 }}\n                            onClick={handleLayoutChange(menuState.VISIBLE_LEFT)}\n                          />\n                        </Tooltip>\n                      </div>\n                    }\n                    key={1}>\n                    <Row className=\"mb-2 text-sm text-darkGrey\">\n                      <Col span={24} className=\"mb-3\">\n                        <div className=\"inline-block\" css={{ width: 65 }}>\n                          判讀醫師\n                        </div>\n                        <Form.Item noStyle name=\"reviewDoctor\">\n                          <Input className=\"w-2/3\" bordered={false} />\n                        </Form.Item>\n                      </Col>\n                      <Col span={24} className=\"my-3\">\n                        <div className=\"inline-block\" css={{ width: 65 }}>\n                          申請序號\n                        </div>\n                        <Form.Item noStyle name=\"serialNo\">\n                          <Input className=\"w-2/3\" bordered={false} />\n                        </Form.Item>\n                      </Col>\n                      <Col span={24} className=\"my-3\">\n                        <div className=\"inline-block\" css={{ width: 65 }}>\n                          報告格式\n                        </div>\n                        <Select\n                          showSearch\n                          className=\"w-2/3\"\n                          bordered={false}\n                          filterOption={false}\n                          value={templateId}\n                          onSearch={handleReportSearch}\n                          onChange={handleReportChange}>\n                          {filterReportTemplates.map(x => (\n                            <Select.Option key={x.id} value={x.id}>\n                              {x.name}\n                            </Select.Option>\n                          ))}\n                        </Select>\n                      </Col>\n                      {category === 'overview' && (\n                        <Col span={24} className=\"mt-3\">\n                          <ReportAffix\n                            affixed={affixed}\n                            onClick={handleAnchorClick}\n                            onChange={handleAffixChange}\n                            snippetList={snippetList}\n                          />\n                        </Col>\n                      )}\n                    </Row>\n                  </Collapse.Panel>\n                  <Collapse.Panel\n                    header={<div className=\"text-center\">模版工具</div>}\n                    key={2}>\n                    <Row>\n                      <Col span={24}>\n                        <SnippetListMenu />\n                        <div\n                          className=\"flex items-center mt-2 cursor-pointer\"\n                          onClick={handlePhraseListModalVisible}>\n                          <BulbOutlined className=\"mr-2\" />\n                          Phrase\n                        </div>\n                      </Col>\n                    </Row>\n                  </Collapse.Panel>\n                </Collapse>\n              </Col>\n            )}\n\n            <Col span={colSpan}>\n              {!exportable && (\n                <>\n                  <div className=\"pt-2 bg-white rounded-lg shadow-2xl\">\n                    <Affix offsetTop={0}>\n                      <div\n                        className={cx(\n                          'px-4 mb-4 -mt-2',\n                          'flex items-center justify-between',\n                          'rounded-lg shadow-sm',\n                          'text-xl text-darkGrey font-medium'\n                        )}\n                        css={{ background: '#fff' }}>\n                        <div>\n                          {user.division === 'PATH'\n                            ? 'Pathological'\n                            : 'Radiological'}{' '}\n                          Image Report\n                          <div className=\"text-base text-gray-600\"></div>\n                        </div>\n                        <Pie\n                          percent={percentage}\n                          total={`${percentage}%`}\n                          style={{ width: 70, paddingTop: 6 }}\n                          height={80}\n                        />\n                      </div>\n                    </Affix>\n                  </div>\n                  <div className=\"rounded-lg shadow-2xl\">\n                    <Tabs\n                      type=\"editable-card\"\n                      activeKey={category}\n                      onChange={handleTabChange}\n                      onEdit={handleTabEdit}\n                      tabBarGutter={8}\n                      moveTabNode={handleTabMove}\n                      className=\"flex-1\">\n                      {compose(\n                        map((category: string) => (\n                          <Tabs.TabPane\n                            closable\n                            key={category}\n                            tab={\n                              <span\n                                contentEditable\n                                suppressContentEditableWarning\n                                spellCheck={false}\n                                className=\"outline-none\"\n                                css={{ whiteSpace: 'nowrap' }}\n                                onChange={handleTabNameChange(category)}>\n                                {category}\n                              </span>\n                            }>\n                            <Col\n                              span={24}\n                              className=\"p-4 report-template-builder__main-content\">\n                              {category ===\n                                snippetCategoryOfReport.PATHOLOGICAL_DIAGNOSIS && (\n                                <div\n                                  className=\"mb-4 px-1\"\n                                  dangerouslySetInnerHTML={{\n                                    __html: data?.ORWORD,\n                                  }}\n                                />\n                              )}\n                              <SnippetsContainer\n                                // draggable={!isPreview}\n                                draggable\n                                snippetList={snippetList[category]}\n                                onSnippetUpdate={handleSnippetUpdate}\n                              />\n                            </Col>\n                          </Tabs.TabPane>\n                        )),\n                        keys\n                      )(snippetList)}\n                      <Tabs.TabPane key=\"overview\" tab=\"Overview\">\n                        {compose(\n                          map((category: string) => (\n                            <div key={category} className=\"px-3 bg-white\">\n                              {renderCategory(category)}\n                              {compose(\n                                renderSnippets({ className: 'mb-0' }),\n                                pathOr([], [category])\n                              )(snippetList)}\n                            </div>\n                          )),\n                          keys\n                        )(snippetList)}\n                      </Tabs.TabPane>\n                    </Tabs>\n                  </div>\n                </>\n              )}\n              {exportable && (\n                <div className=\"rounded-log shadow-2x bg-white p-3 px-5\">\n                  <div id=\"editor\" />\n                  <ReportPreview\n                    data={{\n                      template: reportTemplate,\n                      medical: data,\n                      snippetList,\n                    }}\n                  />\n                </div>\n              )}\n            </Col>\n\n            {rightContentVisible && (\n              <Col span={5}>\n                <ReportMedicalOrder\n                  data={data}\n                  reviewDoctor={reviewDoctor}\n                  onToggle={handleLayoutChange(menuState.VISIBLE_RIGHT)}\n                />\n              </Col>\n            )}\n          </Row>\n          {!rightContentVisible && (\n            <Tooltip title=\"展開醫囑內容\">\n              <div\n                className=\"absolute z-10 bg-secondary text-white rounded-tl-md rounded-bl-md flex items-center justify-center cursor-pointer py-2 pr-1\"\n                css={{ right: -49, top: 7 }}\n                onClick={handleLayoutChange(menuState.VISIBLE_RIGHT)}>\n                <LeftOutlined className=\"text-xl\" />\n              </div>\n            </Tooltip>\n          )}\n        </Form>\n      </Page>\n    </ReactDndProvider>\n  )\n}\n","import ReportTyping from './report-typing'\n\nexport default ReportTyping\n// import React from 'react'\n\n// export default React.lazy(() => import('../report-typing/report-typing'))\n","import React from 'react'\n\nexport default React.lazy(() => import('./report-list'))\n","import React from 'react'\n\nexport default React.lazy(() => import('./radiol-report-list'))\n","import React from 'react'\n\nexport default React.lazy(() => import('./yellow-card-inquiry'))\n","import React from 'react'\n\nexport default React.lazy(() => import('./blood-bank-review'))\n","import React from 'react'\n\nexport default React.lazy(() => import('./medical-order'))\n","import React from 'react'\n\nexport default React.lazy(() => import('./phrase-list'))\n\nexport const PhraseList = React.lazy(() => import('./phrase-list'))\n\nexport const PhraseEdit = React.lazy(() => import('./phrase-edit'))\n","import React from 'react'\n\nexport default React.lazy(() => import('./report-version-comparison'))\n","import React from 'react'\n\nexport default React.lazy(() => import('./image-scheduler'))\n","import ReportTemplateBuilder from '@/containers/report-template-editor'\nimport ReportTemplateList from '@/containers/report-template-list'\nimport ReportInquiry from '@/containers/report-inquiry'\nimport ReportTyping from '@/containers/report-typing'\n// import PatholImagesViewer from '@/containers/pathol-images-viewer'\n// import RadiolImagesViewer from '@/containers/radiol-images-viewer'\nimport ReportList from '@/containers/report-list'\nimport RadiolReportList from '@/containers/radiol-report-list'\nimport YellowCardInquiry from '@/containers/yellow-card-inquiry'\nimport BloodBankReview from '@/containers/blood-bank-review'\nimport MedicalOrder from '@/containers/medical-order'\nimport { PhraseList, PhraseEdit } from '@/containers/phrase-list'\nimport ReportVersionComparison from '@/containers/report-version-comparison'\nimport ImageScheduler from '@/containers/image-scheduler'\nimport useAuth from '@/hooks/useAuth'\n\nexport type RouteItem = {\n  id: number\n  title: string\n  path: string\n  component: typeof React.Component\n  icon?: React.FunctionComponent\n  disabled?: boolean\n  param?: string\n  children?: RouteItem[]\n  hide?: RouteItem[]\n}\n\nexport type Route = RouteItem & {\n  children: Array<RouteItem>\n  hide: Array<RouteItem>\n  disabled: boolean\n}\n\nexport const PATHOL_IMAGE = '/pathol-images/:studyInstanceUIDs'\nexport const RADIOL_IMAGE = '/radiol-images/:studyInstanceUIDs'\nexport const REPORT_TEMPLATE_LIST = '/report-templates'\nexport const REPORT_INPUT = '/report-input'\nexport const REPORT_EDIT = `${REPORT_INPUT}/:id`\nexport const REPORT_TEMPLATE_EDIT = `${REPORT_TEMPLATE_LIST}/:id`\nexport const REPORT_TEMPLATE_CREATE = `${REPORT_TEMPLATE_LIST}/create`\nexport const REPORT_INQUIRY = '/report-inquiry'\nexport const REPORT_VERSION_COMPARISON = '/report-version-comparison'\nexport const REPORT_LIST = '/report-list'\nexport const RADIOL_REPORT_LIST = '/radiol-report-list'\nexport const PHRASE_LIST = '/phrase-list'\nexport const PHRASE_CREATE = '/phrase-list/create'\nexport const PHRASE_EDIT = `${PHRASE_LIST}/:id`\nexport const BLOOD_BANK_REVIEW = '/blood-bank-review'\nexport const YELLOW_CARD_INQUIRY = '/yellow-card-inquiry'\nexport const MEDICAL_ORDER = '/medical-order/:id'\nexport const IMAGE_SCHEDULER = '/image-scheduler'\n\nexport function useRoutes() {\n  const { user } = useAuth()\n\n  return [\n    // {\n    //   id: 1,\n    //   title: '病理影像',\n    //   path: PATHOL_IMAGE,\n    //   component: PatholImagesViewer,\n    // },\n    // {\n    //   id: 2,\n    //   title: '放射影像',\n    //   path: RADIOL_IMAGE,\n    //   component: RadiolImagesViewer,\n    // },\n\n    ...(user.division === 'PATH'\n      ? [\n          {\n            id: 666,\n            title: '影像排班',\n            path: IMAGE_SCHEDULER,\n            component: ImageScheduler,\n          },\n        ]\n      : []),\n    ...(user.division !== 'RAD'\n      ? [\n          {\n            id: 999,\n            title: '報告查詢',\n            path: REPORT_LIST,\n            component: ReportList,\n          },\n        ]\n      : []),\n    ...(user.division !== 'PATH'\n      ? [\n          {\n            id: 99999,\n            title: '報告查詢',\n            path: RADIOL_REPORT_LIST,\n            component: RadiolReportList,\n          },\n        ]\n      : []),\n    {\n      id: 3,\n      title: '輸入報告',\n      path: REPORT_INQUIRY,\n      component: ReportInquiry,\n    },\n    {\n      id: 15,\n      title: '輸入報告',\n      path: REPORT_EDIT,\n      component: ReportTyping,\n    },\n    {\n      id: 10,\n      title: '輸入報告',\n      path: REPORT_INPUT,\n      component: ReportTyping,\n    },\n    {\n      id: 87878,\n      title: '版本比較',\n      path: REPORT_VERSION_COMPARISON,\n      component: ReportVersionComparison,\n    },\n    {\n      id: 87,\n      title: '黃卡新檢索',\n      path: YELLOW_CARD_INQUIRY,\n      component: YellowCardInquiry,\n    },\n    {\n      id: 88,\n      title: '血庫備血審查作業',\n      path: BLOOD_BANK_REVIEW,\n      component: BloodBankReview,\n    },\n    {\n      id: 89,\n      title: '醫囑內容',\n      path: MEDICAL_ORDER,\n      component: MedicalOrder,\n    },\n    {\n      id: 90,\n      title: '片語模版',\n      path: 'phrase',\n      children: [\n        {\n          id: 93,\n          title: '片語模版清單',\n          path: PHRASE_LIST,\n          component: PhraseList,\n        },\n        {\n          id: 94,\n          title: '片語模版編輯',\n          path: PHRASE_CREATE,\n          component: PhraseEdit,\n        },\n        {\n          id: 95,\n          title: '片語模版編輯',\n          path: PHRASE_EDIT,\n          component: PhraseEdit,\n        },\n      ],\n    },\n    {\n      id: 4,\n      title: '結構式報告模版',\n      path: 'report-template',\n      children: [\n        {\n          id: 5,\n          title: '報告模版清單',\n          path: REPORT_TEMPLATE_LIST,\n          component: ReportTemplateList,\n        },\n        {\n          id: 6,\n          title: '報告模版新增',\n          path: REPORT_TEMPLATE_CREATE,\n          component: ReportTemplateBuilder,\n        },\n        {\n          id: 7,\n          title: '報告模版編輯',\n          path: REPORT_TEMPLATE_EDIT,\n          component: ReportTemplateBuilder,\n        },\n      ],\n    },\n  ]\n}\n\nexport default useRoutes\n","import React from 'react'\nimport { Layout } from 'antd'\n\nexport default function AppFooter() {\n  return (\n    <Layout.Footer\n      className=\"pb-6 text-center text-gray-600 border-t border-gray-400\"\n      style={{ background: 'rgb(221, 228, 237)' }}>\n      2020 高雄榮總數位病理平台\n    </Layout.Footer>\n  )\n}\n","const primary = '#38a8a9'\n\nmodule.exports = {\n  primary,\n  secondary: '#42c2b8',\n  danger: '#d74c4c',\n  darkGrey: '#4a4a4a',\n  purple150: 'rgba(115, 105, 215, 0.15)',\n  cornblue: '#a9b6d8',\n  comet: '#555977',\n  btn: {\n    danger: '#d74c4c',\n    primary: '#2c908a',\n    secondary: '#42c2b8',\n  },\n  sider: {\n    bg: primary,\n  },\n  login: {\n    cyan: 'rgba(5,124,147,1)',\n  },\n  pagination: primary,\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { Button } from 'antd'\nimport { ButtonProps } from 'antd/lib/button'\nimport { ActionTypes } from '@/constants/enums'\n// import useRouteCRUDAuthCheck from 'shared/hooks/useRouteCRUDAuthCheck'\n// import * as Icons from 'shared/components/Icons'\n\ninterface Props extends Omit<ButtonProps, 'icon'> {\n  children?: React.ReactNode\n  circle?: boolean\n  color?: string\n  css?: React.CSSProperties\n  icon?: string | React.ReactNode\n  onClick?: (evt: React.MouseEvent<HTMLElement>) => any\n  actionType?: ActionTypes\n}\n\nconst StyledButton = styled(Button)<Props>`\n  &.ant-btn {\n    min-width: 80px;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 4px;\n\n    .anticon {\n      margin-right: 6px;\n    }\n\n    &.ant-btn-loading {\n      padding-left: 8px;\n    }\n\n    .ant-btn > .ant-btn-loading-icon .anticon {\n      padding-right: 0;\n    }\n\n    svg {\n      width: 20px;\n      height: 20px;\n    }\n\n    &.ant-btn-sm svg {\n      width: 16px;\n      height: 16px;\n    }\n\n    ${p =>\n      p.color === 'primary' &&\n      css`\n        color: #fff;\n        border-color: ${p => p.theme.btn.primary};\n        background: ${p => p.theme.btn.primary};\n\n        &:hover,\n        &:focus,\n        &:active {\n          color: #fff;\n          background: ${p => p.theme.btn.secondary};\n          border-color: ${p => p.theme.btn.secondary};\n        }\n      `};\n\n    ${p =>\n      p.color === 'outline' &&\n      css`\n        padding: 0 8px;\n        color: ${p => p.theme.btn.primary};\n        border: 1.3px solid ${p => p.theme.btn.primary};\n        background: transparent;\n\n        &:hover,\n        &:focus,\n        &:active {\n          color: ${p => p.theme.primary};\n          background: transparent;\n          border: 1.3px solid ${p => p.theme.btn.primary};\n        }\n      `};\n\n    ${p =>\n      p.color === 'danger' &&\n      css`\n        color: ${p => p.theme.btn.danger};\n        border: 1.3px solid ${p => p.theme.btn.danger};\n        background: #fff;\n\n        &:hover,\n        &:focus,\n        &:active {\n          color: ${p => p.theme.btn.danger};\n          background: #fff6e4;\n          border: 1.3px solid ${p => p.theme.btn.danger};\n        }\n      `};\n\n    ${p =>\n      p.type === 'link' &&\n      css`\n        min-width: auto;\n        padding-left: 0;\n        padding-right: 0;\n        background: transparent;\n        border-color: transparent;\n        color: ${p.theme.primary};\n\n        > span {\n          text-decoration: underline;\n        }\n\n        &:hover {\n          background: transparent;\n          border-color: transparent;\n        }\n      `};\n\n    ${p =>\n      p.size === 'small' &&\n      css`\n        line-height: 1.2;\n      `}\n\n    &.hover--none {\n      &:hover,\n      &:focus,\n      &:active {\n        color: initial;\n        background: initial;\n        border-color: initial;\n      }\n    }\n  }\n\n  &.ant-btn.ant-btn-loading:not(.ant-btn-circle):not(.ant-btn-circle-outline):not(.ant-btn-icon-only) {\n    padding-left: 20px;\n  }\n\n  &.ant-btn[disabled] {\n    svg > g path:nth-child(2) {\n      transition: fill 0.4s ease;\n      fill: darkgrey;\n    }\n  }\n`\n\nexport { StyledButton as Butotn }\n\nexport default function ButtonComponent({\n  // icon,\n  children,\n  loading,\n  actionType,\n  ...props\n}: Props) {\n  // const [, checkIsAuthenticated] = useRouteCRUDAuthCheck()\n\n  // if (actionType && !checkIsAuthenticated(actionType)) {\n  //   return null\n  // }\n\n  return (\n    <StyledButton {...props} loading={loading}>\n      {(() => {\n        // if (icon && !loading) {\n        //   let Icon\n\n        //   const isElement = React.isValidElement(icon)\n\n        //   if (!isElement) {\n        //     Icon = icon\n        //   }\n\n        //   if (typeof icon === 'string') {\n        //     const nameCapitalized = icon.charAt(0).toUpperCase() + icon.slice(1)\n        //     const iconName = 'Icon' + nameCapitalized\n        //     Icon = (Icons as any)[iconName]\n        //   }\n\n        //   return (\n        //     <div className=\"l-flex--center\">\n        //       {isElement ? icon : <Icon className=\"c-icon is--secondary\" />}\n        //       {children}\n        //     </div>\n        //   )\n        // }\n\n        return children\n      })()}\n    </StyledButton>\n  )\n}\n","class EnvStore {\n  pageSize = 10\n  apiBaseUrl =\n    process.env.REACT_APP_API_ROOT ||\n    'https://cors-anywhere.herokuapp.com/http://18.181.199.235:8080/kmedical'\n\n  get isEnvDev(): boolean {\n    return process.env.NODE_ENV === 'development'\n  }\n  get appBaseName(): string {\n    return process.env.REACT_APP_BASE_NAME || ''\n  }\n  get appTitle(): string {\n    return `%s | ${\n      process.env.REACT_APP_TITLE || '高雄榮民總醫院 數位病理平台'\n    }`\n  }\n  get appUrl(): string {\n    return `${window.location.protocol}//${window.location.host}${this.appBaseName}/#/`\n  }\n  get appBaseUrl(): string {\n    return `/#/${this.appBaseName}`\n  }\n  get fakeApiBaseUrl(): string {\n    return (\n      process.env.REACT_APP_FAKE_API_ROOT ||\n      (this.isEnvDev ? 'http://localhost:3004' : 'http://localhost:3004')\n    )\n  }\n  get publicUrl(): string {\n    return process.env.PUBLIC_URL || ''\n  }\n  get viewerUrl(): string {\n    return (\n      process.env.REACT_APP_VIEWER_URL ||\n      'https://fhir-mcode.vghks.gov.tw/PathViewer/demo/index.html'\n    )\n  }\n  get canUseDOM(): boolean {\n    return !!(\n      typeof window !== 'undefined' &&\n      window.document &&\n      window.document.createElement\n    )\n  }\n  set setPageSize(pageSize: number | undefined) {\n    this.pageSize = pageSize || 50\n  }\n  set setApiBaseUrl(url: string) {\n    this.apiBaseUrl = url\n  }\n}\n\nexport const envStore = new EnvStore()\n\nexport function isMobile() {\n  let check = false\n  ;(function (a) {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\n        a\n      ) ||\n      // eslint-disable-next-line no-useless-escape\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n        a.substr(0, 4)\n      )\n    )\n      check = true\n  })(navigator.userAgent || navigator.vendor || (window as any).opera)\n  return check\n}\n\nexport default envStore\n","import { ReactText } from 'react'\n\nexport const createFormItemLayout = (label: number = 3, wrapper?: number) => ({\n  labelCol: {\n    xs: { span: label },\n    sm: { span: label },\n  },\n  wrapperCol: {\n    xs: { span: wrapper || 24 - label },\n    sm: { span: wrapper || 24 - label },\n  },\n})\n\nexport const thosandSeprartor = {\n  formatter: (value: number | string | undefined) => {\n    if (!value) {\n      return value as string\n    }\n    return `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n  },\n  parser: (value: string | undefined) =>\n    (value ? value.replace(/\\$\\s?|(,*)/g, '') : value) as ReactText,\n}\n\nexport const currency = {\n  formatter: (value: number | string | undefined) => {\n    if (!value) {\n      return value as string\n    }\n    return `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n  },\n  parser: (value: string | undefined) =>\n    (value ? value.replace(/\\$\\s?|(,*)/g, '') : value) as ReactText,\n}\n\nexport const percent = {\n  // min: 0,\n  max: 100,\n  formatter: (value: number | string | undefined) => {\n    if (!value) {\n      return value as string\n    }\n    return `${value}%`\n  },\n  parser: (value: string | undefined) =>\n    (value ? value.replace('%', '') : value) as ReactText,\n}\n\nexport const rules = {\n  required: { required: true, message: '此欄位必填' },\n  number: {\n    required: false,\n    type: 'number',\n    message: '請填寫數字',\n    transform(value: any) {\n      if (!value) {\n        return value\n      }\n      return Number(value)\n    },\n  },\n  account: {\n    required: true,\n    message: '欄位長度為8~128字元,特殊符號-,_',\n    pattern: new RegExp(/^.{8,128}$/),\n  },\n  password: {\n    required: true,\n    message: '密碼長度為6~128字元',\n    pattern: new RegExp(/^.{6,128}$/),\n  },\n}\n","import React from 'react'\nimport store from 'store'\nimport moment from 'moment'\nimport {\n  update,\n  mergeAll,\n  map,\n  last as Rlast,\n  filter,\n  omit,\n  keys,\n  sort,\n  inc,\n  pathOr,\n  length,\n} from 'ramda'\nimport {\n  Mutation,\n  MutationOptions,\n  SnippetProps,\n  ReportTemplate,\n  ReportTemplateSetting,\n} from '@/constants/types'\nimport {\n  useReportTemplate as useReportTemplateItem,\n  useReportTemplateState,\n  useCurrentCategoryOfSnippet,\n} from '@/data/useReportTemplate'\nimport { uuid, getNumberFromString, downloadAsJson } from '@/utils/webHelper'\nimport { confirm } from '@/utils/message'\nconst { compose, mergeDeepRight } = require('ramda')\n\nexport function useUpdateSnippet<T = ReportTemplateSetting>(options: {\n  item: SnippetProps\n  onUpdate: (data: any) => void\n  defaultValue?: any\n}) {\n  const { item, onUpdate, defaultValue = {} } = options\n\n  const [setting, setSetting] = React.useState<T>(\n    pathOr(defaultValue, ['setting'], item) as T\n  )\n\n  const handleOk = (values: T) => {\n    const newSetting = mergeDeepRight(setting, values)\n    setSetting(newSetting)\n    onUpdate({ ...item, setting: newSetting })\n  }\n\n  return { setting, handleOk }\n}\n\nexport const useReportTemplates = () => {\n  const [reportTemplates] = useReportTemplateState()\n\n  return {\n    refetch: () => ({}),\n    data: {\n      content: reportTemplates,\n      total: length(reportTemplates),\n      totalPages: Math.floor(length(reportTemplates) / 10) + 1,\n    },\n    loading: false,\n  }\n}\n\nexport const useAllReportTemplates = () => {\n  return useReportTemplateState()\n}\n\nexport const useReportTemplate = (options: { id?: React.Key; data?: any }) => {\n  const { setSnippetList, snippetList, ...rest } = useReportTemplateItem(\n    options\n  )\n\n  const [category, setCategory] = useCurrentCategoryOfSnippet()\n\n  const handleSnippetUpdate = (data: any[]) => {\n    setSnippetList(prev => ({ ...prev, [category]: data }))\n  }\n\n  const handleTabChange = (activeKey: string) => {\n    setCategory(activeKey)\n  }\n\n  const handleTabMove = (order: string[]) => {\n    const snippetKeys = keys(snippetList)\n\n    setSnippetList(\n      compose(\n        mergeAll,\n        map((key: string) => ({ [key]: snippetList[key] })),\n        sort((a: string, b: string) => {\n          const orderA = order.indexOf(a)\n          const orderB = order.indexOf(b)\n\n          if (orderA !== -1 && orderB !== -1) {\n            return orderA - orderB\n          }\n          if (orderA !== -1) {\n            return -1\n          }\n          if (orderB !== -1) {\n            return 1\n          }\n\n          const ia = snippetKeys.indexOf(a)\n          const ib = snippetKeys.indexOf(b)\n\n          return ia - ib\n        }),\n        keys\n      )(snippetList)\n    )\n  }\n\n  const handleTabAdd = () => {\n    const last = compose(\n      inc,\n      pathOr(0, []),\n      getNumberFromString,\n      Rlast,\n      sort((a: any, b: any) => a - b),\n      keys\n    )(snippetList)\n\n    setSnippetList(prev => ({ ...prev, [`新標籤頁${last}`]: [] }))\n    setCategory(`新標籤頁${last}`)\n  }\n\n  const handleTabRemove = (targetKey: string) => {\n    confirm({\n      title: '確認要刪除此頁籤嗎？',\n      content: '刪除會連同模版資料一起刪除，確認繼續？',\n      onOk: () => {\n        setSnippetList(prev => omit([targetKey], prev))\n\n        if (category === targetKey) {\n          setCategory(\n            compose(\n              Rlast,\n              filter((key: string) => key !== targetKey),\n              keys\n            )(snippetList)\n          )\n        }\n      },\n    })\n  }\n\n  const handleTabNameChange = (targetKey: string) => (\n    evt: React.FocusEvent<HTMLSpanElement>\n  ) => {\n    const newTabName = evt.target.innerHTML\n\n    setSnippetList(prev =>\n      compose(\n        mergeAll,\n        map((key: string) => ({\n          [key === targetKey ? newTabName : key]: prev[key],\n        })),\n        keys\n      )(prev)\n    )\n    setCategory(newTabName)\n  }\n\n  const handleTabEdit = (\n    e:\n      | string\n      | React.MouseEvent<Element, MouseEvent>\n      | React.KeyboardEvent<Element>,\n    action: 'add' | 'remove'\n  ) => {\n    const handler = action === 'add' ? handleTabAdd : handleTabRemove\n\n    handler(e as string)\n  }\n\n  return {\n    ...rest,\n    category,\n    snippetList,\n    setCategory,\n    setSnippetList,\n    handleTabEdit,\n    handleTabChange,\n    handleTabMove,\n    handleTabAdd,\n    handleTabRemove,\n    handleTabNameChange,\n    handleSnippetUpdate,\n  }\n}\n\nexport const useAddNewTemplate = ({ onCompleted }: MutationOptions = {}) => {\n  const [reportTemplates, setReportTemplates] = useReportTemplateState()\n\n  const handler = (values: ReportTemplate) => {\n    let id = uuid()\n    let newList = [\n      ...reportTemplates,\n      {\n        ...values,\n        id,\n        createdAt: moment(),\n        createdAtStr: moment().format('YYYY/MM/DD HH:mm'),\n        updatedAt: moment(),\n        updatedAtStr: moment().format('YYYY/MM/DD HH:mm'),\n      },\n    ]\n\n    setReportTemplates(newList)\n\n    store.set('reportTemplateListState', newList)\n\n    if (onCompleted) {\n      onCompleted({ ...values, id })\n    }\n  }\n\n  return [false, handler] as Mutation\n}\n\nexport const useUpdateTemplate = ({ onCompleted }: MutationOptions = {}) => {\n  const [reportTemplates, setReportTemplates] = useReportTemplateState()\n\n  const handler = (values: ReportTemplate) => {\n    let index = reportTemplates.findIndex(x => `${x.id}` === `${values.id}`)\n    let newList = update(\n      index,\n      {\n        ...values,\n        updatedAt: moment(),\n        updatedAtStr: moment().format('YYYY/MM/DD HH:mm'),\n      },\n      reportTemplates\n    )\n\n    setReportTemplates(newList)\n    store.set('reportTemplateListState', newList)\n\n    if (onCompleted) {\n      onCompleted()\n    }\n  }\n\n  return [false, handler] as Mutation\n}\n\nexport const useExportTemplate = ({\n  data,\n  filename,\n}: {\n  data: ReportTemplate\n  filename: string\n}) => {\n  const handleExport = () => {\n    downloadAsJson({\n      filename: `${filename}_${data?.name || ''}_${moment().format(\n        'YYYYMMDDHHmmss'\n      )}`,\n      json: data,\n    })\n  }\n\n  return handleExport\n}\n"],"sourceRoot":""}