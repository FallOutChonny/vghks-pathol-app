{"version":3,"sources":["components/query-table.tsx","containers/phrase-list/phrase-list.tsx"],"names":["QueryTable","columns","className","pageNum","dataSource","onChange","loading","rowSelection","pagination","props","paginationConfig","merge","current","pageSize","total","showSizeChanger","rowKey","content","PhraseList","useTitle","useBreadcrumb","name","data","useReportTemplates","handleTo","pathname","history","push","title","dataIndex","render","v","r","type","onClick","record","replace","id","routes","align","_","data-id","style","minHeight","justify","span","color"],"mappings":"8MAoBe,SAASA,EAAT,GAUD,IATZC,EASW,EATXA,QACAC,EAQW,EARXA,UAQW,IAPXC,eAOW,MAPD,EAOC,EANXC,EAMW,EANXA,WACAC,EAKW,EALXA,SAKW,IAJXC,eAIW,SAHXC,EAGW,EAHXA,aACAC,EAEW,EAFXA,WACGC,EACQ,+GAOLC,EAAmBC,YAAgBH,EAAY,CACnDI,QAAST,EACTU,SAAU,GACVC,MAAOV,EAAWU,MAClBC,iBAAiB,IAGnB,OACE,kBAAC,IAAD,eACEC,OAAO,KACPZ,WAAYA,EAAWa,QACvBhB,QAASA,EACTO,WAAYE,EACZL,SAnBsB,SAAC,GAAkD,IAAhDO,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,SAChCR,GACFA,EAAS,CAAEO,UAASC,cAkBpBN,aAAcA,EACdD,QAASA,EACTJ,UAAWA,GACPO,M,6QCvCK,SAASS,IACtBC,YAAS,8CAETC,YAAc,CAAC,CAAEC,KAAM,4BAAU,CAAEA,KAAM,8BAHN,IAK3BC,EAASC,cAATD,KAEFE,EAAW,SAACC,GAAD,OAAsB,WACrCC,IAAQC,KAAKF,KAOTxB,EAAyC,CAC7C,CACE2B,MAAO,2BACPC,UAAW,OACXC,OAAQ,SAACC,EAAGC,GAAJ,OACN,kBAAC,IAAD,CAAQC,KAAK,OAAOC,SATAC,EAS0BH,EATC,WACnDR,EAASY,YAAQ,MAAD,UAAWD,EAAOE,IAAzBD,CAA+BE,KAAxCd,MASOO,GAVgB,IAACI,IAcxB,CACEP,MAAO,qBACPC,UAAW,UAEb,CACED,MAAO,eACPC,UAAW,cAEb,CACED,MAAO,2BACPC,UAAW,gBAEb,CACED,MAAO,uCACPC,UAAW,gBAEb,CACED,MAAO,2BACPC,UAAW,eAEb,CACED,MAAO,UACPC,UAAW,SACXU,MAAO,SACPT,OAAQ,SAACU,EAAGR,GAAJ,OACN,oCACE,uBAASJ,MAAM,gBACb,kBAAC,IAAD,CACEa,UAAST,EAAEK,GACXnC,UAAU,uCAQtB,OACE,oCACE,kBAAC,IAAD,CAAMwC,MAAO,CAAEC,UAAW,wBACxB,uBAAKC,QAAQ,UACX,uBAAKC,KAAM,IACT,6BACE,yBAAK3C,UAAU,sCACb,kBAAC,IAAD,CAAQ4C,MAAM,WAAd,gBACA,kBAAC,IAAD,CACEA,MAAM,UACN5C,UAAU,OACVgC,QAASV,EAASc,MAHpB,kBAQJ,kBAAC,IAAD,CAAOtB,OAAO,KAAKf,QAASA,EAASG,WAAYkB","file":"static/js/12.9803a196.chunk.js","sourcesContent":["import React from 'react'\nimport { ColumnProps, TableProps, TablePaginationConfig } from 'antd/lib/table'\nimport { SpinProps } from 'antd/lib/spin'\nimport { merge } from 'ramda'\nimport { DataSource } from '@/constants/types'\nimport Table from '@/components/table'\n\ntype Props<T> = Omit<TableProps<T>, 'dataSource'> & {\n  columns: ColumnProps<T>[]\n  className?: string\n  pageNum?: number\n  dataSource: DataSource<T>\n  onChange?: (pagination: TablePaginationConfig) => any\n  loading?: boolean | SpinProps\n  rowSelection?: {\n    selectedRowKeys: any[]\n    onChange: (selectedRowKeys: any, selectedRows: any) => void\n  }\n}\n\nexport default function QueryTable<T>({\n  columns,\n  className,\n  pageNum = 1,\n  dataSource,\n  onChange,\n  loading = false,\n  rowSelection,\n  pagination,\n  ...props\n}: Props<T>) {\n  const handleTableChange = ({ current, pageSize }: TablePaginationConfig) => {\n    if (onChange) {\n      onChange({ current, pageSize })\n    }\n  }\n\n  const paginationConfig = merge<any, any>(pagination, {\n    current: pageNum,\n    pageSize: 10,\n    total: dataSource.total,\n    showSizeChanger: false,\n  }) as TablePaginationConfig\n\n  return (\n    <Table\n      rowKey=\"id\"\n      dataSource={dataSource.content}\n      columns={columns as any}\n      pagination={paginationConfig}\n      onChange={handleTableChange}\n      rowSelection={rowSelection}\n      loading={loading}\n      className={className}\n      {...props}\n    />\n  )\n}\n","import React from 'react'\nimport { replace } from 'ramda'\nimport { Row, Col, Tooltip } from 'antd'\nimport { ColumnProps } from 'antd/lib/table'\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons'\nimport { Page } from '@/components/layout'\nimport Button from '@/components/button'\nimport Table from '@/components/query-table'\nimport history from '@/utils/history'\nimport useTitle from '@/hooks/useTitle'\nimport { useReportTemplates } from '@/services/reportTemplate'\nimport { ReportTemplate } from '@/constants/types'\nimport { useBreadcrumb } from '@/hooks/useApp'\nimport * as routes from '@/constants/routes'\n\nexport default function PhraseList() {\n  useTitle('結構式報告模版')\n\n  useBreadcrumb([{ name: '報告模版' }, { name: '片語模版' }])\n\n  const { data } = useReportTemplates()\n\n  const handleTo = (pathname: string) => () => {\n    history.push(pathname)\n  }\n\n  const handleToEditPage = (record: ReportTemplate) => () => {\n    handleTo(replace(':id', `${record.id}`)(routes.PHRASE_EDIT))()\n  }\n\n  const columns: ColumnProps<ReportTemplate>[] = [\n    {\n      title: '模版名稱',\n      dataIndex: 'name',\n      render: (v, r) => (\n        <Button type=\"link\" onClick={handleToEditPage(r)}>\n          {v}\n        </Button>\n      ),\n    },\n    {\n      title: '創作者',\n      dataIndex: 'author',\n    },\n    {\n      title: '狀態',\n      dataIndex: 'statusName',\n    },\n    {\n      title: '創作時間',\n      dataIndex: 'createdAtStr',\n    },\n    {\n      title: '上次修改時間',\n      dataIndex: 'updatedAtStr',\n    },\n    {\n      title: '模版描述',\n      dataIndex: 'description',\n    },\n    {\n      title: 'actions',\n      dataIndex: 'delete',\n      align: 'center',\n      render: (_, r) => (\n        <>\n          <Tooltip title=\"刪除\">\n            <DeleteOutlined\n              data-id={r.id}\n              className=\"c-icon text-lg cursor-pointer\"\n            />\n          </Tooltip>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <>\n      <Page style={{ minHeight: 'calc(100vh - 203px)' }}>\n        <Row justify=\"center\">\n          <Col span={22}>\n            <div>\n              <div className=\"flex justify-end items-center mb-4\">\n                <Button color=\"outline\">匯入</Button>\n                <Button\n                  color=\"outline\"\n                  className=\"ml-4\"\n                  onClick={handleTo(routes.PHRASE_EDIT)}>\n                  新增\n                </Button>\n              </div>\n            </div>\n            <Table rowKey=\"id\" columns={columns} dataSource={data} />\n          </Col>\n        </Row>\n      </Page>\n    </>\n  )\n}\n"],"sourceRoot":""}