{"version":3,"sources":["containers/report-list/report-list.tsx","components/input.tsx","components/app-footer.tsx","components/datepicker.tsx","components/layout.tsx","hooks/useTitle.ts","components/select.tsx","components/table.tsx","components/query-table.tsx"],"names":["ReportList","useTitle","useBreadcrumb","name","useForm","form","style","height","justify","span","className","layout","hideRequiredMark","colon","gutter","Item","label","addonBefore","width","defaultValue","Option","value","allowClear","color","onClick","rowKey","dataSource","content","total","columns","title","dataIndex","render","_","__","idx","borderLess","css","p","theme","primary","StyledInput","styled","secondary","TextArea","AppFooter","Footer","background","RangePicker","StyledDatePicker","StyledTimePicker","DatePickerComponent","props","borderTopLeftRadius","borderTopRightRadius","Page","children","Content","cx","DEFAULT_USE_TITLE_OPTIONS","restoreOnUnmount","document","options","prevTitleRef","React","useRef","replace","envStore","appTitle","useEffect","current","_title","StyledSelect","SelectComponent","this","Component","displayName","StyledTable","pagination","TableComponent","editable","onAddRowClick","isRowDeletable","onDeleteRowClick","isCanEdit","_columns","useMemo","canEdit","placement","top","undefined","r","key","id","locale","emptyText","image","PRESENTED_IMAGE_SIMPLE","description","Column","QueryTable","pageNum","onChange","loading","rowSelection","paginationConfig","merge","pageSize","showSizeChanger"],"mappings":"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","file":"static/js/13.4c605d6b.chunk.js","sourcesContent":["import React from 'react'\nimport { Row, Col, Form } from 'antd'\nimport useTitle from '@/hooks/useTitle'\nimport { useBreadcrumb } from '@/hooks/useApp'\nimport { useReportTemplateState } from '@/hooks/useReportTemplate'\nimport Select from '@/components/select'\nimport Input from '@/components/input'\nimport { RangePicker } from '@/components/datepicker'\nimport { Page } from '@/components/layout'\nimport Table from '@/components/query-table'\nimport Button from '@/components/button'\n\nexport default function ReportList() {\n  useTitle('清單查詢')\n  useBreadcrumb([{ name: '清單查詢' }])\n\n  const [form] = Form.useForm()\n\n  const handleOk = () => {}\n\n  return (\n    <Page style={{ height: 'calc(100vh - 203px)' }}>\n      <Row justify=\"center\">\n        <Col span={20}>\n          <div className=\"bg-white p-12 mb-8 rounded-lg shadow-lg\">\n            <Form\n              form={form}\n              layout=\"vertical\"\n              hideRequiredMark={true}\n              colon={false}>\n              <Row gutter={12}>\n                <Col span={8}>\n                  <Form.Item label=\"病例號\" name=\"no\">\n                    <Input\n                      addonBefore={\n                        <Select style={{ width: 100 }} defaultValue=\"1\">\n                          <Select.Option value=\"1\">申請序號</Select.Option>\n                          <Select.Option value=\"2\">病理號</Select.Option>\n                          <Select.Option value=\"3\">病例號</Select.Option>\n                        </Select>\n                      }\n                    />\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item label=\"查詢類別\" name=\"doctor\">\n                    <Select allowClear>\n                      <Select.Option value={'醫囑'}>醫囑</Select.Option>\n                      <Select.Option value={'\b報告'}>\b報告</Select.Option>\n                    </Select>\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item label=\"簽收日期\" name=\"createAt\">\n                    <RangePicker className=\"w-full\" />\n                  </Form.Item>\n                </Col>\n              </Row>\n\n              <Row gutter={12}>\n                <Col span={8}>\n                  <Form.Item label=\"報告類別\" name=\"doctor\">\n                    <Select allowClear>\n                      <Select.Option value={'細胞學'}>細胞學</Select.Option>\n                      <Select.Option value={'切片'}>切片</Select.Option>\n                    </Select>\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item label=\"報告狀態\" name=\"state\">\n                    <Select allowClear>\n                      <Select.Option value={1}>未輸入</Select.Option>\n                      <Select.Option value={2}>複審</Select.Option>\n                      <Select.Option value={3}>暫存</Select.Option>\n                      <Select.Option value={4}>不確定</Select.Option>\n                      <Select.Option value={5}>正式</Select.Option>\n                      <Select.Option value={6}>全部</Select.Option>\n                    </Select>\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item label=\" \">\n                    <Button\n                      color=\"primary\"\n                      className=\"ml-3\"\n                      style={{ width: 120 }}\n                      onClick={handleOk}>\n                      確認\n                    </Button>\n                  </Form.Item>\n                </Col>\n              </Row>\n            </Form>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <Table\n            rowKey=\"id\"\n            dataSource={{ content: [], total: 0 }}\n            columns={[\n              {\n                title: '編號',\n                dataIndex: 'id',\n                render: (_, __, idx) => idx + 1,\n              },\n              { title: '申請序號', dataIndex: 'doctor' },\n              { title: '姓名', dataIndex: 'patient' },\n              { title: '病理號', dataIndex: 'registerNo' },\n              { title: '病例號', dataIndex: 'registerNo' },\n              { title: '病房', dataIndex: 'room' },\n              { title: '性別', dataIndex: 'body' },\n              { title: '簽收日期', dataIndex: 'checkDate' },\n              { title: '收費碼', dataIndex: 'createAt' },\n              { title: '科別', dataIndex: 'state' },\n              { title: '狀態', dataIndex: 'rosterDoctor' },\n              { title: '醫囑', dataIndex: 'rosterCategory' },\n              { title: '報告', dataIndex: 'x' },\n              { title: '影像', dataIndex: 'createAt' },\n              // { title: '入賬日期', dataIndex: 'creditDate' },\n              // { title: '入賬時間', dataIndex: 'creditTime' },\n            ]}\n          />\n        </Col>\n      </Row>\n    </Page>\n  )\n}\n","import { Input } from 'antd'\nimport styled, { css } from 'styled-components'\n\nconst borderLess = css`\n  &.ant-input-borderless {\n    border: none;\n    border-bottom: 1px solid ${p => p.theme.primary};\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  &:active:not(.ant-input-borderless) {\n    box-shadow: 0 0 0 1px ${p => p.theme.primary};\n  }\n`\n\nconst StyledInput = styled(Input)`\n  &.ant-input-affix-wrapper .ant-input,\n  &.ant-input {\n    border-color: ${p => p.theme.primary};\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    ${borderLess};\n  }\n`\n\nconst Search = styled(Input.Search)`\n  &.ant-input-search {\n    .ant-input {\n      border-color: ${p => p.theme.primary};\n\n      &:hover,\n      &:focus {\n        border-color: ${p => p.theme.secondary};\n      }\n\n      &:focus {\n        box-shadow: 0 0 0 1px ${p => p.theme.primary};\n      }\n    }\n\n    .anticon-search {\n      font-size: 20px;\n      color: ${p => p.theme.primary};\n    }\n  }\n`\n\nconst TextArea = styled(Input.TextArea)`\n  &.ant-input {\n    resize: none;\n    border: 1px solid ${p => p.theme.primary};\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    ${borderLess};\n  }\n`\n\nexport { StyledInput as Input, TextArea, Search }\n\nexport default StyledInput\n","import React from 'react'\nimport { Layout } from 'antd'\n\nexport default function AppFooter() {\n  return (\n    <Layout.Footer\n      className=\"pb-6 text-center text-gray-600 border-t border-gray-400\"\n      style={{ background: 'rgb(221, 228, 237)' }}>\n      2020 高雄榮總數位病理平台\n    </Layout.Footer>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { DatePicker, TimePicker } from 'antd'\nimport { DatePickerProps } from 'antd/lib/date-picker'\n\nconst borderLess = css`\n  &.ant-picker-borderless {\n    border: none;\n    border-bottom: 1px solid ${p => p.theme.primary} !important;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  &.ant-picker-focused:not(.ant-picker-borderless) {\n    box-shadow: 0 0 0 1px ${p => p.theme.primary};\n  }\n`\n\nconst RangePicker = styled(DatePicker.RangePicker)`\n  &.ant-picker {\n    border: 1px solid ${p => p.theme.primary};\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    &.ant-picker-focused {\n      box-shadow: 0 0 0 1px ${p => p.theme.primary};\n    }\n  }\n`\n\nconst StyledDatePicker: any = styled(DatePicker)`\n  &.ant-picker {\n    border: 1px solid ${p => p.theme.primary};\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    .ant-picker-suffix {\n      color: ${p => p.theme.primary};\n    }\n\n    ${borderLess};\n  }\n`\n\nconst StyledTimePicker = styled(TimePicker)`\n  &.ant-picker {\n    border: 1px solid ${p => p.theme.primary};\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    .ant-picker-suffix {\n      color: ${p => p.theme.primary};\n    }\n\n    ${borderLess};\n  }\n`\n\nfunction DatePickerComponent(props: DatePickerProps) {\n  return <StyledDatePicker {...props} />\n}\n\nexport {\n  DatePickerComponent as DatePicker,\n  RangePicker,\n  StyledTimePicker as TimePicker,\n}\n\nexport default DatePickerComponent\n","import React from 'react'\nimport { Layout } from 'antd'\nimport cx from 'classnames'\nimport AppFooter from '@/components/app-footer'\nimport theme from '../theme'\n\ninterface PageProps {\n  children: React.ReactNode\n  style?: React.CSSProperties\n  className?: string\n  wrapperClassName?: string\n  wrapperStyle?: React.CSSProperties\n}\n\nexport function Page({ children, style, className = 'pr-16' }: PageProps) {\n  return (\n    <Layout>\n      <Layout.Content\n        style={{\n          background: `linear-gradient(-90deg,#42c2b8,${theme.primary})`,\n        }}>\n        <div\n          className={cx('pl-8 pt-6 pb-12', className)}\n          style={style}\n          css={{\n            background: 'rgb(221, 228, 237)',\n            borderTopLeftRadius: 32,\n            borderTopRightRadius: 32,\n          }}>\n          {children}\n        </div>\n      </Layout.Content>\n      <AppFooter />\n    </Layout>\n  )\n}\n","import React from 'react'\nimport { replace } from 'ramda'\nimport { envStore } from '@/constants/env'\n\nexport interface UseTitleOptions {\n  restoreOnUnmount?: boolean\n}\n\nconst DEFAULT_USE_TITLE_OPTIONS: UseTitleOptions = {\n  restoreOnUnmount: false,\n}\n\nfunction useTitle(\n  title: string,\n  options: UseTitleOptions = DEFAULT_USE_TITLE_OPTIONS\n) {\n  const prevTitleRef = React.useRef(document.title)\n  document.title = replace(/%s/, title)(envStore.appTitle)\n  React.useEffect(() => {\n    if (options && options.restoreOnUnmount) {\n      return () => {\n        document.title = prevTitleRef.current // eslint-disable-line\n      }\n    } else {\n      return\n    }\n  }, []) // eslint-disable-line\n}\n\nexport default typeof document !== 'undefined'\n  ? useTitle\n  : (_title: string) => {}\n","import React from 'react'\nimport { Select } from 'antd'\nimport { SelectProps } from 'antd/lib/select'\nimport styled from 'styled-components'\n\nconst StyledSelect: any = styled(Select)`\n  &.ant-select {\n    &.ant-select-single:not(.ant-select-customize-input) .ant-select-selector,\n    .ant-select-selection:hover,\n    .ant-select-selection:active,\n    .ant-select-selection:focus {\n      border-color: ${p => p.theme.primary};\n    }\n\n    .ant-select-selection {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    .ant-select-selection:active,\n    .ant-select-selection:focus {\n      box-shadow: none;\n    }\n\n    .ant-select-arrow {\n      color: ${p => p.theme.primary};\n    }\n\n    .ant-select-arrow-icon {\n      position: relative;\n      top: -1px;\n      font-size: 14px;\n    }\n\n    &.ant-select-borderless .ant-select-selector {\n      position: relative;\n      bottom: 1px;\n      border: 0;\n      border-bottom: 1px solid ${p => p.theme.primary} !important;\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  }\n\n  &.ant-select.is--outline {\n    > .ant-select-selector {\n      background: transparent;\n      border: 1px solid #fff;\n      color: #fff;\n\n      &:active,\n      &:focus,\n      &:hover {\n        border: 1px solid #fff;\n      }\n    }\n\n    .ant-select-selection-placeholder,\n    .ant-select-arrow {\n      color: #fff;\n    }\n\n    .ant-select-selection-placeholder {\n      opacity: 1;\n      left: 30%;\n    }\n  }\n\n  &.ant-select.is--transparent {\n    &.ant-select-focused > .ant-select-selector {\n      border: 1px solid #666a8f;\n    }\n\n    > .ant-select-selector {\n      background: transparent;\n      border: 1px solid #666a8f;\n      color: #a9b6d8;\n\n      &:active,\n      &:focus,\n      &:hover {\n        border: 1px solid #666a8f;\n      }\n    }\n\n    .ant-select-arrow {\n      color: #a9b6d8;\n    }\n  }\n`\n\nclass SelectComponent<T = any> extends React.Component<SelectProps<T>, any> {\n  public static Option = Select.Option\n\n  public static displayName = 'Select'\n\n  render() {\n    return <StyledSelect {...this.props}>{this.props.children}</StyledSelect>\n  }\n}\n\nexport default SelectComponent\n","import React from 'react'\nimport { Table, Empty, Tooltip } from 'antd'\nimport { TableProps } from 'antd/lib/table'\nimport { CloseOutlined, PlusOutlined } from '@ant-design/icons'\nimport styled from 'styled-components'\n\nconst StyledTable: any = styled(Table)`\n  &.ant-table-wrapper {\n    .ant-pagination-prev .ant-pagination-item-link,\n    .ant-pagination-next .ant-pagination-item-link {\n      border-color: ${p => p.theme.pagination};\n      border-radius: 6px;\n      color: ${p => p.theme.pagination};\n    }\n\n    .ant-pagination-item {\n      border-color: ${p => p.theme.pagination};\n    }\n\n    .ant-pagination-item a {\n      color: ${p => p.theme.pagination};\n    }\n\n    .ant-pagination-item-active,\n    .ant-pagination-item-active:focus,\n    .ant-pagination-item:hover {\n      border-color: ${p => p.theme.pagination};\n      background: ${p => p.theme.pagination};\n\n      a {\n        color: #fff;\n      }\n    }\n\n    .ant-table-pagination.ant-pagination {\n      margin-top: 32px;\n    }\n\n    .ant-pagination-prev:hover .ant-pagination-item-link,\n    .ant-pagination-next:hover .ant-pagination-item-link {\n      border-color: ${p => p.theme.pagination};\n      background: ${p => p.theme.pagination};\n      color: #fff;\n    }\n\n    .ant-pagination-simple-pager {\n      color: ${p => p.theme.pagination};\n    }\n  }\n\n  .ant-table-tbody > tr > td {\n    height: 40px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    line-height: 1em;\n    color: #4a4a4a;\n    background: #f0f2f5;\n    border-bottom: 1px solid #e9e9e9;\n  }\n\n  .ant-table-thead > tr > th {\n    background: rgb(39, 189, 179);\n    border-bottom: 1px solid #e9e9e9;\n    color: #fff;\n    font-weight: 600;\n    font-size: 16px;\n  }\n`\n\ntype Props<T> = TableProps<T> & {\n  editable?: boolean\n  isRowDeletable?: (row: T) => boolean\n  onAddRowClick?: (param?: any) => any\n  onDeleteRowClick?: (param?: any) => any\n  isCanEdit?: any\n}\n\nfunction TableComponent<T = any>({\n  editable = false,\n  columns = [],\n  onAddRowClick,\n  isRowDeletable = () => true,\n  onDeleteRowClick,\n  isCanEdit = '',\n  ...props\n}: Props<T>) {\n  const _columns = React.useMemo(() => {\n    let canEdit: boolean = true\n    if (!editable) {\n      return columns\n    }\n    if (isCanEdit !== '') {\n      canEdit = isCanEdit\n    }\n\n    const handleRowDelete = (key: React.Key) => () => {\n      if (onDeleteRowClick) {\n        onDeleteRowClick(key)\n      }\n    }\n\n    return [\n      {\n        title: (\n          <Tooltip placement=\"topLeft\" title=\"新增\">\n            <PlusOutlined\n              className=\"ml-1 relative\"\n              style={{ top: -3 }}\n              onClick={canEdit ? onAddRowClick : undefined}\n            />\n          </Tooltip>\n        ),\n        width: 50,\n        render: (_: any, __: any, idx: number) => (\n          <div className=\"text-center\">#{idx + 1}</div>\n        ),\n      },\n      ...columns,\n      {\n        width: 50,\n        render: (_: any, r: any, idx: number) => (\n          <Tooltip placement=\"topLeft\" title=\"刪除\">\n            <CloseOutlined\n              onClick={isRowDeletable(r) ? handleRowDelete(r.id) : undefined}\n            />\n          </Tooltip>\n        ),\n      },\n    ]\n  }, [columns, editable]) // eslint-disable-line\n\n  return (\n    <StyledTable\n      columns={_columns}\n      locale={{\n        emptyText: (\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            description={\n              <span>\n                <span className=\"d-block\">\n                  尚無資料，請點選「＋新增」新增資料。\n                </span>\n              </span>\n            }\n          />\n        ),\n      }}\n      {...props}>\n      {props.children}\n    </StyledTable>\n  )\n}\n\nTableComponent.displayName = 'Table'\nTableComponent.Column = Table.Column\n\nexport default TableComponent\n","import React from 'react'\nimport { ColumnProps, TableProps, TablePaginationConfig } from 'antd/lib/table'\nimport { SpinProps } from 'antd/lib/spin'\nimport { merge } from 'ramda'\nimport { DataSource } from '@/constants/types'\nimport Table from '@/components/table'\n\ntype Props<T> = Omit<TableProps<T>, 'dataSource'> & {\n  columns: ColumnProps<T>[]\n  className?: string\n  pageNum?: number\n  dataSource: DataSource<T>\n  onChange?: (pagination: TablePaginationConfig) => any\n  loading?: boolean | SpinProps\n  rowSelection?: {\n    selectedRowKeys: any[]\n    onChange: (selectedRowKeys: any, selectedRows: any) => void\n  }\n}\n\nexport default function QueryTable<T>({\n  columns,\n  className,\n  pageNum = 1,\n  dataSource,\n  onChange,\n  loading = false,\n  rowSelection,\n  pagination,\n  ...props\n}: Props<T>) {\n  const handleTableChange = ({ current, pageSize }: TablePaginationConfig) => {\n    if (onChange) {\n      onChange({ current, pageSize })\n    }\n  }\n\n  const paginationConfig = React.useMemo(\n    () =>\n      merge<any, any>(pagination, {\n        current: pageNum,\n        pageSize: 10,\n        total: dataSource.total,\n        showSizeChanger: false,\n      }) as TablePaginationConfig,\n    [dataSource.total, pagination, pageNum]\n  )\n\n  return (\n    <Table\n      rowKey=\"id\"\n      dataSource={dataSource.content}\n      columns={columns as any}\n      pagination={paginationConfig}\n      onChange={handleTableChange}\n      rowSelection={rowSelection}\n      loading={loading}\n      className={className}\n      {...props}\n    />\n  )\n}\n"],"sourceRoot":""}