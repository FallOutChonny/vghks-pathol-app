{"version":3,"sources":["components/snippet-preview-modal.tsx","containers/report-template-list/file-upload.js","containers/report-template-list/import-report-template-modal.tsx","containers/report-template-list/report-template-list.tsx","hooks/useModal.tsx"],"names":["compose","require","SnippetPreviewWrapper","styled","div","SnippetPreviewModal","item","onCancel","useForm","form","snippetList","pathOr","visible","style","top","maskClosable","className","keyboard","width","footer","key","color","onClick","downloadAsJson","filename","name","moment","format","json","map","gt","__","length","background","theme","darkGrey","renderSnippets","keys","hasValue","has","marginRight","FileUpload","props","triggerChange","changedValue","onChange","onRemove","setState","state","fileList","customRequest","info","fileReader","FileReader","addEventListener","file","uid","uuid","url","result","status","readAsDataURL","value","this","accept","beforeUpload","placeholder","hasFile","readOnly","startsWith","suffix","title","type","data-uid","icon","CloseOutlined","StyledUpload","multiple","UploadOutlined","nextProps","React","Component","formItemLayout","createFormItemLayout","ImportReportTemplateModal","onOk","bodyStyle","paddingLeft","paddingRight","validateFields","then","values","a","rest","readFile","JSON","parse","hideRequiredMark","colon","Item","label","rules","required","ReportTemplateList","useTitle","useBreadcrumb","dataSource","useReportTemplates","data","content","onToggle","ownState","useState","editModalVisible","setEditModalVisible","setItem","findItem","useCallback","evt","find","x","path","currentTarget","dataset","handleModalToggle","prev","useModal","previewModalVisible","handlePreviewModalVisible","useVisible","importModalVisible","handleImportModalVisible","useReportPreview","setIsPreview","useAddNewTemplate","onCompleted","success","handleAdd","handleTo","pathname","history","push","handlePreview","columns","dataIndex","render","v","r","record","replace","id","routes","align","_","EyeOutlined","data-id","DeleteOutlined","minHeight","justify","span","rowKey"],"mappings":"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","file":"static/js/12.0a135268.chunk.js","sourcesContent":["import React from 'react'\nimport moment from 'moment'\nimport { Form } from 'antd'\nimport { ModalProps } from 'antd/lib/modal'\nimport styled from 'styled-components'\nimport { length, __, gt, keys, map, pathOr } from 'ramda'\nimport Modal from '@/components/modal'\nimport { ReportTemplate } from '@/constants/types'\nimport { renderSnippets } from '@/components/snippet-utils'\nimport Button from '@/components/button'\nimport { downloadAsJson } from '@/utils/webHelper'\nimport theme from '../theme'\nconst { compose } = require('ramda')\n\ninterface Props extends ModalProps {\n  item?: ReportTemplate | null\n}\n\nconst SnippetPreviewWrapper = styled.div`\n  .ant-card-head {\n    min-height: auto;\n  }\n\n  .ant-card-head-title {\n    padding-top: 0;\n  }\n\n  .ant-card-body {\n    padding-top: 12px;\n    padding-bottom: 8px;\n  }\n`\n\nexport default function SnippetPreviewModal({ item, onCancel }: Props) {\n  const [form] = Form.useForm()\n\n  const snippetList = pathOr({}, ['setting'], item)\n\n  const handleExport = () => {\n    downloadAsJson({\n      filename: item?.name || `報告模版_${moment().format('YYYYMMDDHHmmss')}`,\n      json: { ...item },\n    })\n  }\n\n  return (\n    <Modal\n      visible\n      style={{ top: 30 }}\n      maskClosable={false}\n      className=\"ant-modal-header--border-none\"\n      keyboard={false}\n      width=\"65%\"\n      onCancel={onCancel}\n      footer={[\n        <Button\n          key=\"btn-export\"\n          color=\"primary\"\n          onClick={handleExport}\n          className=\"mr-3\">\n          匯出\n        </Button>,\n        <Button key=\"btn-cancel\" color=\"outline\" onClick={onCancel}>\n          確認\n        </Button>,\n      ]}>\n      <Form form={form}>\n        <SnippetPreviewWrapper>\n          {compose(\n            map((key: string) => (\n              <div key={key}>\n                {compose(gt(__, 0), length, pathOr([], [key]))(snippetList) && (\n                  <h2\n                    style={{ background: theme.darkGrey, width: '50%' }}\n                    className=\"bg-darkGrey text-white pl-3 my-2\">\n                    {key}\n                  </h2>\n                )}\n                {compose(renderSnippets(), pathOr([], [key]))(snippetList)}\n              </div>\n            )),\n            keys\n          )(snippetList)}\n        </SnippetPreviewWrapper>\n      </Form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { Upload, Tooltip, Button } from 'antd'\nimport styled from 'styled-components'\nimport { CloseOutlined, UploadOutlined } from '@ant-design/icons'\nimport { has } from 'ramda'\nimport { uuid } from '@/utils/webHelper'\nimport Input from '@/components/input'\n\nconst hasValue = has('value')\n\nclass FileUpload extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      fileList: props.value ? [{ uid: uuid(), url: props.value }] : [],\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (hasValue(nextProps)) {\n      // Should be a controlled component.\n      if ('value' in nextProps) {\n        return typeof nextProps.value === 'string'\n          ? { value: nextProps.value }\n          : {\n              ...(nextProps.value || {}),\n            }\n      }\n    }\n\n    return null\n  }\n\n  triggerChange = changedValue => {\n    // Should provide an event to pass value to Form.\n    const { onChange } = this.props\n    if (onChange) {\n      onChange(changedValue)\n    }\n  }\n\n  onRemove = () => {\n    this.setState(\n      state => ({\n        fileList: [],\n      }),\n      () => this.triggerChange(null)\n    )\n  }\n\n  customRequest = info => {\n    const fileReader = new FileReader()\n    fileReader.addEventListener('load', () => {\n      const file = {\n        uid: uuid(),\n        name: info.file.name,\n        url: fileReader.result,\n        status: 'done',\n        file: info.file,\n      }\n\n      this.setState(\n        state => ({ fileList: [...state.fileList, file] }),\n        () => this.triggerChange(this.state.fileList[0])\n      )\n    })\n    fileReader.readAsDataURL(info.file)\n  }\n\n  render() {\n    const {\n      props: { accept, beforeUpload, placeholder },\n      state: { fileList = [] },\n    } = this\n\n    const hasFile = fileList.length > 0\n    const [file] = fileList\n\n    return !hasFile ? (\n      <StyledUpload\n        multiple={false}\n        accept={accept}\n        fileList={fileList}\n        beforeUpload={beforeUpload}\n        onRemove={this.onRemove}\n        customRequest={this.customRequest}>\n        <Input\n          placeholder={placeholder}\n          readOnly\n          suffix={\n            <Tooltip title=\"點擊選擇上傳檔案\">\n              <Button\n                icon={<UploadOutlined />}\n                type=\"link\"\n                css={{ marginRight: -10, color: `rgb(183, 183, 183)` }}\n              />\n            </Tooltip>\n          }\n        />\n      </StyledUpload>\n    ) : (\n      <Input\n        placeholder={placeholder}\n        readOnly\n        value={file.url.startsWith('data:') ? file.name : file.url}\n        suffix={\n          <Tooltip title=\"刪除上傳檔案\">\n            <Button\n              type=\"link\"\n              css={{ marginRight: -10, color: `rgb(183, 183, 183)` }}\n              data-uid={file.uid}\n              icon={<CloseOutlined />}\n              onClick={this.onRemove}\n            />\n          </Tooltip>\n        }\n      />\n    )\n  }\n}\n\nconst StyledUpload = styled(Upload)`\n  .ant-upload {\n    width: 100%;\n  }\n\n  .ant-input-affix-wrapper {\n    padding-top: 0;\n    padding-bottom: 0;\n  }\n`\n\nexport default FileUpload\n","import React from 'react'\nimport { Form } from 'antd'\nimport { ModalProps } from 'antd/lib/modal'\nimport Modal from '@/components/modal'\nimport Button from '@/components/button'\nimport Input from '@/components/input'\nimport { ReportTemplate } from '@/constants/types'\nimport { rules, createFormItemLayout } from '@/utils/form'\nimport { readFile } from '@/utils/webHelper'\nimport FileUpload from './file-upload'\n\ninterface Props extends Omit<ModalProps, 'onOk'> {\n  onOk: (values: ReportTemplate) => void\n}\n\nconst formItemLayout = createFormItemLayout(4)\n\nexport default function ImportReportTemplateModal({\n  onCancel,\n  onOk,\n  ...props\n}: Props) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(async values => {\n      const { file, ...rest } = values\n\n      const result = await readFile<string>(file.file)\n\n      onOk({ ...JSON.parse(result), ...rest } as ReportTemplate)\n    })\n  }\n\n  return (\n    <Modal\n      {...props}\n      visible\n      title=\"匯入報告模版\"\n      maskClosable={false}\n      keyboard={false}\n      bodyStyle={{\n        paddingLeft: 48,\n        paddingRight: 48,\n      }}\n      width={560}\n      footer={[\n        <Button\n          key=\"btn-cancel\"\n          color=\"outline\"\n          onClick={onCancel}\n          className=\"mr-3\">\n          取消\n        </Button>,\n        <Button key=\"btn-ok\" color=\"primary\" onClick={handleOk}>\n          確認\n        </Button>,\n      ]}\n      onCancel={onCancel}>\n      <Form hideRequiredMark={false} form={form} colon={false}>\n        <Form.Item\n          {...formItemLayout}\n          label=\"選擇檔案\"\n          name=\"file\"\n          rules={[rules.required]}>\n          <FileUpload accept=\".json\" placeholder=\"選擇報告模版JSON檔案\" />\n        </Form.Item>\n        <Form.Item\n          {...formItemLayout}\n          label=\"模版名稱\"\n          name=\"name\"\n          rules={[rules.required]}>\n          <Input />\n        </Form.Item>\n        <Form.Item\n          {...formItemLayout}\n          label=\"創作者\"\n          name=\"author\"\n          rules={[rules.required]}>\n          <Input />\n        </Form.Item>\n        <Form.Item {...formItemLayout} label=\"描述\" name=\"description\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { replace } from 'ramda'\nimport { Row, Col, Tooltip, message } from 'antd'\nimport { ColumnProps } from 'antd/lib/table'\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons'\nimport { Page } from '@/components/layout'\nimport Button from '@/components/button'\nimport Table from '@/components/query-table'\nimport ReactDndProvider from '@/components/snippet-scrollable-container'\nimport SnippetPreviewModal from '@/components/snippet-preview-modal'\nimport history from '@/utils/history'\nimport useTitle from '@/hooks/useTitle'\nimport { useBreadcrumb } from '@/hooks/useApp'\nimport useVisible from '@/hooks/useVisible'\nimport useModal from '@/hooks/useModal'\nimport { useReportPreview } from '@/data/useReportTemplate'\nimport {\n  useReportTemplates,\n  useAddNewTemplate,\n} from '@/services/reportTemplate'\nimport * as routes from '@/constants/routes'\nimport { ReportTemplate } from '@/constants/types'\nimport ImportReportTemplateModal from './import-report-template-modal'\n\nexport default function ReportTemplateList() {\n  useTitle('結構式報告模版')\n  useBreadcrumb([{ name: '報告模版' }, { name: '結構式報告模版' }])\n\n  const { data: dataSource } = useReportTemplates()\n\n  const [previewModalVisible, handlePreviewModalVisible, { item }] = useModal({\n    content: dataSource.content,\n  })\n\n  const [importModalVisible, handleImportModalVisible] = useVisible()\n\n  const [, setIsPreview] = useReportPreview()\n\n  const [, handleAdd] = useAddNewTemplate({\n    onCompleted: () => {\n      message.success('報告模版已匯入成功')\n      handleImportModalVisible()\n    },\n  })\n\n  const handleTo = (pathname: string) => () => {\n    history.push(pathname)\n  }\n\n  const handleToEditPage = (record: ReportTemplate) => () => {\n    handleTo(replace(':id', `${record.id}`)(routes.REPORT_TEMPLATE_EDIT))()\n  }\n\n  const handlePreview = (evt: React.MouseEvent<HTMLElement>) => {\n    setIsPreview()\n    handlePreviewModalVisible(evt)\n  }\n\n  const handleImport = (values: ReportTemplate) => {\n    handleAdd(values)\n  }\n\n  const columns: ColumnProps<ReportTemplate>[] = [\n    {\n      title: '報告名稱',\n      dataIndex: 'name',\n      render: (v, r) => (\n        <Button type=\"link\" onClick={handleToEditPage(r)}>\n          {v}\n        </Button>\n      ),\n    },\n    {\n      title: '創作者',\n      dataIndex: 'author',\n    },\n    {\n      title: '狀態',\n      dataIndex: 'statusName',\n    },\n    {\n      title: '創作時間',\n      dataIndex: 'createdAtStr',\n    },\n    {\n      title: '上次修改時間',\n      dataIndex: 'updatedAtStr',\n    },\n    {\n      title: '報告描述',\n      dataIndex: 'description',\n    },\n    {\n      title: 'actions',\n      dataIndex: 'delete',\n      align: 'center',\n      render: (_, r) => (\n        <>\n          <Tooltip title=\"檢視\">\n            <EyeOutlined\n              data-id={r.id}\n              className=\"c-icon text-lg cursor-pointer mr-3\"\n              onClick={handlePreview}\n            />\n          </Tooltip>\n          <Tooltip title=\"刪除\">\n            <DeleteOutlined\n              data-id={r.id}\n              className=\"c-icon text-lg cursor-pointer\"\n            />\n          </Tooltip>\n        </>\n      ),\n    },\n  ]\n\n  return (\n    <ReactDndProvider className=\"is--preview\">\n      {previewModalVisible && (\n        <SnippetPreviewModal item={item} onCancel={handlePreview} />\n      )}\n      {importModalVisible && (\n        <ImportReportTemplateModal\n          onOk={handleImport}\n          onCancel={handleImportModalVisible}\n        />\n      )}\n      <Page style={{ minHeight: 'calc(100vh - 203px)' }}>\n        <Row justify=\"center\">\n          <Col span={22}>\n            <div>\n              <div className=\"flex justify-end items-center mb-4\">\n                <Button color=\"outline\" onClick={handleImportModalVisible}>\n                  匯入\n                </Button>\n                <Button\n                  color=\"outline\"\n                  className=\"ml-4\"\n                  onClick={handleTo(routes.REPORT_TEMPLATE_CREATE)}>\n                  新增\n                </Button>\n              </div>\n            </div>\n            <Table rowKey=\"id\" columns={columns} dataSource={dataSource} />\n          </Col>\n        </Row>\n      </Page>\n    </ReactDndProvider>\n  )\n}\n","import React from 'react'\nimport { find, path } from 'ramda'\n\nexport default function useModal<T, TDetail = T>({\n  content,\n  key = 'id',\n  onToggle,\n  ownState,\n}: {\n  content: T[]\n  key?: string\n  ownState?: [T | null, React.Dispatch<React.SetStateAction<T | null>>]\n  onToggle?: (item: T) => any\n}) {\n  const [editModalVisible, setEditModalVisible] = React.useState(false)\n  const [item, setItem] = ownState || React.useState<T | null>(null) // eslint-disable-line\n\n  const findItem = React.useCallback(\n    (evt: React.MouseEvent<HTMLElement>) => {\n      return find(\n        x =>\n          `${path([key], x)}` ===\n          (evt.currentTarget as HTMLElement).dataset['id']\n      )(content)\n    },\n    [content, key]\n  )\n\n  const handleModalToggle = (evt?: React.MouseEvent<HTMLElement>) => {\n    if (!evt) {\n      return\n    }\n\n    const item = findItem(evt)\n\n    if (!item) {\n      setItem(null)\n    }\n\n    if (item) {\n      setItem(item as T)\n    }\n\n    if (onToggle) {\n      onToggle(item as T)\n    }\n  }\n\n  const handleEditModalVisible = (evt?: React.MouseEvent<HTMLElement>) => {\n    setEditModalVisible(prev => !prev)\n    handleModalToggle(evt)\n  }\n\n  return [\n    editModalVisible,\n    handleEditModalVisible,\n    {\n      item,\n      handleModalToggle,\n      setItem,\n    },\n  ] as [\n    boolean,\n    (evt?: React.MouseEvent<HTMLElement, MouseEvent> | undefined) => void,\n    {\n      item: T | null\n      setItem: (value: React.SetStateAction<T | null>) => void\n      handleModalToggle: (\n        evt?: React.MouseEvent<HTMLElement, MouseEvent> | undefined\n      ) => void\n      itemDetail: TDetail\n    }\n  ]\n}\n"],"sourceRoot":""}