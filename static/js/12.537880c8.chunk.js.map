{"version":3,"sources":["services/pathology.tsx","hooks/useFormValues.ts","../node_modules/@ant-design/icons-svg/es/asn/EyeOutlined.js","../node_modules/@ant-design/icons/es/icons/EyeOutlined.js","containers/report-list/report-list.tsx"],"names":["require","compose","useDoctors","division","Divisions","PATH","variables","useSWR","data","rest","_data","map","x","id","doctorId","doctorById","forEach","s","doctorEnums","DoctorSelect","props","Option","key","value","doctor","BodyPartSelect","uuid","name","useBodyParts","BedroomSelect","useBedrooms","AppointmentTypeSelect","useAppointmentTypes","useFormValues","startDateField","endDateField","format","values","date","getRangeDate","startDate","endDate","evolve","createDate","ifElse","isNil","identity","invoker","reportDate","EyeOutlined","ref","React","AntdIcon","Object","assign","icon","EyeOutlinedSvg","displayName","formItemLayout","createFormItemLayout","ReportList","useTitle","setBreadcrumb","useBreadcrumb","useState","shouldRedirect","setShouldRedirect","useForm","form","transform","useReports","onCompleted","response","is","Array","head","hasTemplate","hasPath","isFinish","equals","__","path","hasORReqno","allPass","history","push","replace","orreqno","REPORT_EDIT","not","REPORT_INQUIRY","error","loading","refetch","called","handleToReport","evt","report","find","propEq","currentTarget","dataset","pathOr","isUntype","isTyped","handleToImageViewer","url","env","viewerUrl","window","open","handleToMedicalOrder","MEDICAL_ORDER","columns","title","dataIndex","sorter","render","_","r","data-id","className","onClick","hhisnum","spinning","style","minHeight","justify","md","xs","layout","hideRequiredMark","labelAlign","colon","gutter","noStyle","shouldUpdate","_rules","always","rules","required","Item","label","addonBefore","allowClear","width","placeholder","reportStatusEnums","color","resetFields","validateFields","then","a","classification","total","rowKey","dataSource"],"mappings":"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","file":"static/js/12.537880c8.chunk.js","sourcesContent":["import React from 'react'\nimport { SelectProps } from 'antd/lib/select'\nimport useSwr from 'swr'\nimport { pathOr, head, forEach } from 'ramda'\nimport request from '@/utils/request'\nimport useSWR from '@/hooks/useSWR'\nimport Select from '@/components/select'\nimport { QueryVariables, MedicalOrder } from '@/constants/types'\nimport { uuid } from '@/utils/webHelper'\nimport { Divisions } from '@/constants/enums'\nconst { compose } = require('ramda')\n\nexport type Doctor = {\n  id: number\n  doctorId: number\n  doctor: string\n  division: Divisions\n}\n\nexport function usePathology() {\n  const { data, ...others } = useSwr(`/api/b2/getPathologyResult`, url =>\n    request(url, {\n      method: 'POST',\n      body: {\n        classification: 'pathorderview',\n        noType: 'HHISNUM',\n        no: '16685033',\n      },\n    })\n  )\n\n  return {\n    ...others,\n    data: compose(head, pathOr([], []))(data) as MedicalOrder,\n  }\n}\n\nexport function useDoctors({\n  division = Divisions.PATH,\n  ...variables\n}: QueryVariables = {}) {\n  const { data = [], ...rest } = useSWR<Doctor[]>(\n    '/api/v1/c2/getC2DoctorList/{division}',\n    {\n      variables: { division, ...variables },\n    }\n  )\n\n  const _data = data?.map(x => ({ ...x, id: x.doctorId }))\n\n  const doctorById: { [key: string]: any } = {}\n\n  forEach(s => (doctorById[s.doctorId] = s), _data)\n\n  return {\n    ...rest,\n    doctorById,\n    data: _data,\n    doctorEnums: _data,\n  }\n}\n\nexport function DoctorSelect(props: SelectProps<any>) {\n  const { data } = useDoctors()\n  return (\n    <Select {...props}>\n      {data.map(x => (\n        <Select.Option key={x.id} value={x.doctor}>\n          {x.doctor}\n        </Select.Option>\n      ))}\n    </Select>\n  )\n}\n\nexport function useBodyParts() {\n  const { data = [], ...rest } = useSWR<string[]>('/api/v1/b1/getBodyParts')\n\n  const _data = data?.map(x => ({ id: uuid(), name: x }))\n\n  return {\n    ...rest,\n    data: _data,\n  }\n}\n\nexport function BodyPartSelect(props: SelectProps<any>) {\n  const { data } = useBodyParts()\n  return (\n    <Select {...props}>\n      {data.map(x => (\n        <Select.Option key={x.id} value={x.name}>\n          {x.name}\n        </Select.Option>\n      ))}\n    </Select>\n  )\n}\n\nexport function useBedrooms() {\n  const { data = [], ...rest } = useSWR<string[]>('/api/v1/b1/getWards')\n\n  const _data = data?.map(x => ({ id: uuid(), name: x }))\n\n  return {\n    ...rest,\n    data: _data,\n  }\n}\n\nexport function BedroomSelect(props: SelectProps<any>) {\n  const { data } = useBedrooms()\n  return (\n    <Select {...props}>\n      {data.map(x => (\n        <Select.Option key={x.id} value={x.name}>\n          {x.name}\n        </Select.Option>\n      ))}\n    </Select>\n  )\n}\n\nexport function useAppointmentTypes() {\n  const { data = [], ...rest } = useSWR<string[]>(\n    '/api/v1/b1/getAppointmentTypes'\n  )\n\n  const _data = data?.map(x => ({ id: uuid(), name: x }))\n\n  return {\n    ...rest,\n    data: _data,\n  }\n}\n\nexport function AppointmentTypeSelect(props: SelectProps<any>) {\n  const { data } = useAppointmentTypes()\n  return (\n    <Select {...props}>\n      {data.map(x => (\n        <Select.Option key={x.id} value={x.name}>\n          {x.name}\n        </Select.Option>\n      ))}\n    </Select>\n  )\n}\n","import { evolve, ifElse, isNil, identity, invoker } from 'ramda'\nimport { getRangeDate } from '@/utils/webHelper'\n\nexport default function useFormValues({\n  startDateField = 'startDate',\n  endDateField = 'endDate',\n  format,\n}: {\n  format?: string\n  startDateField?: string\n  endDateField?: string\n}) {\n  return (values: { [key: string]: any }) => {\n    if (!values) {\n      return {}\n    }\n\n    const { date = [], ...rest } = values\n\n    const [startDate, endDate] = getRangeDate(date, format)\n\n    return evolve({\n      createDate: ifElse(isNil, identity, invoker(1, 'format')('YYYY-MM-DD')),\n      reportDate: ifElse(isNil, identity, invoker(1, 'format')('YYYY-MM-DD')),\n    })({\n      ...rest,\n      [startDateField]: startDate,\n      [endDateField]: endDate,\n    })\n  }\n}\n","// This icon file is generated automatically.\nvar EyeOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" } }] }, \"name\": \"eye\", \"theme\": \"outlined\" };\nexport default EyeOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EyeOutlinedSvg from \"@ant-design/icons-svg/es/asn/EyeOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EyeOutlined = function EyeOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: EyeOutlinedSvg\n  }));\n};\n\nEyeOutlined.displayName = 'EyeOutlined';\nexport default /*#__PURE__*/React.forwardRef(EyeOutlined);","import React from 'react'\nimport {\n  ifElse,\n  __,\n  equals,\n  replace,\n  map,\n  hasPath,\n  allPass,\n  not,\n  always,\n  invoker,\n  is,\n  head,\n  path,\n  identity,\n  find,\n  propEq,\n  pathOr,\n} from 'ramda'\nimport { Row, Col, Form, Tooltip, Spin, message } from 'antd'\nimport { ColumnProps } from 'antd/lib/table'\nimport { EyeOutlined, EditOutlined } from '@ant-design/icons'\nimport useTitle from '@/hooks/useTitle'\nimport { useBreadcrumb } from '@/hooks/useApp'\nimport useFormValues from '@/hooks/useFormValues'\nimport { Report, useReports } from '@/services/report'\nimport { DoctorSelect } from '@/services/pathology'\nimport Select from '@/components/select'\nimport Input from '@/components/input'\nimport { RangePicker } from '@/components/datepicker'\nimport { Page } from '@/components/layout'\nimport Table from '@/components/query-table'\nimport Button from '@/components/button'\nimport history from '@/utils/history'\nimport { reportStatusEnums } from '@/constants/enums'\nimport { REPORT_EDIT, MEDICAL_ORDER, REPORT_INQUIRY } from '@/constants/routes'\nimport { createFormItemLayout, rules } from '@/utils/form'\nimport { sorter } from '@/utils/webHelper'\nimport env from '@/constants/env'\nimport FormItem from 'antd/lib/form/FormItem'\nconst { compose } = require('ramda')\n\nconst formItemLayout = createFormItemLayout(6)\n\nexport default function ReportList() {\n  useTitle('報告查詢')\n\n  const setBreadcrumb = useBreadcrumb([{ name: '報告查詢' }])\n\n  // const [noType, setNoType] = React.useState<string | undefined>()\n  const [shouldRedirect, setShouldRedirect] = React.useState(false)\n\n  const [form] = Form.useForm()\n\n  const transform = useFormValues({ format: 'YYYY-MM-DD' })\n\n  const { loading, data, refetch, called } = useReports({\n    onCompleted: data => {\n      setShouldRedirect(false)\n\n      if (!shouldRedirect) {\n        return\n      }\n\n      const response = ifElse(is(Array), head, identity)(data)\n\n      const hasTemplate = hasPath(['templateId'])\n      const isFinish = compose(equals(__, '完成'), path(['orstatus']))\n      const hasORReqno = hasPath(['orreqno'])\n\n      if (allPass([hasORReqno, hasTemplate, isFinish])(response)) {\n        history.push(\n          `${replace(':id', response.orreqno)(REPORT_EDIT)}?finish=1`\n        )\n      }\n      if (allPass([hasORReqno, hasTemplate])(response)) {\n        history.push(replace(':id', response.orreqno)(REPORT_EDIT))\n      }\n      if (allPass([hasORReqno, compose(not, hasTemplate)])(response)) {\n        history.push(`${REPORT_INQUIRY}?orreqno=${response.orreqno}`)\n      }\n      if (compose(not, hasPath(['orreqno']))(response)) {\n        message.error('查無報告')\n      }\n    },\n  })\n\n  const handleOk = () => {\n    form.validateFields().then(async values => {\n      // 已完成 要跳到輸出報告頁面\n      // 未輸入 要跳到編輯報告頁面\n      if (values.classification === 'rpresult') {\n        setShouldRedirect(true)\n      }\n\n      refetch(\n        transform({\n          ...values,\n          // noType,\n        })\n      )\n      setBreadcrumb([{ name: '報告查詢' }, { name: '查詢結果' }])\n    })\n  }\n\n  // const handleNoTypeChange = (value?: string) => {\n  //   setNoType(value)\n  // }\n\n  const handleToReport = (evt: React.MouseEvent<HTMLElement>) => {\n    const report = compose(\n      find(propEq('orreqno', evt.currentTarget.dataset.id)),\n      pathOr([], ['content'])\n    )(data)\n\n    if (!report) {\n      return\n    }\n\n    const isFinish = compose(equals(__, '完成'), path(['orstatus']))\n    const isUntype = compose(equals(__, '未輸'), path(['orstatus']))\n    const isTyped = compose(equals(__, '已輸'), path(['orstatus']))\n    const hasORReqno = hasPath(['orreqno'])\n\n    if (allPass([hasORReqno, isFinish])(report)) {\n      history.push(`${replace(':id', report.orreqno)(REPORT_EDIT)}?finish=1`)\n    }\n    if (allPass([hasORReqno, isTyped])(report)) {\n      history.push(replace(':id', report.orreqno)(REPORT_EDIT))\n    }\n    if (allPass([hasORReqno, isUntype])(report)) {\n      history.push(`${REPORT_INQUIRY}?orreqno=${report.orreqno}`)\n    }\n  }\n\n  const handleToImageViewer = (evt: React.MouseEvent<HTMLElement>) => {\n    const url = replace(':id', '')(env.viewerUrl)\n    window.open(`${url}?PatientID=${evt.currentTarget.dataset.id}`, '__blank')\n  }\n\n  const handleToMedicalOrder = (evt: React.MouseEvent<HTMLElement>) => {\n    history.push(\n      replace(':id', `${evt.currentTarget.dataset.id}`)(MEDICAL_ORDER)\n    )\n  }\n\n  const handleResetFields = () => form.resetFields()\n\n  const columns: ColumnProps<Report>[] = [\n    { title: '申請序號', dataIndex: 'orreqno', sorter: sorter('orreqno') },\n    { title: '姓名', dataIndex: 'hnamec' },\n    { title: '病理號', dataIndex: 'orworkno', sorter: sorter('orworkno') },\n    { title: '病歷號', dataIndex: 'hhisnum', sorter: sorter('hhisnum') },\n    { title: '病房', dataIndex: 'hnursta', sorter: sorter('hnursta') },\n    { title: '床號', dataIndex: 'hbed', sorter: sorter('hbed') },\n    { title: '性別', dataIndex: 'hsex', sorter: sorter('hsex') },\n    { title: '簽收日期', dataIndex: 'zrsregord', sorter: sorter('zrsregord') },\n    { title: '收費碼', dataIndex: 'ordclnm' },\n    { title: '科別', dataIndex: 'csect', sorter: sorter('csect') },\n    { title: '狀態', dataIndex: 'orstatus', sorter: sorter('orstatus') },\n    {\n      title: '醫囑',\n      dataIndex: 'ORPROCED',\n      render: (_, r) => (\n        <Tooltip title=\"查看醫囑內容\">\n          <EyeOutlined\n            data-id={r.orreqno}\n            className=\"cursor-pointer text-lg\"\n            onClick={handleToMedicalOrder}\n          />\n        </Tooltip>\n      ),\n    },\n    {\n      title: '報告',\n      dataIndex: 'x',\n      render: (_, r) => (\n        <Tooltip title=\"編輯、查看報告內容\">\n          <EditOutlined\n            data-id={r.orreqno}\n            className=\"cursor-pointer text-lg\"\n            onClick={handleToReport}\n          />\n        </Tooltip>\n      ),\n    },\n    {\n      title: '影像',\n      dataIndex: 'createAt',\n      render: (_, r) => (\n        <Tooltip title=\"開啟新視窗查看影像\">\n          <EyeOutlined\n            data-id={r.hhisnum}\n            className=\"cursor-pointer text-lg\"\n            onClick={handleToImageViewer}\n          />\n        </Tooltip>\n      ),\n    },\n  ]\n\n  return (\n    <Spin spinning={loading}>\n      <Page style={{ minHeight: 'calc(100vh - 203px)' }}>\n        <Row justify=\"center\">\n          <Col md={22} xs={24}>\n            <Form\n              form={form}\n              layout=\"horizontal\"\n              hideRequiredMark={true}\n              labelAlign=\"left\"\n              colon={false}>\n              <Row gutter={12} justify=\"space-between\">\n                <Col md={7} xs={24}>\n                  <FormItem noStyle shouldUpdate>\n                    {form => {\n                      const _rules = compose(\n                        ifElse(\n                          equals(__, 'rpresult'),\n                          always({ rules: [rules.required] }),\n                          always({})\n                        ),\n                        invoker(1, 'getFieldValue')('classification')\n                      )(form)\n\n                      return (\n                        <Form.Item\n                          {...formItemLayout}\n                          {..._rules}\n                          label=\"查詢單號\"\n                          name=\"no\">\n                          <Input\n                            addonBefore={\n                              <Form.Item noStyle name=\"noType\">\n                                <Select\n                                  {..._rules}\n                                  allowClear\n                                  style={{ width: 100 }}\n                                  placeholder=\"單號類型\">\n                                  <Select.Option value=\"ORREQNO\">\n                                    申請序號\n                                  </Select.Option>\n                                  <Select.Option value=\"ORWORKNO\">\n                                    病理號\n                                  </Select.Option>\n                                  <Select.Option value=\"HHISNUM\">\n                                    病歷號\n                                  </Select.Option>\n                                </Select>\n                              </Form.Item>\n                            }\n                          />\n                        </Form.Item>\n                      )\n                    }}\n                  </FormItem>\n                </Col>\n                <Col md={7} xs={24}>\n                  <Form.Item\n                    {...formItemLayout}\n                    label=\"查詢類別\"\n                    name=\"classification\"\n                    rules={[rules.required]}>\n                    <Select allowClear>\n                      <Select.Option value=\"pathorderview\">醫囑</Select.Option>\n                      <Select.Option value=\"rpresult\">\b報告</Select.Option>\n                    </Select>\n                  </Form.Item>\n                </Col>\n                <Col md={7} xs={24}>\n                  <Form.Item {...formItemLayout} label=\"簽收日期\" name=\"date\">\n                    <RangePicker className=\"w-full\" />\n                  </Form.Item>\n                </Col>\n              </Row>\n              <Row gutter={12} justify=\"space-between\">\n                <Col md={7} xs={24}>\n                  <Form.Item {...formItemLayout} label=\"醫師\" name=\"doctor\">\n                    <DoctorSelect allowClear />\n                  </Form.Item>\n                </Col>\n                <Col md={7} xs={24}>\n                  <Form.Item\n                    {...formItemLayout}\n                    label=\"報告狀態\"\n                    name=\"reportStatus\">\n                    <Select allowClear>\n                      {map((x: { id: number; name: string }) => (\n                        <Select.Option key={x.id} value={x.id}>\n                          {x.name}\n                        </Select.Option>\n                      ))(reportStatusEnums)}\n                      {/* <Select.Option value={2}>複審</Select.Option> */}\n                      {/* <Select.Option value={3}>暫存</Select.Option> */}\n                      {/* <Select.Option value={4}>不確定</Select.Option> */}\n                      {/* <Select.Option value={5}>正式</Select.Option> */}\n                      {/* <Select.Option value={6}>全部</Select.Option> */}\n                    </Select>\n                  </Form.Item>\n                </Col>\n                <Col md={7} xs={24}>\n                  <Form.Item>\n                    <Button\n                      color=\"primary\"\n                      style={{ width: 120 }}\n                      className=\"mr-3\"\n                      onClick={handleResetFields}>\n                      重設\n                    </Button>\n                    <Button\n                      color=\"primary\"\n                      style={{ width: 120 }}\n                      onClick={handleOk}>\n                      搜尋\n                    </Button>\n                  </Form.Item>\n                </Col>\n              </Row>\n            </Form>\n          </Col>\n        </Row>\n        {called && !shouldRedirect && (\n          <>\n            <Row className=\"mb-2 mt-4\" justify=\"center\">\n              <Col md={24} xs={24} className=\"text-sm\">\n                檢索結果共 <span className=\"text-primary\">{data.total}</span> 筆\n              </Col>\n            </Row>\n            <Row justify=\"center\">\n              <Col md={24} xs={24}>\n                <Table rowKey=\"id\" dataSource={data} columns={columns} />\n              </Col>\n            </Row>\n          </>\n        )}\n      </Page>\n    </Spin>\n  )\n}\n"],"sourceRoot":""}