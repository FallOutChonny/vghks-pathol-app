{"version":3,"sources":["../node_modules/diff/dist/diff.js","../node_modules/hogan.js/lib/hogan.js","../node_modules/hogan.js/lib/compiler.js","../node_modules/hogan.js/lib/template.js","../../src/types.ts","../../src/utils.ts","../../src/diff-parser.ts","../../src/rematch.ts","../../src/render-utils.ts","../../src/line-by-line-renderer.ts","../../src/side-by-side-renderer.ts","../../src/diff2html-templates.ts","../../src/hoganjs-utils.ts","../../src/diff2html.ts","../../src/file-list-renderer.ts"],"names":["exports","Diff","buildValues","diff","components","newString","oldString","useLongestToken","componentPos","componentLen","length","newPos","oldPos","component","removed","value","join","slice","count","added","tmp","map","i","oldValue","lastComponent","equals","pop","clonePath","path","prototype","options","arguments","undefined","callback","this","self","done","setTimeout","castInput","removeEmpty","tokenize","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","execEditLength","diagonalPath","basePath","addPath","removePath","_oldPos","canAdd","canRemove","pushComponent","exec","ret","last","push","commonCount","left","right","comparator","ignoreCase","toLowerCase","array","split","chars","characterDiff","generateOptions","defaults","name","hasOwnProperty","extendedWordChars","reWhitespace","wordDiff","ignoreWhitespace","test","tokens","splice","lineDiff","diffLines","oldStr","newStr","retLines","linesAndNewlines","line","newlineIsToken","trim","sentenceDiff","cssDiff","_typeof","obj","Symbol","iterator","constructor","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","Object","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","objectPrototypeToString","jsonDiff","canonicalize","stack","replacementStack","replacer","key","canonicalizedObj","toJSON","_key","sortedKeys","sort","_this$options","undefinedReplacement","_this$options$stringi","stringifyReplacer","k","v","JSON","stringify","replace","arrayDiff","parsePatch","uniDiff","diffstr","delimiters","match","list","parseIndex","index","header","parseFileHeader","hunks","_line","parseHunk","strict","Error","fileHeader","keyPrefix","data","fileName","substr","chunkHeaderIndex","chunkHeader","hunk","oldStart","oldLines","newStart","newLines","lines","linedelimiters","addCount","removeCount","indexOf","operation","distanceIterator","start","minLine","maxLine","wantForward","backwardExhausted","forwardExhausted","localOffset","applyPatch","source","removeEOFNL","addEOFNL","compareLine","lineNumber","patchContent","errorCount","fuzzFactor","offset","hunkFits","toPos","j","content","diffOffset","_i","_hunk","_toPos","delimiter","previousOperation","_k","structuredPatch","oldFileName","newFileName","oldHeader","newHeader","context","contextLines","entry","oldRangeStart","newRangeStart","curRange","oldLine","newLine","_loop","current","_curRange","prev","apply","_curRange2","_curRange3","contextSize","Math","min","oldEOFNewline","newEOFNewline","noNlBeforeAdds","createTwoFilesPatch","arrayStartsWith","calcLineCount","_calcOldNewLineCount","calcOldNewLineCount","forEach","myCount","mine","theirCount","theirs","loadPatch","param","base","fileNameChanged","patch","selectField","conflict","hunkBefore","check","cloneHunk","mergeLines","mineOffset","mineLines","theirOffset","theirLines","their","insertLeading","mineCurrent","theirCurrent","_hunk$lines","collectChange","_hunk$lines2","removal","mutualChange","insertTrailing","a","b","myChanges","theirChanges","allRemoves","_hunk$lines3","_hunk$lines4","skipRemoveSuperset","_hunk$lines5","swap","_hunk$lines6","state","matchChanges","changes","merged","matchIndex","contextChanges","conflicted","change","collectContext","insert","reduce","removeChanges","delta","changeContent","escapeHTML","s","n","diffChars","diffWords","diffWordsWithSpace","diffTrimmedLines","diffSentences","diffCss","diffJson","oldObj","newObj","diffArrays","oldArr","newArr","createPatch","applyPatches","currentIndex","processIndex","complete","loadFile","err","updatedContent","patched","merge","mineIndex","theirsIndex","theirsOffset","Infinity","theirsCurrent","mergedHunk","convertChangesToDMP","convertChangesToXML","defineProperty","factory","Hogan","require","Template","template","module","rIsWhitespace","rQuot","rNewline","rCr","rSlash","rLineSep","rParagraphSep","cleanTripleStache","token","substring","tagChange","tag","text","charAt","l","tags","scan","len","tagType","buf","seenTag","lineStart","otag","ctag","addBuf","String","filterLine","haveSeenTag","noNewLine","isAllWhitespace","lineIsWhitespace","next","indent","changeDelimiters","close","closeIndex","allowedInSuper","isOpener","o","isCloser","open","c","stringifyPartials","codeObj","partials","esc","items","stringifySubstitutions","subs","wrapMain","code","serialNo","chooseMethod","createPartial","node","sym","prefix","tripleStache","write","generate","tree","walk","asString","makeTemplate","makePartials","Function","codegen","end","nodes","ctx","inPartial","nodelist","func","parse","buildTree","kind","customTags","tail","instructions","opener","shift","sectionTags","cache","cacheKey","disableLambda","modelGet","compile","instance","findInScope","scope","doModelGet","val","get","compiler","r","str","coerceToString","hChars","rAmp","rLt","rGt","rApos","t","render","ri","ep","symbol","partial","stackText","activeSub","stackSubs","stackPartials","PartialTemplate","Substitutions","subsText","createSpecializedPartial","rp","rs","section","inverted","pass","ms","d","returnFound","found","names","f","cx","mv","ls","oldTags","ct","fl","textSource","result","sub","startsWithAny","LineByLineRenderer","file","SideBySideRenderer","defaultTemplates","p"],"mappings":"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","file":"static/js/6.a652e781.chunk.js","sourcesContent":["/*!\n\n diff v4.0.1\n\nSoftware License Agreement (BSD License)\n\nCopyright (c) 2009-2015, Kevin Decker <kpdecker@gmail.com>\n\nAll rights reserved.\n\nRedistribution and use of this software in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above\n  copyright notice, this list of conditions and the\n  following disclaimer.\n\n* Redistributions in binary form must reproduce the above\n  copyright notice, this list of conditions and the\n  following disclaimer in the documentation and/or other\n  materials provided with the distribution.\n\n* Neither the name of Kevin Decker nor the names of its\n  contributors may be used to endorse or promote products\n  derived from this software without specific prior\n  written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\nIN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\nOF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n@license\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.Diff = {}));\n}(this, function (exports) { 'use strict';\n\n  function Diff() {}\n  Diff.prototype = {\n    diff: function diff(oldString, newString) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var callback = options.callback;\n\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      this.options = options;\n      var self = this;\n\n      function done(value) {\n        if (callback) {\n          setTimeout(function () {\n            callback(undefined, value);\n          }, 0);\n          return true;\n        } else {\n          return value;\n        }\n      } // Allow subclasses to massage the input prior to running\n\n\n      oldString = this.castInput(oldString);\n      newString = this.castInput(newString);\n      oldString = this.removeEmpty(this.tokenize(oldString));\n      newString = this.removeEmpty(this.tokenize(newString));\n      var newLen = newString.length,\n          oldLen = oldString.length;\n      var editLength = 1;\n      var maxEditLength = newLen + oldLen;\n      var bestPath = [{\n        newPos: -1,\n        components: []\n      }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n      var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n      if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n        // Identity per the equality and tokenizer\n        return done([{\n          value: this.join(newString),\n          count: newString.length\n        }]);\n      } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n      function execEditLength() {\n        for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n          var basePath = void 0;\n\n          var addPath = bestPath[diagonalPath - 1],\n              removePath = bestPath[diagonalPath + 1],\n              _oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n          if (addPath) {\n            // No one else is going to attempt to use this value, clear it\n            bestPath[diagonalPath - 1] = undefined;\n          }\n\n          var canAdd = addPath && addPath.newPos + 1 < newLen,\n              canRemove = removePath && 0 <= _oldPos && _oldPos < oldLen;\n\n          if (!canAdd && !canRemove) {\n            // If this path is a terminal then prune\n            bestPath[diagonalPath] = undefined;\n            continue;\n          } // Select the diagonal that we want to branch from. We select the prior\n          // path whose position in the new string is the farthest from the origin\n          // and does not pass the bounds of the diff graph\n\n\n          if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n            basePath = clonePath(removePath);\n            self.pushComponent(basePath.components, undefined, true);\n          } else {\n            basePath = addPath; // No need to clone, we've pulled it from the list\n\n            basePath.newPos++;\n            self.pushComponent(basePath.components, true, undefined);\n          }\n\n          _oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath); // If we have hit the end of both strings, then we are done\n\n          if (basePath.newPos + 1 >= newLen && _oldPos + 1 >= oldLen) {\n            return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n          } else {\n            // Otherwise track this path as a potential candidate and continue.\n            bestPath[diagonalPath] = basePath;\n          }\n        }\n\n        editLength++;\n      } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n      // sync and async mode which is never fun. Loops over execEditLength until a value\n      // is produced.\n\n\n      if (callback) {\n        (function exec() {\n          setTimeout(function () {\n            // This should not happen, but we want to be safe.\n\n            /* istanbul ignore next */\n            if (editLength > maxEditLength) {\n              return callback();\n            }\n\n            if (!execEditLength()) {\n              exec();\n            }\n          }, 0);\n        })();\n      } else {\n        while (editLength <= maxEditLength) {\n          var ret = execEditLength();\n\n          if (ret) {\n            return ret;\n          }\n        }\n      }\n    },\n    pushComponent: function pushComponent(components, added, removed) {\n      var last = components[components.length - 1];\n\n      if (last && last.added === added && last.removed === removed) {\n        // We need to clone here as the component clone operation is just\n        // as shallow array clone\n        components[components.length - 1] = {\n          count: last.count + 1,\n          added: added,\n          removed: removed\n        };\n      } else {\n        components.push({\n          count: 1,\n          added: added,\n          removed: removed\n        });\n      }\n    },\n    extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n      var newLen = newString.length,\n          oldLen = oldString.length,\n          newPos = basePath.newPos,\n          oldPos = newPos - diagonalPath,\n          commonCount = 0;\n\n      while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n        newPos++;\n        oldPos++;\n        commonCount++;\n      }\n\n      if (commonCount) {\n        basePath.components.push({\n          count: commonCount\n        });\n      }\n\n      basePath.newPos = newPos;\n      return oldPos;\n    },\n    equals: function equals(left, right) {\n      if (this.options.comparator) {\n        return this.options.comparator(left, right);\n      } else {\n        return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n      }\n    },\n    removeEmpty: function removeEmpty(array) {\n      var ret = [];\n\n      for (var i = 0; i < array.length; i++) {\n        if (array[i]) {\n          ret.push(array[i]);\n        }\n      }\n\n      return ret;\n    },\n    castInput: function castInput(value) {\n      return value;\n    },\n    tokenize: function tokenize(value) {\n      return value.split('');\n    },\n    join: function join(chars) {\n      return chars.join('');\n    }\n  };\n\n  function buildValues(diff, components, newString, oldString, useLongestToken) {\n    var componentPos = 0,\n        componentLen = components.length,\n        newPos = 0,\n        oldPos = 0;\n\n    for (; componentPos < componentLen; componentPos++) {\n      var component = components[componentPos];\n\n      if (!component.removed) {\n        if (!component.added && useLongestToken) {\n          var value = newString.slice(newPos, newPos + component.count);\n          value = value.map(function (value, i) {\n            var oldValue = oldString[oldPos + i];\n            return oldValue.length > value.length ? oldValue : value;\n          });\n          component.value = diff.join(value);\n        } else {\n          component.value = diff.join(newString.slice(newPos, newPos + component.count));\n        }\n\n        newPos += component.count; // Common case\n\n        if (!component.added) {\n          oldPos += component.count;\n        }\n      } else {\n        component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n        oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n        // The diffing algorithm is tied to add then remove output and this is the simplest\n        // route to get the desired output with minimal overhead.\n\n        if (componentPos && components[componentPos - 1].added) {\n          var tmp = components[componentPos - 1];\n          components[componentPos - 1] = components[componentPos];\n          components[componentPos] = tmp;\n        }\n      }\n    } // Special case handle for when one terminal is ignored (i.e. whitespace).\n    // For this case we merge the terminal into the prior string and drop the change.\n    // This is only available for string mode.\n\n\n    var lastComponent = components[componentLen - 1];\n\n    if (componentLen > 1 && typeof lastComponent.value === 'string' && (lastComponent.added || lastComponent.removed) && diff.equals('', lastComponent.value)) {\n      components[componentLen - 2].value += lastComponent.value;\n      components.pop();\n    }\n\n    return components;\n  }\n\n  function clonePath(path) {\n    return {\n      newPos: path.newPos,\n      components: path.components.slice(0)\n    };\n  }\n\n  var characterDiff = new Diff();\n  function diffChars(oldStr, newStr, options) {\n    return characterDiff.diff(oldStr, newStr, options);\n  }\n\n  function generateOptions(options, defaults) {\n    if (typeof options === 'function') {\n      defaults.callback = options;\n    } else if (options) {\n      for (var name in options) {\n        /* istanbul ignore else */\n        if (options.hasOwnProperty(name)) {\n          defaults[name] = options[name];\n        }\n      }\n    }\n\n    return defaults;\n  }\n\n  //\n  // Ranges and exceptions:\n  // Latin-1 Supplement, 0080–00FF\n  //  - U+00D7  × Multiplication sign\n  //  - U+00F7  ÷ Division sign\n  // Latin Extended-A, 0100–017F\n  // Latin Extended-B, 0180–024F\n  // IPA Extensions, 0250–02AF\n  // Spacing Modifier Letters, 02B0–02FF\n  //  - U+02C7  ˇ &#711;  Caron\n  //  - U+02D8  ˘ &#728;  Breve\n  //  - U+02D9  ˙ &#729;  Dot Above\n  //  - U+02DA  ˚ &#730;  Ring Above\n  //  - U+02DB  ˛ &#731;  Ogonek\n  //  - U+02DC  ˜ &#732;  Small Tilde\n  //  - U+02DD  ˝ &#733;  Double Acute Accent\n  // Latin Extended Additional, 1E00–1EFF\n\n  var extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\n  var reWhitespace = /\\S/;\n  var wordDiff = new Diff();\n\n  wordDiff.equals = function (left, right) {\n    if (this.options.ignoreCase) {\n      left = left.toLowerCase();\n      right = right.toLowerCase();\n    }\n\n    return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n  };\n\n  wordDiff.tokenize = function (value) {\n    var tokens = value.split(/(\\s+|[()[\\]{}'\"]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n    for (var i = 0; i < tokens.length - 1; i++) {\n      // If we have an empty string in the next field and we have only word chars before and after, merge\n      if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n        tokens[i] += tokens[i + 2];\n        tokens.splice(i + 1, 2);\n        i--;\n      }\n    }\n\n    return tokens;\n  };\n\n  function diffWords(oldStr, newStr, options) {\n    options = generateOptions(options, {\n      ignoreWhitespace: true\n    });\n    return wordDiff.diff(oldStr, newStr, options);\n  }\n  function diffWordsWithSpace(oldStr, newStr, options) {\n    return wordDiff.diff(oldStr, newStr, options);\n  }\n\n  var lineDiff = new Diff();\n\n  lineDiff.tokenize = function (value) {\n    var retLines = [],\n        linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n    if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n      linesAndNewlines.pop();\n    } // Merge the content and line separators into single tokens\n\n\n    for (var i = 0; i < linesAndNewlines.length; i++) {\n      var line = linesAndNewlines[i];\n\n      if (i % 2 && !this.options.newlineIsToken) {\n        retLines[retLines.length - 1] += line;\n      } else {\n        if (this.options.ignoreWhitespace) {\n          line = line.trim();\n        }\n\n        retLines.push(line);\n      }\n    }\n\n    return retLines;\n  };\n\n  function diffLines(oldStr, newStr, callback) {\n    return lineDiff.diff(oldStr, newStr, callback);\n  }\n  function diffTrimmedLines(oldStr, newStr, callback) {\n    var options = generateOptions(callback, {\n      ignoreWhitespace: true\n    });\n    return lineDiff.diff(oldStr, newStr, options);\n  }\n\n  var sentenceDiff = new Diff();\n\n  sentenceDiff.tokenize = function (value) {\n    return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n  };\n\n  function diffSentences(oldStr, newStr, callback) {\n    return sentenceDiff.diff(oldStr, newStr, callback);\n  }\n\n  var cssDiff = new Diff();\n\n  cssDiff.tokenize = function (value) {\n    return value.split(/([{}:;,]|\\s+)/);\n  };\n\n  function diffCss(oldStr, newStr, callback) {\n    return cssDiff.diff(oldStr, newStr, callback);\n  }\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var objectPrototypeToString = Object.prototype.toString;\n  var jsonDiff = new Diff(); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n  // dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\n  jsonDiff.useLongestToken = true;\n  jsonDiff.tokenize = lineDiff.tokenize;\n\n  jsonDiff.castInput = function (value) {\n    var _this$options = this.options,\n        undefinedReplacement = _this$options.undefinedReplacement,\n        _this$options$stringi = _this$options.stringifyReplacer,\n        stringifyReplacer = _this$options$stringi === void 0 ? function (k, v) {\n      return typeof v === 'undefined' ? undefinedReplacement : v;\n    } : _this$options$stringi;\n    return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n  };\n\n  jsonDiff.equals = function (left, right) {\n    return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n  };\n\n  function diffJson(oldObj, newObj, options) {\n    return jsonDiff.diff(oldObj, newObj, options);\n  } // This function handles the presence of circular references by bailing out when encountering an\n  // object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\n  function canonicalize(obj, stack, replacementStack, replacer, key) {\n    stack = stack || [];\n    replacementStack = replacementStack || [];\n\n    if (replacer) {\n      obj = replacer(key, obj);\n    }\n\n    var i;\n\n    for (i = 0; i < stack.length; i += 1) {\n      if (stack[i] === obj) {\n        return replacementStack[i];\n      }\n    }\n\n    var canonicalizedObj;\n\n    if ('[object Array]' === objectPrototypeToString.call(obj)) {\n      stack.push(obj);\n      canonicalizedObj = new Array(obj.length);\n      replacementStack.push(canonicalizedObj);\n\n      for (i = 0; i < obj.length; i += 1) {\n        canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n      }\n\n      stack.pop();\n      replacementStack.pop();\n      return canonicalizedObj;\n    }\n\n    if (obj && obj.toJSON) {\n      obj = obj.toJSON();\n    }\n\n    if (_typeof(obj) === 'object' && obj !== null) {\n      stack.push(obj);\n      canonicalizedObj = {};\n      replacementStack.push(canonicalizedObj);\n\n      var sortedKeys = [],\n          _key;\n\n      for (_key in obj) {\n        /* istanbul ignore else */\n        if (obj.hasOwnProperty(_key)) {\n          sortedKeys.push(_key);\n        }\n      }\n\n      sortedKeys.sort();\n\n      for (i = 0; i < sortedKeys.length; i += 1) {\n        _key = sortedKeys[i];\n        canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n      }\n\n      stack.pop();\n      replacementStack.pop();\n    } else {\n      canonicalizedObj = obj;\n    }\n\n    return canonicalizedObj;\n  }\n\n  var arrayDiff = new Diff();\n\n  arrayDiff.tokenize = function (value) {\n    return value.slice();\n  };\n\n  arrayDiff.join = arrayDiff.removeEmpty = function (value) {\n    return value;\n  };\n\n  function diffArrays(oldArr, newArr, callback) {\n    return arrayDiff.diff(oldArr, newArr, callback);\n  }\n\n  function parsePatch(uniDiff) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n        delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n        list = [],\n        i = 0;\n\n    function parseIndex() {\n      var index = {};\n      list.push(index); // Parse diff metadata\n\n      while (i < diffstr.length) {\n        var line = diffstr[i]; // File header found, end parsing diff metadata\n\n        if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n          break;\n        } // Diff index\n\n\n        var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n        if (header) {\n          index.index = header[1];\n        }\n\n        i++;\n      } // Parse file headers if they are defined. Unified diff requires them, but\n      // there's no technical issues to have an isolated hunk without file header\n\n\n      parseFileHeader(index);\n      parseFileHeader(index); // Parse hunks\n\n      index.hunks = [];\n\n      while (i < diffstr.length) {\n        var _line = diffstr[i];\n\n        if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n          break;\n        } else if (/^@@/.test(_line)) {\n          index.hunks.push(parseHunk());\n        } else if (_line && options.strict) {\n          // Ignore unexpected content unless in strict mode\n          throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n        } else {\n          i++;\n        }\n      }\n    } // Parses the --- and +++ headers, if none are found, no lines\n    // are consumed.\n\n\n    function parseFileHeader(index) {\n      var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n      if (fileHeader) {\n        var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n        var data = fileHeader[2].split('\\t', 2);\n        var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n        if (/^\".*\"$/.test(fileName)) {\n          fileName = fileName.substr(1, fileName.length - 2);\n        }\n\n        index[keyPrefix + 'FileName'] = fileName;\n        index[keyPrefix + 'Header'] = (data[1] || '').trim();\n        i++;\n      }\n    } // Parses a hunk\n    // This assumes that we are at the start of a hunk.\n\n\n    function parseHunk() {\n      var chunkHeaderIndex = i,\n          chunkHeaderLine = diffstr[i++],\n          chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n      var hunk = {\n        oldStart: +chunkHeader[1],\n        oldLines: +chunkHeader[2] || 1,\n        newStart: +chunkHeader[3],\n        newLines: +chunkHeader[4] || 1,\n        lines: [],\n        linedelimiters: []\n      };\n      var addCount = 0,\n          removeCount = 0;\n\n      for (; i < diffstr.length; i++) {\n        // Lines starting with '---' could be mistaken for the \"remove line\" operation\n        // But they could be the header for the next file. Therefore prune such cases out.\n        if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n          break;\n        }\n\n        var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n        if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n          hunk.lines.push(diffstr[i]);\n          hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n          if (operation === '+') {\n            addCount++;\n          } else if (operation === '-') {\n            removeCount++;\n          } else if (operation === ' ') {\n            addCount++;\n            removeCount++;\n          }\n        } else {\n          break;\n        }\n      } // Handle the empty block count case\n\n\n      if (!addCount && hunk.newLines === 1) {\n        hunk.newLines = 0;\n      }\n\n      if (!removeCount && hunk.oldLines === 1) {\n        hunk.oldLines = 0;\n      } // Perform optional sanity checking\n\n\n      if (options.strict) {\n        if (addCount !== hunk.newLines) {\n          throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n        }\n\n        if (removeCount !== hunk.oldLines) {\n          throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n        }\n      }\n\n      return hunk;\n    }\n\n    while (i < diffstr.length) {\n      parseIndex();\n    }\n\n    return list;\n  }\n\n  // Iterator that traverses in the range of [min, max], stepping\n  // by distance from a given start position. I.e. for [0, 4], with\n  // start of 2, this will iterate 2, 3, 1, 4, 0.\n  function distanceIterator (start, minLine, maxLine) {\n    var wantForward = true,\n        backwardExhausted = false,\n        forwardExhausted = false,\n        localOffset = 1;\n    return function iterator() {\n      if (wantForward && !forwardExhausted) {\n        if (backwardExhausted) {\n          localOffset++;\n        } else {\n          wantForward = false;\n        } // Check if trying to fit beyond text length, and if not, check it fits\n        // after offset location (or desired location on first iteration)\n\n\n        if (start + localOffset <= maxLine) {\n          return localOffset;\n        }\n\n        forwardExhausted = true;\n      }\n\n      if (!backwardExhausted) {\n        if (!forwardExhausted) {\n          wantForward = true;\n        } // Check if trying to fit before text beginning, and if not, check it fits\n        // before offset location\n\n\n        if (minLine <= start - localOffset) {\n          return -localOffset++;\n        }\n\n        backwardExhausted = true;\n        return iterator();\n      } // We tried to fit hunk before text beginning and beyond text length, then\n      // hunk can't fit on the text. Return undefined\n\n    };\n  }\n\n  function applyPatch(source, uniDiff) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (typeof uniDiff === 'string') {\n      uniDiff = parsePatch(uniDiff);\n    }\n\n    if (Array.isArray(uniDiff)) {\n      if (uniDiff.length > 1) {\n        throw new Error('applyPatch only works with a single input.');\n      }\n\n      uniDiff = uniDiff[0];\n    } // Apply the diff to the input\n\n\n    var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n        delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n        hunks = uniDiff.hunks,\n        compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) {\n      return line === patchContent;\n    },\n        errorCount = 0,\n        fuzzFactor = options.fuzzFactor || 0,\n        minLine = 0,\n        offset = 0,\n        removeEOFNL,\n        addEOFNL;\n    /**\n     * Checks if the hunk exactly fits on the provided location\n     */\n\n\n    function hunkFits(hunk, toPos) {\n      for (var j = 0; j < hunk.lines.length; j++) {\n        var line = hunk.lines[j],\n            operation = line.length > 0 ? line[0] : ' ',\n            content = line.length > 0 ? line.substr(1) : line;\n\n        if (operation === ' ' || operation === '-') {\n          // Context sanity check\n          if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n            errorCount++;\n\n            if (errorCount > fuzzFactor) {\n              return false;\n            }\n          }\n\n          toPos++;\n        }\n      }\n\n      return true;\n    } // Search best fit offsets for each hunk based on the previous ones\n\n\n    for (var i = 0; i < hunks.length; i++) {\n      var hunk = hunks[i],\n          maxLine = lines.length - hunk.oldLines,\n          localOffset = 0,\n          toPos = offset + hunk.oldStart - 1;\n      var iterator = distanceIterator(toPos, minLine, maxLine);\n\n      for (; localOffset !== undefined; localOffset = iterator()) {\n        if (hunkFits(hunk, toPos + localOffset)) {\n          hunk.offset = offset += localOffset;\n          break;\n        }\n      }\n\n      if (localOffset === undefined) {\n        return false;\n      } // Set lower text limit to end of the current hunk, so next ones don't try\n      // to fit over already patched text\n\n\n      minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n    } // Apply patch hunks\n\n\n    var diffOffset = 0;\n\n    for (var _i = 0; _i < hunks.length; _i++) {\n      var _hunk = hunks[_i],\n          _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n      diffOffset += _hunk.newLines - _hunk.oldLines;\n\n      if (_toPos < 0) {\n        // Creating a new file\n        _toPos = 0;\n      }\n\n      for (var j = 0; j < _hunk.lines.length; j++) {\n        var line = _hunk.lines[j],\n            operation = line.length > 0 ? line[0] : ' ',\n            content = line.length > 0 ? line.substr(1) : line,\n            delimiter = _hunk.linedelimiters[j];\n\n        if (operation === ' ') {\n          _toPos++;\n        } else if (operation === '-') {\n          lines.splice(_toPos, 1);\n          delimiters.splice(_toPos, 1);\n          /* istanbul ignore else */\n        } else if (operation === '+') {\n          lines.splice(_toPos, 0, content);\n          delimiters.splice(_toPos, 0, delimiter);\n          _toPos++;\n        } else if (operation === '\\\\') {\n          var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n          if (previousOperation === '+') {\n            removeEOFNL = true;\n          } else if (previousOperation === '-') {\n            addEOFNL = true;\n          }\n        }\n      }\n    } // Handle EOFNL insertion/removal\n\n\n    if (removeEOFNL) {\n      while (!lines[lines.length - 1]) {\n        lines.pop();\n        delimiters.pop();\n      }\n    } else if (addEOFNL) {\n      lines.push('');\n      delimiters.push('\\n');\n    }\n\n    for (var _k = 0; _k < lines.length - 1; _k++) {\n      lines[_k] = lines[_k] + delimiters[_k];\n    }\n\n    return lines.join('');\n  } // Wrapper that supports multiple file patches via callbacks.\n\n  function applyPatches(uniDiff, options) {\n    if (typeof uniDiff === 'string') {\n      uniDiff = parsePatch(uniDiff);\n    }\n\n    var currentIndex = 0;\n\n    function processIndex() {\n      var index = uniDiff[currentIndex++];\n\n      if (!index) {\n        return options.complete();\n      }\n\n      options.loadFile(index, function (err, data) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        var updatedContent = applyPatch(data, index, options);\n        options.patched(index, updatedContent, function (err) {\n          if (err) {\n            return options.complete(err);\n          }\n\n          processIndex();\n        });\n      });\n    }\n\n    processIndex();\n  }\n\n  function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (typeof options.context === 'undefined') {\n      options.context = 4;\n    }\n\n    var diff = diffLines(oldStr, newStr, options);\n    diff.push({\n      value: '',\n      lines: []\n    }); // Append an empty value to make cleanup easier\n\n    function contextLines(lines) {\n      return lines.map(function (entry) {\n        return ' ' + entry;\n      });\n    }\n\n    var hunks = [];\n    var oldRangeStart = 0,\n        newRangeStart = 0,\n        curRange = [],\n        oldLine = 1,\n        newLine = 1;\n\n    var _loop = function _loop(i) {\n      var current = diff[i],\n          lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n      current.lines = lines;\n\n      if (current.added || current.removed) {\n        var _curRange;\n\n        // If we have previous context, start with that\n        if (!oldRangeStart) {\n          var prev = diff[i - 1];\n          oldRangeStart = oldLine;\n          newRangeStart = newLine;\n\n          if (prev) {\n            curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n            oldRangeStart -= curRange.length;\n            newRangeStart -= curRange.length;\n          }\n        } // Output our changes\n\n\n        (_curRange = curRange).push.apply(_curRange, _toConsumableArray(lines.map(function (entry) {\n          return (current.added ? '+' : '-') + entry;\n        }))); // Track the updated file position\n\n\n        if (current.added) {\n          newLine += lines.length;\n        } else {\n          oldLine += lines.length;\n        }\n      } else {\n        // Identical context lines. Track line changes\n        if (oldRangeStart) {\n          // Close out any changes that have been output (or join overlapping)\n          if (lines.length <= options.context * 2 && i < diff.length - 2) {\n            var _curRange2;\n\n            // Overlapping\n            (_curRange2 = curRange).push.apply(_curRange2, _toConsumableArray(contextLines(lines)));\n          } else {\n            var _curRange3;\n\n            // end the range and output\n            var contextSize = Math.min(lines.length, options.context);\n\n            (_curRange3 = curRange).push.apply(_curRange3, _toConsumableArray(contextLines(lines.slice(0, contextSize))));\n\n            var hunk = {\n              oldStart: oldRangeStart,\n              oldLines: oldLine - oldRangeStart + contextSize,\n              newStart: newRangeStart,\n              newLines: newLine - newRangeStart + contextSize,\n              lines: curRange\n            };\n\n            if (i >= diff.length - 2 && lines.length <= options.context) {\n              // EOF is inside this hunk\n              var oldEOFNewline = /\\n$/.test(oldStr);\n              var newEOFNewline = /\\n$/.test(newStr);\n              var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n              if (!oldEOFNewline && noNlBeforeAdds) {\n                // special case: old has no eol and no trailing context; no-nl can end up before adds\n                curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n              }\n\n              if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n                curRange.push('\\\\ No newline at end of file');\n              }\n            }\n\n            hunks.push(hunk);\n            oldRangeStart = 0;\n            newRangeStart = 0;\n            curRange = [];\n          }\n        }\n\n        oldLine += lines.length;\n        newLine += lines.length;\n      }\n    };\n\n    for (var i = 0; i < diff.length; i++) {\n      _loop(i);\n    }\n\n    return {\n      oldFileName: oldFileName,\n      newFileName: newFileName,\n      oldHeader: oldHeader,\n      newHeader: newHeader,\n      hunks: hunks\n    };\n  }\n  function createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n    var diff = structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options);\n    var ret = [];\n\n    if (oldFileName == newFileName) {\n      ret.push('Index: ' + oldFileName);\n    }\n\n    ret.push('===================================================================');\n    ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n    ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n    for (var i = 0; i < diff.hunks.length; i++) {\n      var hunk = diff.hunks[i];\n      ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n      ret.push.apply(ret, hunk.lines);\n    }\n\n    return ret.join('\\n') + '\\n';\n  }\n  function createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n    return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n  }\n\n  function arrayEqual(a, b) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    return arrayStartsWith(a, b);\n  }\n  function arrayStartsWith(array, start) {\n    if (start.length > array.length) {\n      return false;\n    }\n\n    for (var i = 0; i < start.length; i++) {\n      if (start[i] !== array[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function calcLineCount(hunk) {\n    var _calcOldNewLineCount = calcOldNewLineCount(hunk.lines),\n        oldLines = _calcOldNewLineCount.oldLines,\n        newLines = _calcOldNewLineCount.newLines;\n\n    if (oldLines !== undefined) {\n      hunk.oldLines = oldLines;\n    } else {\n      delete hunk.oldLines;\n    }\n\n    if (newLines !== undefined) {\n      hunk.newLines = newLines;\n    } else {\n      delete hunk.newLines;\n    }\n  }\n  function merge(mine, theirs, base) {\n    mine = loadPatch(mine, base);\n    theirs = loadPatch(theirs, base);\n    var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n    // Leaving sanity checks on this to the API consumer that may know more about the\n    // meaning in their own context.\n\n    if (mine.index || theirs.index) {\n      ret.index = mine.index || theirs.index;\n    }\n\n    if (mine.newFileName || theirs.newFileName) {\n      if (!fileNameChanged(mine)) {\n        // No header or no change in ours, use theirs (and ours if theirs does not exist)\n        ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n        ret.newFileName = theirs.newFileName || mine.newFileName;\n        ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n        ret.newHeader = theirs.newHeader || mine.newHeader;\n      } else if (!fileNameChanged(theirs)) {\n        // No header or no change in theirs, use ours\n        ret.oldFileName = mine.oldFileName;\n        ret.newFileName = mine.newFileName;\n        ret.oldHeader = mine.oldHeader;\n        ret.newHeader = mine.newHeader;\n      } else {\n        // Both changed... figure it out\n        ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n        ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n        ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n        ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n      }\n    }\n\n    ret.hunks = [];\n    var mineIndex = 0,\n        theirsIndex = 0,\n        mineOffset = 0,\n        theirsOffset = 0;\n\n    while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n      var mineCurrent = mine.hunks[mineIndex] || {\n        oldStart: Infinity\n      },\n          theirsCurrent = theirs.hunks[theirsIndex] || {\n        oldStart: Infinity\n      };\n\n      if (hunkBefore(mineCurrent, theirsCurrent)) {\n        // This patch does not overlap with any of the others, yay.\n        ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n        mineIndex++;\n        theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n      } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n        // This patch does not overlap with any of the others, yay.\n        ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n        theirsIndex++;\n        mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n      } else {\n        // Overlap, merge as best we can\n        var mergedHunk = {\n          oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n          oldLines: 0,\n          newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n          newLines: 0,\n          lines: []\n        };\n        mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n        theirsIndex++;\n        mineIndex++;\n        ret.hunks.push(mergedHunk);\n      }\n    }\n\n    return ret;\n  }\n\n  function loadPatch(param, base) {\n    if (typeof param === 'string') {\n      if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n        return parsePatch(param)[0];\n      }\n\n      if (!base) {\n        throw new Error('Must provide a base reference or pass in a patch');\n      }\n\n      return structuredPatch(undefined, undefined, base, param);\n    }\n\n    return param;\n  }\n\n  function fileNameChanged(patch) {\n    return patch.newFileName && patch.newFileName !== patch.oldFileName;\n  }\n\n  function selectField(index, mine, theirs) {\n    if (mine === theirs) {\n      return mine;\n    } else {\n      index.conflict = true;\n      return {\n        mine: mine,\n        theirs: theirs\n      };\n    }\n  }\n\n  function hunkBefore(test, check) {\n    return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n  }\n\n  function cloneHunk(hunk, offset) {\n    return {\n      oldStart: hunk.oldStart,\n      oldLines: hunk.oldLines,\n      newStart: hunk.newStart + offset,\n      newLines: hunk.newLines,\n      lines: hunk.lines\n    };\n  }\n\n  function mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n    // This will generally result in a conflicted hunk, but there are cases where the context\n    // is the only overlap where we can successfully merge the content here.\n    var mine = {\n      offset: mineOffset,\n      lines: mineLines,\n      index: 0\n    },\n        their = {\n      offset: theirOffset,\n      lines: theirLines,\n      index: 0\n    }; // Handle any leading content\n\n    insertLeading(hunk, mine, their);\n    insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n    while (mine.index < mine.lines.length && their.index < their.lines.length) {\n      var mineCurrent = mine.lines[mine.index],\n          theirCurrent = their.lines[their.index];\n\n      if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n        // Both modified ...\n        mutualChange(hunk, mine, their);\n      } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n        var _hunk$lines;\n\n        // Mine inserted\n        (_hunk$lines = hunk.lines).push.apply(_hunk$lines, _toConsumableArray(collectChange(mine)));\n      } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n        var _hunk$lines2;\n\n        // Theirs inserted\n        (_hunk$lines2 = hunk.lines).push.apply(_hunk$lines2, _toConsumableArray(collectChange(their)));\n      } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n        // Mine removed or edited\n        removal(hunk, mine, their);\n      } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n        // Their removed or edited\n        removal(hunk, their, mine, true);\n      } else if (mineCurrent === theirCurrent) {\n        // Context identity\n        hunk.lines.push(mineCurrent);\n        mine.index++;\n        their.index++;\n      } else {\n        // Context mismatch\n        conflict(hunk, collectChange(mine), collectChange(their));\n      }\n    } // Now push anything that may be remaining\n\n\n    insertTrailing(hunk, mine);\n    insertTrailing(hunk, their);\n    calcLineCount(hunk);\n  }\n\n  function mutualChange(hunk, mine, their) {\n    var myChanges = collectChange(mine),\n        theirChanges = collectChange(their);\n\n    if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n      // Special case for remove changes that are supersets of one another\n      if (arrayStartsWith(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n        var _hunk$lines3;\n\n        (_hunk$lines3 = hunk.lines).push.apply(_hunk$lines3, _toConsumableArray(myChanges));\n\n        return;\n      } else if (arrayStartsWith(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n        var _hunk$lines4;\n\n        (_hunk$lines4 = hunk.lines).push.apply(_hunk$lines4, _toConsumableArray(theirChanges));\n\n        return;\n      }\n    } else if (arrayEqual(myChanges, theirChanges)) {\n      var _hunk$lines5;\n\n      (_hunk$lines5 = hunk.lines).push.apply(_hunk$lines5, _toConsumableArray(myChanges));\n\n      return;\n    }\n\n    conflict(hunk, myChanges, theirChanges);\n  }\n\n  function removal(hunk, mine, their, swap) {\n    var myChanges = collectChange(mine),\n        theirChanges = collectContext(their, myChanges);\n\n    if (theirChanges.merged) {\n      var _hunk$lines6;\n\n      (_hunk$lines6 = hunk.lines).push.apply(_hunk$lines6, _toConsumableArray(theirChanges.merged));\n    } else {\n      conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n    }\n  }\n\n  function conflict(hunk, mine, their) {\n    hunk.conflict = true;\n    hunk.lines.push({\n      conflict: true,\n      mine: mine,\n      theirs: their\n    });\n  }\n\n  function insertLeading(hunk, insert, their) {\n    while (insert.offset < their.offset && insert.index < insert.lines.length) {\n      var line = insert.lines[insert.index++];\n      hunk.lines.push(line);\n      insert.offset++;\n    }\n  }\n\n  function insertTrailing(hunk, insert) {\n    while (insert.index < insert.lines.length) {\n      var line = insert.lines[insert.index++];\n      hunk.lines.push(line);\n    }\n  }\n\n  function collectChange(state) {\n    var ret = [],\n        operation = state.lines[state.index][0];\n\n    while (state.index < state.lines.length) {\n      var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n      if (operation === '-' && line[0] === '+') {\n        operation = '+';\n      }\n\n      if (operation === line[0]) {\n        ret.push(line);\n        state.index++;\n      } else {\n        break;\n      }\n    }\n\n    return ret;\n  }\n\n  function collectContext(state, matchChanges) {\n    var changes = [],\n        merged = [],\n        matchIndex = 0,\n        contextChanges = false,\n        conflicted = false;\n\n    while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n      var change = state.lines[state.index],\n          match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n      if (match[0] === '+') {\n        break;\n      }\n\n      contextChanges = contextChanges || change[0] !== ' ';\n      merged.push(match);\n      matchIndex++; // Consume any additions in the other block as a conflict to attempt\n      // to pull in the remaining context after this\n\n      if (change[0] === '+') {\n        conflicted = true;\n\n        while (change[0] === '+') {\n          changes.push(change);\n          change = state.lines[++state.index];\n        }\n      }\n\n      if (match.substr(1) === change.substr(1)) {\n        changes.push(change);\n        state.index++;\n      } else {\n        conflicted = true;\n      }\n    }\n\n    if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n      conflicted = true;\n    }\n\n    if (conflicted) {\n      return changes;\n    }\n\n    while (matchIndex < matchChanges.length) {\n      merged.push(matchChanges[matchIndex++]);\n    }\n\n    return {\n      merged: merged,\n      changes: changes\n    };\n  }\n\n  function allRemoves(changes) {\n    return changes.reduce(function (prev, change) {\n      return prev && change[0] === '-';\n    }, true);\n  }\n\n  function skipRemoveSuperset(state, removeChanges, delta) {\n    for (var i = 0; i < delta; i++) {\n      var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n      if (state.lines[state.index + i] !== ' ' + changeContent) {\n        return false;\n      }\n    }\n\n    state.index += delta;\n    return true;\n  }\n\n  function calcOldNewLineCount(lines) {\n    var oldLines = 0;\n    var newLines = 0;\n    lines.forEach(function (line) {\n      if (typeof line !== 'string') {\n        var myCount = calcOldNewLineCount(line.mine);\n        var theirCount = calcOldNewLineCount(line.theirs);\n\n        if (oldLines !== undefined) {\n          if (myCount.oldLines === theirCount.oldLines) {\n            oldLines += myCount.oldLines;\n          } else {\n            oldLines = undefined;\n          }\n        }\n\n        if (newLines !== undefined) {\n          if (myCount.newLines === theirCount.newLines) {\n            newLines += myCount.newLines;\n          } else {\n            newLines = undefined;\n          }\n        }\n      } else {\n        if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n          newLines++;\n        }\n\n        if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n          oldLines++;\n        }\n      }\n    });\n    return {\n      oldLines: oldLines,\n      newLines: newLines\n    };\n  }\n\n  // See: http://code.google.com/p/google-diff-match-patch/wiki/API\n  function convertChangesToDMP(changes) {\n    var ret = [],\n        change,\n        operation;\n\n    for (var i = 0; i < changes.length; i++) {\n      change = changes[i];\n\n      if (change.added) {\n        operation = 1;\n      } else if (change.removed) {\n        operation = -1;\n      } else {\n        operation = 0;\n      }\n\n      ret.push([operation, change.value]);\n    }\n\n    return ret;\n  }\n\n  function convertChangesToXML(changes) {\n    var ret = [];\n\n    for (var i = 0; i < changes.length; i++) {\n      var change = changes[i];\n\n      if (change.added) {\n        ret.push('<ins>');\n      } else if (change.removed) {\n        ret.push('<del>');\n      }\n\n      ret.push(escapeHTML(change.value));\n\n      if (change.added) {\n        ret.push('</ins>');\n      } else if (change.removed) {\n        ret.push('</del>');\n      }\n    }\n\n    return ret.join('');\n  }\n\n  function escapeHTML(s) {\n    var n = s;\n    n = n.replace(/&/g, '&amp;');\n    n = n.replace(/</g, '&lt;');\n    n = n.replace(/>/g, '&gt;');\n    n = n.replace(/\"/g, '&quot;');\n    return n;\n  }\n\n  /* See LICENSE file for terms of use */\n\n  exports.Diff = Diff;\n  exports.diffChars = diffChars;\n  exports.diffWords = diffWords;\n  exports.diffWordsWithSpace = diffWordsWithSpace;\n  exports.diffLines = diffLines;\n  exports.diffTrimmedLines = diffTrimmedLines;\n  exports.diffSentences = diffSentences;\n  exports.diffCss = diffCss;\n  exports.diffJson = diffJson;\n  exports.diffArrays = diffArrays;\n  exports.structuredPatch = structuredPatch;\n  exports.createTwoFilesPatch = createTwoFilesPatch;\n  exports.createPatch = createPatch;\n  exports.applyPatch = applyPatch;\n  exports.applyPatches = applyPatches;\n  exports.parsePatch = parsePatch;\n  exports.merge = merge;\n  exports.convertChangesToDMP = convertChangesToDMP;\n  exports.convertChangesToXML = convertChangesToXML;\n  exports.canonicalize = canonicalize;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n// This file is for use with Node.js. See dist/ for browser files.\n\nvar Hogan = require('./compiler');\nHogan.Template = require('./template').Template;\nHogan.template = Hogan.Template;\nmodule.exports = Hogan;\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n(function (Hogan) {\n  // Setup regex  assignments\n  // remove whitespace according to Mustache spec\n  var rIsWhitespace = /\\S/,\n      rQuot = /\\\"/g,\n      rNewline =  /\\n/g,\n      rCr = /\\r/g,\n      rSlash = /\\\\/g,\n      rLineSep = /\\u2028/,\n      rParagraphSep = /\\u2029/;\n\n  Hogan.tags = {\n    '#': 1, '^': 2, '<': 3, '$': 4,\n    '/': 5, '!': 6, '>': 7, '=': 8, '_v': 9,\n    '{': 10, '&': 11, '_t': 12\n  };\n\n  Hogan.scan = function scan(text, delimiters) {\n    var len = text.length,\n        IN_TEXT = 0,\n        IN_TAG_TYPE = 1,\n        IN_TAG = 2,\n        state = IN_TEXT,\n        tagType = null,\n        tag = null,\n        buf = '',\n        tokens = [],\n        seenTag = false,\n        i = 0,\n        lineStart = 0,\n        otag = '{{',\n        ctag = '}}';\n\n    function addBuf() {\n      if (buf.length > 0) {\n        tokens.push({tag: '_t', text: new String(buf)});\n        buf = '';\n      }\n    }\n\n    function lineIsWhitespace() {\n      var isAllWhitespace = true;\n      for (var j = lineStart; j < tokens.length; j++) {\n        isAllWhitespace =\n          (Hogan.tags[tokens[j].tag] < Hogan.tags['_v']) ||\n          (tokens[j].tag == '_t' && tokens[j].text.match(rIsWhitespace) === null);\n        if (!isAllWhitespace) {\n          return false;\n        }\n      }\n\n      return isAllWhitespace;\n    }\n\n    function filterLine(haveSeenTag, noNewLine) {\n      addBuf();\n\n      if (haveSeenTag && lineIsWhitespace()) {\n        for (var j = lineStart, next; j < tokens.length; j++) {\n          if (tokens[j].text) {\n            if ((next = tokens[j+1]) && next.tag == '>') {\n              // set indent to token value\n              next.indent = tokens[j].text.toString()\n            }\n            tokens.splice(j, 1);\n          }\n        }\n      } else if (!noNewLine) {\n        tokens.push({tag:'\\n'});\n      }\n\n      seenTag = false;\n      lineStart = tokens.length;\n    }\n\n    function changeDelimiters(text, index) {\n      var close = '=' + ctag,\n          closeIndex = text.indexOf(close, index),\n          delimiters = trim(\n            text.substring(text.indexOf('=', index) + 1, closeIndex)\n          ).split(' ');\n\n      otag = delimiters[0];\n      ctag = delimiters[delimiters.length - 1];\n\n      return closeIndex + close.length - 1;\n    }\n\n    if (delimiters) {\n      delimiters = delimiters.split(' ');\n      otag = delimiters[0];\n      ctag = delimiters[1];\n    }\n\n    for (i = 0; i < len; i++) {\n      if (state == IN_TEXT) {\n        if (tagChange(otag, text, i)) {\n          --i;\n          addBuf();\n          state = IN_TAG_TYPE;\n        } else {\n          if (text.charAt(i) == '\\n') {\n            filterLine(seenTag);\n          } else {\n            buf += text.charAt(i);\n          }\n        }\n      } else if (state == IN_TAG_TYPE) {\n        i += otag.length - 1;\n        tag = Hogan.tags[text.charAt(i + 1)];\n        tagType = tag ? text.charAt(i + 1) : '_v';\n        if (tagType == '=') {\n          i = changeDelimiters(text, i);\n          state = IN_TEXT;\n        } else {\n          if (tag) {\n            i++;\n          }\n          state = IN_TAG;\n        }\n        seenTag = i;\n      } else {\n        if (tagChange(ctag, text, i)) {\n          tokens.push({tag: tagType, n: trim(buf), otag: otag, ctag: ctag,\n                       i: (tagType == '/') ? seenTag - otag.length : i + ctag.length});\n          buf = '';\n          i += ctag.length - 1;\n          state = IN_TEXT;\n          if (tagType == '{') {\n            if (ctag == '}}') {\n              i++;\n            } else {\n              cleanTripleStache(tokens[tokens.length - 1]);\n            }\n          }\n        } else {\n          buf += text.charAt(i);\n        }\n      }\n    }\n\n    filterLine(seenTag, true);\n\n    return tokens;\n  }\n\n  function cleanTripleStache(token) {\n    if (token.n.substr(token.n.length - 1) === '}') {\n      token.n = token.n.substring(0, token.n.length - 1);\n    }\n  }\n\n  function trim(s) {\n    if (s.trim) {\n      return s.trim();\n    }\n\n    return s.replace(/^\\s*|\\s*$/g, '');\n  }\n\n  function tagChange(tag, text, index) {\n    if (text.charAt(index) != tag.charAt(0)) {\n      return false;\n    }\n\n    for (var i = 1, l = tag.length; i < l; i++) {\n      if (text.charAt(index + i) != tag.charAt(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // the tags allowed inside super templates\n  var allowedInSuper = {'_t': true, '\\n': true, '$': true, '/': true};\n\n  function buildTree(tokens, kind, stack, customTags) {\n    var instructions = [],\n        opener = null,\n        tail = null,\n        token = null;\n\n    tail = stack[stack.length - 1];\n\n    while (tokens.length > 0) {\n      token = tokens.shift();\n\n      if (tail && tail.tag == '<' && !(token.tag in allowedInSuper)) {\n        throw new Error('Illegal content in < super tag.');\n      }\n\n      if (Hogan.tags[token.tag] <= Hogan.tags['$'] || isOpener(token, customTags)) {\n        stack.push(token);\n        token.nodes = buildTree(tokens, token.tag, stack, customTags);\n      } else if (token.tag == '/') {\n        if (stack.length === 0) {\n          throw new Error('Closing tag without opener: /' + token.n);\n        }\n        opener = stack.pop();\n        if (token.n != opener.n && !isCloser(token.n, opener.n, customTags)) {\n          throw new Error('Nesting error: ' + opener.n + ' vs. ' + token.n);\n        }\n        opener.end = token.i;\n        return instructions;\n      } else if (token.tag == '\\n') {\n        token.last = (tokens.length == 0) || (tokens[0].tag == '\\n');\n      }\n\n      instructions.push(token);\n    }\n\n    if (stack.length > 0) {\n      throw new Error('missing closing tag: ' + stack.pop().n);\n    }\n\n    return instructions;\n  }\n\n  function isOpener(token, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].o == token.n) {\n        token.tag = '#';\n        return true;\n      }\n    }\n  }\n\n  function isCloser(close, open, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].c == close && tags[i].o == open) {\n        return true;\n      }\n    }\n  }\n\n  function stringifySubstitutions(obj) {\n    var items = [];\n    for (var key in obj) {\n      items.push('\"' + esc(key) + '\": function(c,p,t,i) {' + obj[key] + '}');\n    }\n    return \"{ \" + items.join(\",\") + \" }\";\n  }\n\n  function stringifyPartials(codeObj) {\n    var partials = [];\n    for (var key in codeObj.partials) {\n      partials.push('\"' + esc(key) + '\":{name:\"' + esc(codeObj.partials[key].name) + '\", ' + stringifyPartials(codeObj.partials[key]) + \"}\");\n    }\n    return \"partials: {\" + partials.join(\",\") + \"}, subs: \" + stringifySubstitutions(codeObj.subs);\n  }\n\n  Hogan.stringify = function(codeObj, text, options) {\n    return \"{code: function (c,p,i) { \" + Hogan.wrapMain(codeObj.code) + \" },\" + stringifyPartials(codeObj) +  \"}\";\n  }\n\n  var serialNo = 0;\n  Hogan.generate = function(tree, text, options) {\n    serialNo = 0;\n    var context = { code: '', subs: {}, partials: {} };\n    Hogan.walk(tree, context);\n\n    if (options.asString) {\n      return this.stringify(context, text, options);\n    }\n\n    return this.makeTemplate(context, text, options);\n  }\n\n  Hogan.wrapMain = function(code) {\n    return 'var t=this;t.b(i=i||\"\");' + code + 'return t.fl();';\n  }\n\n  Hogan.template = Hogan.Template;\n\n  Hogan.makeTemplate = function(codeObj, text, options) {\n    var template = this.makePartials(codeObj);\n    template.code = new Function('c', 'p', 'i', this.wrapMain(codeObj.code));\n    return new this.template(template, text, this, options);\n  }\n\n  Hogan.makePartials = function(codeObj) {\n    var key, template = {subs: {}, partials: codeObj.partials, name: codeObj.name};\n    for (key in template.partials) {\n      template.partials[key] = this.makePartials(template.partials[key]);\n    }\n    for (key in codeObj.subs) {\n      template.subs[key] = new Function('c', 'p', 't', 'i', codeObj.subs[key]);\n    }\n    return template;\n  }\n\n  function esc(s) {\n    return s.replace(rSlash, '\\\\\\\\')\n            .replace(rQuot, '\\\\\\\"')\n            .replace(rNewline, '\\\\n')\n            .replace(rCr, '\\\\r')\n            .replace(rLineSep, '\\\\u2028')\n            .replace(rParagraphSep, '\\\\u2029');\n  }\n\n  function chooseMethod(s) {\n    return (~s.indexOf('.')) ? 'd' : 'f';\n  }\n\n  function createPartial(node, context) {\n    var prefix = \"<\" + (context.prefix || \"\");\n    var sym = prefix + node.n + serialNo++;\n    context.partials[sym] = {name: node.n, partials: {}};\n    context.code += 't.b(t.rp(\"' +  esc(sym) + '\",c,p,\"' + (node.indent || '') + '\"));';\n    return sym;\n  }\n\n  Hogan.codegen = {\n    '#': function(node, context) {\n      context.code += 'if(t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),' +\n                      'c,p,0,' + node.i + ',' + node.end + ',\"' + node.otag + \" \" + node.ctag + '\")){' +\n                      't.rs(c,p,' + 'function(c,p,t){';\n      Hogan.walk(node.nodes, context);\n      context.code += '});c.pop();}';\n    },\n\n    '^': function(node, context) {\n      context.code += 'if(!t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),c,p,1,0,0,\"\")){';\n      Hogan.walk(node.nodes, context);\n      context.code += '};';\n    },\n\n    '>': createPartial,\n    '<': function(node, context) {\n      var ctx = {partials: {}, code: '', subs: {}, inPartial: true};\n      Hogan.walk(node.nodes, ctx);\n      var template = context.partials[createPartial(node, context)];\n      template.subs = ctx.subs;\n      template.partials = ctx.partials;\n    },\n\n    '$': function(node, context) {\n      var ctx = {subs: {}, code: '', partials: context.partials, prefix: node.n};\n      Hogan.walk(node.nodes, ctx);\n      context.subs[node.n] = ctx.code;\n      if (!context.inPartial) {\n        context.code += 't.sub(\"' + esc(node.n) + '\",c,p,i);';\n      }\n    },\n\n    '\\n': function(node, context) {\n      context.code += write('\"\\\\n\"' + (node.last ? '' : ' + i'));\n    },\n\n    '_v': function(node, context) {\n      context.code += 't.b(t.v(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n    },\n\n    '_t': function(node, context) {\n      context.code += write('\"' + esc(node.text) + '\"');\n    },\n\n    '{': tripleStache,\n\n    '&': tripleStache\n  }\n\n  function tripleStache(node, context) {\n    context.code += 't.b(t.t(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n  }\n\n  function write(s) {\n    return 't.b(' + s + ');';\n  }\n\n  Hogan.walk = function(nodelist, context) {\n    var func;\n    for (var i = 0, l = nodelist.length; i < l; i++) {\n      func = Hogan.codegen[nodelist[i].tag];\n      func && func(nodelist[i], context);\n    }\n    return context;\n  }\n\n  Hogan.parse = function(tokens, text, options) {\n    options = options || {};\n    return buildTree(tokens, '', [], options.sectionTags || []);\n  }\n\n  Hogan.cache = {};\n\n  Hogan.cacheKey = function(text, options) {\n    return [text, !!options.asString, !!options.disableLambda, options.delimiters, !!options.modelGet].join('||');\n  }\n\n  Hogan.compile = function(text, options) {\n    options = options || {};\n    var key = Hogan.cacheKey(text, options);\n    var template = this.cache[key];\n\n    if (template) {\n      var partials = template.partials;\n      for (var name in partials) {\n        delete partials[name].instance;\n      }\n      return template;\n    }\n\n    template = this.generate(this.parse(this.scan(text, options.delimiters), text, options), text, options);\n    return this.cache[key] = template;\n  }\n})(typeof exports !== 'undefined' ? exports : Hogan);\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nvar Hogan = {};\n\n(function (Hogan) {\n  Hogan.Template = function (codeObj, text, compiler, options) {\n    codeObj = codeObj || {};\n    this.r = codeObj.code || this.r;\n    this.c = compiler;\n    this.options = options || {};\n    this.text = text || '';\n    this.partials = codeObj.partials || {};\n    this.subs = codeObj.subs || {};\n    this.buf = '';\n  }\n\n  Hogan.Template.prototype = {\n    // render: replaced by generated code.\n    r: function (context, partials, indent) { return ''; },\n\n    // variable escaping\n    v: hoganEscape,\n\n    // triple stache\n    t: coerceToString,\n\n    render: function render(context, partials, indent) {\n      return this.ri([context], partials || {}, indent);\n    },\n\n    // render internal -- a hook for overrides that catches partials too\n    ri: function (context, partials, indent) {\n      return this.r(context, partials, indent);\n    },\n\n    // ensurePartial\n    ep: function(symbol, partials) {\n      var partial = this.partials[symbol];\n\n      // check to see that if we've instantiated this partial before\n      var template = partials[partial.name];\n      if (partial.instance && partial.base == template) {\n        return partial.instance;\n      }\n\n      if (typeof template == 'string') {\n        if (!this.c) {\n          throw new Error(\"No compiler available.\");\n        }\n        template = this.c.compile(template, this.options);\n      }\n\n      if (!template) {\n        return null;\n      }\n\n      // We use this to check whether the partials dictionary has changed\n      this.partials[symbol].base = template;\n\n      if (partial.subs) {\n        // Make sure we consider parent template now\n        if (!partials.stackText) partials.stackText = {};\n        for (key in partial.subs) {\n          if (!partials.stackText[key]) {\n            partials.stackText[key] = (this.activeSub !== undefined && partials.stackText[this.activeSub]) ? partials.stackText[this.activeSub] : this.text;\n          }\n        }\n        template = createSpecializedPartial(template, partial.subs, partial.partials,\n          this.stackSubs, this.stackPartials, partials.stackText);\n      }\n      this.partials[symbol].instance = template;\n\n      return template;\n    },\n\n    // tries to find a partial in the current scope and render it\n    rp: function(symbol, context, partials, indent) {\n      var partial = this.ep(symbol, partials);\n      if (!partial) {\n        return '';\n      }\n\n      return partial.ri(context, partials, indent);\n    },\n\n    // render a section\n    rs: function(context, partials, section) {\n      var tail = context[context.length - 1];\n\n      if (!isArray(tail)) {\n        section(context, partials, this);\n        return;\n      }\n\n      for (var i = 0; i < tail.length; i++) {\n        context.push(tail[i]);\n        section(context, partials, this);\n        context.pop();\n      }\n    },\n\n    // maybe start a section\n    s: function(val, ctx, partials, inverted, start, end, tags) {\n      var pass;\n\n      if (isArray(val) && val.length === 0) {\n        return false;\n      }\n\n      if (typeof val == 'function') {\n        val = this.ms(val, ctx, partials, inverted, start, end, tags);\n      }\n\n      pass = !!val;\n\n      if (!inverted && pass && ctx) {\n        ctx.push((typeof val == 'object') ? val : ctx[ctx.length - 1]);\n      }\n\n      return pass;\n    },\n\n    // find values with dotted names\n    d: function(key, ctx, partials, returnFound) {\n      var found,\n          names = key.split('.'),\n          val = this.f(names[0], ctx, partials, returnFound),\n          doModelGet = this.options.modelGet,\n          cx = null;\n\n      if (key === '.' && isArray(ctx[ctx.length - 2])) {\n        val = ctx[ctx.length - 1];\n      } else {\n        for (var i = 1; i < names.length; i++) {\n          found = findInScope(names[i], val, doModelGet);\n          if (found !== undefined) {\n            cx = val;\n            val = found;\n          } else {\n            val = '';\n          }\n        }\n      }\n\n      if (returnFound && !val) {\n        return false;\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        ctx.push(cx);\n        val = this.mv(val, ctx, partials);\n        ctx.pop();\n      }\n\n      return val;\n    },\n\n    // find values with normal names\n    f: function(key, ctx, partials, returnFound) {\n      var val = false,\n          v = null,\n          found = false,\n          doModelGet = this.options.modelGet;\n\n      for (var i = ctx.length - 1; i >= 0; i--) {\n        v = ctx[i];\n        val = findInScope(key, v, doModelGet);\n        if (val !== undefined) {\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        return (returnFound) ? false : \"\";\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        val = this.mv(val, ctx, partials);\n      }\n\n      return val;\n    },\n\n    // higher order templates\n    ls: function(func, cx, partials, text, tags) {\n      var oldTags = this.options.delimiters;\n\n      this.options.delimiters = tags;\n      this.b(this.ct(coerceToString(func.call(cx, text)), cx, partials));\n      this.options.delimiters = oldTags;\n\n      return false;\n    },\n\n    // compile text\n    ct: function(text, cx, partials) {\n      if (this.options.disableLambda) {\n        throw new Error('Lambda features disabled.');\n      }\n      return this.c.compile(text, this.options).render(cx, partials);\n    },\n\n    // template result buffering\n    b: function(s) { this.buf += s; },\n\n    fl: function() { var r = this.buf; this.buf = ''; return r; },\n\n    // method replace section\n    ms: function(func, ctx, partials, inverted, start, end, tags) {\n      var textSource,\n          cx = ctx[ctx.length - 1],\n          result = func.call(cx);\n\n      if (typeof result == 'function') {\n        if (inverted) {\n          return true;\n        } else {\n          textSource = (this.activeSub && this.subsText && this.subsText[this.activeSub]) ? this.subsText[this.activeSub] : this.text;\n          return this.ls(result, cx, partials, textSource.substring(start, end), tags);\n        }\n      }\n\n      return result;\n    },\n\n    // method replace variable\n    mv: function(func, ctx, partials) {\n      var cx = ctx[ctx.length - 1];\n      var result = func.call(cx);\n\n      if (typeof result == 'function') {\n        return this.ct(coerceToString(result.call(cx)), cx, partials);\n      }\n\n      return result;\n    },\n\n    sub: function(name, context, partials, indent) {\n      var f = this.subs[name];\n      if (f) {\n        this.activeSub = name;\n        f(context, partials, this, indent);\n        this.activeSub = false;\n      }\n    }\n\n  };\n\n  //Find a key in an object\n  function findInScope(key, scope, doModelGet) {\n    var val;\n\n    if (scope && typeof scope == 'object') {\n\n      if (scope[key] !== undefined) {\n        val = scope[key];\n\n      // try lookup with get for backbone or similar model data\n      } else if (doModelGet && scope.get && typeof scope.get == 'function') {\n        val = scope.get(key);\n      }\n    }\n\n    return val;\n  }\n\n  function createSpecializedPartial(instance, subs, partials, stackSubs, stackPartials, stackText) {\n    function PartialTemplate() {};\n    PartialTemplate.prototype = instance;\n    function Substitutions() {};\n    Substitutions.prototype = instance.subs;\n    var key;\n    var partial = new PartialTemplate();\n    partial.subs = new Substitutions();\n    partial.subsText = {};  //hehe. substext.\n    partial.buf = '';\n\n    stackSubs = stackSubs || {};\n    partial.stackSubs = stackSubs;\n    partial.subsText = stackText;\n    for (key in subs) {\n      if (!stackSubs[key]) stackSubs[key] = subs[key];\n    }\n    for (key in stackSubs) {\n      partial.subs[key] = stackSubs[key];\n    }\n\n    stackPartials = stackPartials || {};\n    partial.stackPartials = stackPartials;\n    for (key in partials) {\n      if (!stackPartials[key]) stackPartials[key] = partials[key];\n    }\n    for (key in stackPartials) {\n      partial.partials[key] = stackPartials[key];\n    }\n\n    return partial;\n  }\n\n  var rAmp = /&/g,\n      rLt = /</g,\n      rGt = />/g,\n      rApos = /\\'/g,\n      rQuot = /\\\"/g,\n      hChars = /[&<>\\\"\\']/;\n\n  function coerceToString(val) {\n    return String((val === null || val === undefined) ? '' : val);\n  }\n\n  function hoganEscape(str) {\n    str = coerceToString(str);\n    return hChars.test(str) ?\n      str\n        .replace(rAmp, '&amp;')\n        .replace(rLt, '&lt;')\n        .replace(rGt, '&gt;')\n        .replace(rApos, '&#39;')\n        .replace(rQuot, '&quot;') :\n      str;\n  }\n\n  var isArray = Array.isArray || function(a) {\n    return Object.prototype.toString.call(a) === '[object Array]';\n  };\n\n})(typeof exports !== 'undefined' ? exports : Hogan);\n","export var LineType;\n(function (LineType) {\n    LineType[\"INSERT\"] = \"insert\";\n    LineType[\"DELETE\"] = \"delete\";\n    LineType[\"CONTEXT\"] = \"context\";\n})(LineType || (LineType = {}));\nexport var OutputFormatType = {\n    LINE_BY_LINE: 'line-by-line',\n    SIDE_BY_SIDE: 'side-by-side',\n};\nexport var LineMatchingType = {\n    LINES: 'lines',\n    WORDS: 'words',\n    NONE: 'none',\n};\nexport var DiffStyleType = {\n    WORD: 'word',\n    CHAR: 'char',\n};\n//# sourceMappingURL=types.js.map","var specials = [\n    '-',\n    '[',\n    ']',\n    '/',\n    '{',\n    '}',\n    '(',\n    ')',\n    '*',\n    '+',\n    '?',\n    '.',\n    '\\\\',\n    '^',\n    '$',\n    '|',\n];\nvar regex = RegExp('[' + specials.join('\\\\') + ']', 'g');\nexport function escapeForRegExp(str) {\n    return str.replace(regex, '\\\\$&');\n}\nexport function unifyPath(path) {\n    return path ? path.replace(/\\\\/g, '/') : path;\n}\nexport function hashCode(text) {\n    var i, chr, len;\n    var hash = 0;\n    for (i = 0, len = text.length; i < len; i++) {\n        chr = text.charCodeAt(i);\n        hash = (hash << 5) - hash + chr;\n        hash |= 0;\n    }\n    return hash;\n}\n//# sourceMappingURL=utils.js.map","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { LineType } from './types';\nimport { escapeForRegExp } from './utils';\nfunction getExtension(filename, language) {\n    var filenameParts = filename.split('.');\n    return filenameParts.length > 1 ? filenameParts[filenameParts.length - 1] : language;\n}\nfunction startsWithAny(str, prefixes) {\n    return prefixes.reduce(function (startsWith, prefix) { return startsWith || str.startsWith(prefix); }, false);\n}\nvar baseDiffFilenamePrefixes = ['a/', 'b/', 'i/', 'w/', 'c/', 'o/'];\nfunction getFilename(line, linePrefix, extraPrefix) {\n    var prefixes = extraPrefix !== undefined ? __spreadArrays(baseDiffFilenamePrefixes, [extraPrefix]) : baseDiffFilenamePrefixes;\n    var FilenameRegExp = linePrefix\n        ? new RegExp(\"^\" + escapeForRegExp(linePrefix) + \" \\\"?(.+?)\\\"?$\")\n        : new RegExp('^\"?(.+?)\"?$');\n    var _a = FilenameRegExp.exec(line) || [], _b = _a[1], filename = _b === void 0 ? '' : _b;\n    var matchingPrefix = prefixes.find(function (p) { return filename.indexOf(p) === 0; });\n    var fnameWithoutPrefix = matchingPrefix ? filename.slice(matchingPrefix.length) : filename;\n    return fnameWithoutPrefix.replace(/\\s+\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)? [+-]\\d{4}.*$/, '');\n}\nfunction getSrcFilename(line, srcPrefix) {\n    return getFilename(line, '---', srcPrefix);\n}\nfunction getDstFilename(line, dstPrefix) {\n    return getFilename(line, '+++', dstPrefix);\n}\nexport function parse(diffInput, config) {\n    if (config === void 0) { config = {}; }\n    var files = [];\n    var currentFile = null;\n    var currentBlock = null;\n    var oldLine = null;\n    var oldLine2 = null;\n    var newLine = null;\n    var possibleOldName = null;\n    var possibleNewName = null;\n    var oldFileNameHeader = '--- ';\n    var newFileNameHeader = '+++ ';\n    var hunkHeaderPrefix = '@@';\n    var oldMode = /^old mode (\\d{6})/;\n    var newMode = /^new mode (\\d{6})/;\n    var deletedFileMode = /^deleted file mode (\\d{6})/;\n    var newFileMode = /^new file mode (\\d{6})/;\n    var copyFrom = /^copy from \"?(.+)\"?/;\n    var copyTo = /^copy to \"?(.+)\"?/;\n    var renameFrom = /^rename from \"?(.+)\"?/;\n    var renameTo = /^rename to \"?(.+)\"?/;\n    var similarityIndex = /^similarity index (\\d+)%/;\n    var dissimilarityIndex = /^dissimilarity index (\\d+)%/;\n    var index = /^index ([\\da-z]+)\\.\\.([\\da-z]+)\\s*(\\d{6})?/;\n    var binaryFiles = /^Binary files (.*) and (.*) differ/;\n    var binaryDiff = /^GIT binary patch/;\n    var combinedIndex = /^index ([\\da-z]+),([\\da-z]+)\\.\\.([\\da-z]+)/;\n    var combinedMode = /^mode (\\d{6}),(\\d{6})\\.\\.(\\d{6})/;\n    var combinedNewFile = /^new file mode (\\d{6})/;\n    var combinedDeletedFile = /^deleted file mode (\\d{6}),(\\d{6})/;\n    var diffLines = diffInput\n        .replace(/\\\\ No newline at end of file/g, '')\n        .replace(/\\r\\n?/g, '\\n')\n        .split('\\n');\n    function saveBlock() {\n        if (currentBlock !== null && currentFile !== null) {\n            currentFile.blocks.push(currentBlock);\n            currentBlock = null;\n        }\n    }\n    function saveFile() {\n        if (currentFile !== null) {\n            if (!currentFile.oldName && possibleOldName !== null) {\n                currentFile.oldName = possibleOldName;\n            }\n            if (!currentFile.newName && possibleNewName !== null) {\n                currentFile.newName = possibleNewName;\n            }\n            if (currentFile.newName) {\n                files.push(currentFile);\n                currentFile = null;\n            }\n        }\n        possibleOldName = null;\n        possibleNewName = null;\n    }\n    function startFile() {\n        saveBlock();\n        saveFile();\n        currentFile = {\n            blocks: [],\n            deletedLines: 0,\n            addedLines: 0,\n        };\n    }\n    function startBlock(line) {\n        saveBlock();\n        var values;\n        if (currentFile !== null) {\n            if ((values = /^@@ -(\\d+)(?:,\\d+)? \\+(\\d+)(?:,\\d+)? @@.*/.exec(line))) {\n                currentFile.isCombined = false;\n                oldLine = parseInt(values[1], 10);\n                newLine = parseInt(values[2], 10);\n            }\n            else if ((values = /^@@@ -(\\d+)(?:,\\d+)? -(\\d+)(?:,\\d+)? \\+(\\d+)(?:,\\d+)? @@@.*/.exec(line))) {\n                currentFile.isCombined = true;\n                oldLine = parseInt(values[1], 10);\n                oldLine2 = parseInt(values[2], 10);\n                newLine = parseInt(values[3], 10);\n            }\n            else {\n                if (line.startsWith(hunkHeaderPrefix)) {\n                    console.error('Failed to parse lines, starting in 0!');\n                }\n                oldLine = 0;\n                newLine = 0;\n                currentFile.isCombined = false;\n            }\n        }\n        currentBlock = {\n            lines: [],\n            oldStartLine: oldLine,\n            oldStartLine2: oldLine2,\n            newStartLine: newLine,\n            header: line,\n        };\n    }\n    function createLine(line) {\n        if (currentFile === null || currentBlock === null || oldLine === null || newLine === null)\n            return;\n        var currentLine = {\n            content: line,\n        };\n        var addedPrefixes = currentFile.isCombined ? ['+ ', ' +', '++'] : ['+'];\n        var deletedPrefixes = currentFile.isCombined ? ['- ', ' -', '--'] : ['-'];\n        if (startsWithAny(line, addedPrefixes)) {\n            currentFile.addedLines++;\n            currentLine.type = LineType.INSERT;\n            currentLine.oldNumber = undefined;\n            currentLine.newNumber = newLine++;\n        }\n        else if (startsWithAny(line, deletedPrefixes)) {\n            currentFile.deletedLines++;\n            currentLine.type = LineType.DELETE;\n            currentLine.oldNumber = oldLine++;\n            currentLine.newNumber = undefined;\n        }\n        else {\n            currentLine.type = LineType.CONTEXT;\n            currentLine.oldNumber = oldLine++;\n            currentLine.newNumber = newLine++;\n        }\n        currentBlock.lines.push(currentLine);\n    }\n    function existHunkHeader(line, lineIdx) {\n        var idx = lineIdx;\n        while (idx < diffLines.length - 3) {\n            if (line.startsWith('diff')) {\n                return false;\n            }\n            if (diffLines[idx].startsWith(oldFileNameHeader) &&\n                diffLines[idx + 1].startsWith(newFileNameHeader) &&\n                diffLines[idx + 2].startsWith(hunkHeaderPrefix)) {\n                return true;\n            }\n            idx++;\n        }\n        return false;\n    }\n    diffLines.forEach(function (line, lineIndex) {\n        if (!line || line.startsWith('*')) {\n            return;\n        }\n        var values;\n        var prevLine = diffLines[lineIndex - 1];\n        var nxtLine = diffLines[lineIndex + 1];\n        var afterNxtLine = diffLines[lineIndex + 2];\n        if (line.startsWith('diff')) {\n            startFile();\n            var gitDiffStart = /^diff --git \"?(.+)\"? \"?(.+)\"?/;\n            if ((values = gitDiffStart.exec(line))) {\n                possibleOldName = getFilename(values[1], undefined, config.dstPrefix);\n                possibleNewName = getFilename(values[2], undefined, config.srcPrefix);\n            }\n            if (currentFile === null) {\n                throw new Error('Where is my file !!!');\n            }\n            currentFile.isGitDiff = true;\n            return;\n        }\n        if (!currentFile ||\n            (!currentFile.isGitDiff &&\n                currentFile &&\n                line.startsWith(oldFileNameHeader) &&\n                nxtLine.startsWith(newFileNameHeader) &&\n                afterNxtLine.startsWith(hunkHeaderPrefix))) {\n            startFile();\n        }\n        if ((line.startsWith(oldFileNameHeader) && nxtLine.startsWith(newFileNameHeader)) ||\n            (line.startsWith(newFileNameHeader) && prevLine.startsWith(oldFileNameHeader))) {\n            if (currentFile &&\n                !currentFile.oldName &&\n                line.startsWith('--- ') &&\n                (values = getSrcFilename(line, config.srcPrefix))) {\n                currentFile.oldName = values;\n                currentFile.language = getExtension(currentFile.oldName, currentFile.language);\n                return;\n            }\n            if (currentFile &&\n                !currentFile.newName &&\n                line.startsWith('+++ ') &&\n                (values = getDstFilename(line, config.dstPrefix))) {\n                currentFile.newName = values;\n                currentFile.language = getExtension(currentFile.newName, currentFile.language);\n                return;\n            }\n        }\n        if (currentFile &&\n            (line.startsWith(hunkHeaderPrefix) ||\n                (currentFile.isGitDiff && currentFile.oldName && currentFile.newName && !currentBlock))) {\n            startBlock(line);\n            return;\n        }\n        if (currentBlock && (line.startsWith('+') || line.startsWith('-') || line.startsWith(' '))) {\n            createLine(line);\n            return;\n        }\n        var doesNotExistHunkHeader = !existHunkHeader(line, lineIndex);\n        if (currentFile === null) {\n            throw new Error('Where is my file !!!');\n        }\n        if ((values = oldMode.exec(line))) {\n            currentFile.oldMode = values[1];\n        }\n        else if ((values = newMode.exec(line))) {\n            currentFile.newMode = values[1];\n        }\n        else if ((values = deletedFileMode.exec(line))) {\n            currentFile.deletedFileMode = values[1];\n            currentFile.isDeleted = true;\n        }\n        else if ((values = newFileMode.exec(line))) {\n            currentFile.newFileMode = values[1];\n            currentFile.isNew = true;\n        }\n        else if ((values = copyFrom.exec(line))) {\n            if (doesNotExistHunkHeader) {\n                currentFile.oldName = values[1];\n            }\n            currentFile.isCopy = true;\n        }\n        else if ((values = copyTo.exec(line))) {\n            if (doesNotExistHunkHeader) {\n                currentFile.newName = values[1];\n            }\n            currentFile.isCopy = true;\n        }\n        else if ((values = renameFrom.exec(line))) {\n            if (doesNotExistHunkHeader) {\n                currentFile.oldName = values[1];\n            }\n            currentFile.isRename = true;\n        }\n        else if ((values = renameTo.exec(line))) {\n            if (doesNotExistHunkHeader) {\n                currentFile.newName = values[1];\n            }\n            currentFile.isRename = true;\n        }\n        else if ((values = binaryFiles.exec(line))) {\n            currentFile.isBinary = true;\n            currentFile.oldName = getFilename(values[1], undefined, config.srcPrefix);\n            currentFile.newName = getFilename(values[2], undefined, config.dstPrefix);\n            startBlock('Binary file');\n        }\n        else if (binaryDiff.test(line)) {\n            currentFile.isBinary = true;\n            startBlock(line);\n        }\n        else if ((values = similarityIndex.exec(line))) {\n            currentFile.unchangedPercentage = parseInt(values[1], 10);\n        }\n        else if ((values = dissimilarityIndex.exec(line))) {\n            currentFile.changedPercentage = parseInt(values[1], 10);\n        }\n        else if ((values = index.exec(line))) {\n            currentFile.checksumBefore = values[1];\n            currentFile.checksumAfter = values[2];\n            values[3] && (currentFile.mode = values[3]);\n        }\n        else if ((values = combinedIndex.exec(line))) {\n            currentFile.checksumBefore = [values[2], values[3]];\n            currentFile.checksumAfter = values[1];\n        }\n        else if ((values = combinedMode.exec(line))) {\n            currentFile.oldMode = [values[2], values[3]];\n            currentFile.newMode = values[1];\n        }\n        else if ((values = combinedNewFile.exec(line))) {\n            currentFile.newFileMode = values[1];\n            currentFile.isNew = true;\n        }\n        else if ((values = combinedDeletedFile.exec(line))) {\n            currentFile.deletedFileMode = values[1];\n            currentFile.isDeleted = true;\n        }\n    });\n    saveBlock();\n    saveFile();\n    return files;\n}\n//# sourceMappingURL=diff-parser.js.map","export function levenshtein(a, b) {\n    if (a.length === 0) {\n        return b.length;\n    }\n    if (b.length === 0) {\n        return a.length;\n    }\n    var matrix = [];\n    var i;\n    for (i = 0; i <= b.length; i++) {\n        matrix[i] = [i];\n    }\n    var j;\n    for (j = 0; j <= a.length; j++) {\n        matrix[0][j] = j;\n    }\n    for (i = 1; i <= b.length; i++) {\n        for (j = 1; j <= a.length; j++) {\n            if (b.charAt(i - 1) === a.charAt(j - 1)) {\n                matrix[i][j] = matrix[i - 1][j - 1];\n            }\n            else {\n                matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, Math.min(matrix[i][j - 1] + 1, matrix[i - 1][j] + 1));\n            }\n        }\n    }\n    return matrix[b.length][a.length];\n}\nexport function newDistanceFn(str) {\n    return function (x, y) {\n        var xValue = str(x).trim();\n        var yValue = str(y).trim();\n        var lev = levenshtein(xValue, yValue);\n        return lev / (xValue.length + yValue.length);\n    };\n}\nexport function newMatcherFn(distance) {\n    function findBestMatch(a, b, cache) {\n        if (cache === void 0) { cache = new Map(); }\n        var bestMatchDist = Infinity;\n        var bestMatch;\n        for (var i = 0; i < a.length; ++i) {\n            for (var j = 0; j < b.length; ++j) {\n                var cacheKey = JSON.stringify([a[i], b[j]]);\n                var md = void 0;\n                if (!(cache.has(cacheKey) && (md = cache.get(cacheKey)))) {\n                    md = distance(a[i], b[j]);\n                    cache.set(cacheKey, md);\n                }\n                if (md < bestMatchDist) {\n                    bestMatchDist = md;\n                    bestMatch = { indexA: i, indexB: j, score: bestMatchDist };\n                }\n            }\n        }\n        return bestMatch;\n    }\n    function group(a, b, level, cache) {\n        if (level === void 0) { level = 0; }\n        if (cache === void 0) { cache = new Map(); }\n        var bm = findBestMatch(a, b, cache);\n        if (!bm || a.length + b.length < 3) {\n            return [[a, b]];\n        }\n        var a1 = a.slice(0, bm.indexA);\n        var b1 = b.slice(0, bm.indexB);\n        var aMatch = [a[bm.indexA]];\n        var bMatch = [b[bm.indexB]];\n        var tailA = bm.indexA + 1;\n        var tailB = bm.indexB + 1;\n        var a2 = a.slice(tailA);\n        var b2 = b.slice(tailB);\n        var group1 = group(a1, b1, level + 1, cache);\n        var groupMatch = group(aMatch, bMatch, level + 1, cache);\n        var group2 = group(a2, b2, level + 1, cache);\n        var result = groupMatch;\n        if (bm.indexA > 0 || bm.indexB > 0) {\n            result = group1.concat(result);\n        }\n        if (a.length > tailA || b.length > tailB) {\n            result = result.concat(group2);\n        }\n        return result;\n    }\n    return group;\n}\n//# sourceMappingURL=rematch.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as jsDiff from 'diff';\nimport { unifyPath, hashCode } from './utils';\nimport * as rematch from './rematch';\nimport { LineMatchingType, DiffStyleType, LineType } from './types';\nexport var CSSLineClass = {\n    INSERTS: 'd2h-ins',\n    DELETES: 'd2h-del',\n    CONTEXT: 'd2h-cntx',\n    INFO: 'd2h-info',\n    INSERT_CHANGES: 'd2h-ins d2h-change',\n    DELETE_CHANGES: 'd2h-del d2h-change',\n};\nexport var defaultRenderConfig = {\n    matching: LineMatchingType.NONE,\n    matchWordsThreshold: 0.25,\n    maxLineLengthHighlight: 10000,\n    diffStyle: DiffStyleType.WORD,\n};\nvar separator = '/';\nvar distance = rematch.newDistanceFn(function (change) { return change.value; });\nvar matcher = rematch.newMatcherFn(distance);\nfunction isDevNullName(name) {\n    return name.indexOf('dev/null') !== -1;\n}\nfunction removeInsElements(line) {\n    return line.replace(/(<ins[^>]*>((.|\\n)*?)<\\/ins>)/g, '');\n}\nfunction removeDelElements(line) {\n    return line.replace(/(<del[^>]*>((.|\\n)*?)<\\/del>)/g, '');\n}\nexport function toCSSClass(lineType) {\n    switch (lineType) {\n        case LineType.CONTEXT:\n            return CSSLineClass.CONTEXT;\n        case LineType.INSERT:\n            return CSSLineClass.INSERTS;\n        case LineType.DELETE:\n            return CSSLineClass.DELETES;\n    }\n}\nfunction prefixLength(isCombined) {\n    return isCombined ? 2 : 1;\n}\nexport function escapeForHtml(str) {\n    return str\n        .slice(0)\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#x27;')\n        .replace(/\\//g, '&#x2F;');\n}\nexport function deconstructLine(line, isCombined, escape) {\n    if (escape === void 0) { escape = true; }\n    var indexToSplit = prefixLength(isCombined);\n    return {\n        prefix: line.substring(0, indexToSplit),\n        content: escape ? escapeForHtml(line.substring(indexToSplit)) : line.substring(indexToSplit),\n    };\n}\nexport function filenameDiff(file) {\n    var oldFilename = unifyPath(file.oldName);\n    var newFilename = unifyPath(file.newName);\n    if (oldFilename !== newFilename && !isDevNullName(oldFilename) && !isDevNullName(newFilename)) {\n        var prefixPaths = [];\n        var suffixPaths = [];\n        var oldFilenameParts = oldFilename.split(separator);\n        var newFilenameParts = newFilename.split(separator);\n        var oldFilenamePartsSize = oldFilenameParts.length;\n        var newFilenamePartsSize = newFilenameParts.length;\n        var i = 0;\n        var j = oldFilenamePartsSize - 1;\n        var k = newFilenamePartsSize - 1;\n        while (i < j && i < k) {\n            if (oldFilenameParts[i] === newFilenameParts[i]) {\n                prefixPaths.push(newFilenameParts[i]);\n                i += 1;\n            }\n            else {\n                break;\n            }\n        }\n        while (j > i && k > i) {\n            if (oldFilenameParts[j] === newFilenameParts[k]) {\n                suffixPaths.unshift(newFilenameParts[k]);\n                j -= 1;\n                k -= 1;\n            }\n            else {\n                break;\n            }\n        }\n        var finalPrefix = prefixPaths.join(separator);\n        var finalSuffix = suffixPaths.join(separator);\n        var oldRemainingPath = oldFilenameParts.slice(i, j + 1).join(separator);\n        var newRemainingPath = newFilenameParts.slice(i, k + 1).join(separator);\n        if (finalPrefix.length && finalSuffix.length) {\n            return (finalPrefix + separator + '{' + oldRemainingPath + ' → ' + newRemainingPath + '}' + separator + finalSuffix);\n        }\n        else if (finalPrefix.length) {\n            return finalPrefix + separator + '{' + oldRemainingPath + ' → ' + newRemainingPath + '}';\n        }\n        else if (finalSuffix.length) {\n            return '{' + oldRemainingPath + ' → ' + newRemainingPath + '}' + separator + finalSuffix;\n        }\n        return oldFilename + ' → ' + newFilename;\n    }\n    else if (!isDevNullName(newFilename)) {\n        return newFilename;\n    }\n    else {\n        return oldFilename;\n    }\n}\nexport function getHtmlId(file) {\n    return \"d2h-\" + hashCode(filenameDiff(file)).toString().slice(-6);\n}\nexport function getFileIcon(file) {\n    var templateName = 'file-changed';\n    if (file.isRename) {\n        templateName = 'file-renamed';\n    }\n    else if (file.isCopy) {\n        templateName = 'file-renamed';\n    }\n    else if (file.isNew) {\n        templateName = 'file-added';\n    }\n    else if (file.isDeleted) {\n        templateName = 'file-deleted';\n    }\n    else if (file.newName !== file.oldName) {\n        templateName = 'file-renamed';\n    }\n    return templateName;\n}\nexport function diffHighlight(diffLine1, diffLine2, isCombined, config) {\n    if (config === void 0) { config = {}; }\n    var _a = __assign(__assign({}, defaultRenderConfig), config), matching = _a.matching, maxLineLengthHighlight = _a.maxLineLengthHighlight, matchWordsThreshold = _a.matchWordsThreshold, diffStyle = _a.diffStyle;\n    var line1 = deconstructLine(diffLine1, isCombined, false);\n    var line2 = deconstructLine(diffLine2, isCombined, false);\n    if (line1.content.length > maxLineLengthHighlight || line2.content.length > maxLineLengthHighlight) {\n        return {\n            oldLine: {\n                prefix: line1.prefix,\n                content: escapeForHtml(line1.content),\n            },\n            newLine: {\n                prefix: line2.prefix,\n                content: escapeForHtml(line2.content),\n            },\n        };\n    }\n    var diff = diffStyle === 'char'\n        ? jsDiff.diffChars(line1.content, line2.content)\n        : jsDiff.diffWordsWithSpace(line1.content, line2.content);\n    var changedWords = [];\n    if (diffStyle === 'word' && matching === 'words') {\n        var removed = diff.filter(function (element) { return element.removed; });\n        var added = diff.filter(function (element) { return element.added; });\n        var chunks = matcher(added, removed);\n        chunks.forEach(function (chunk) {\n            if (chunk[0].length === 1 && chunk[1].length === 1) {\n                var dist = distance(chunk[0][0], chunk[1][0]);\n                if (dist < matchWordsThreshold) {\n                    changedWords.push(chunk[0][0]);\n                    changedWords.push(chunk[1][0]);\n                }\n            }\n        });\n    }\n    var highlightedLine = diff.reduce(function (highlightedLine, part) {\n        var elemType = part.added ? 'ins' : part.removed ? 'del' : null;\n        var addClass = changedWords.indexOf(part) > -1 ? ' class=\"d2h-change\"' : '';\n        var escapedValue = escapeForHtml(part.value);\n        return elemType !== null\n            ? highlightedLine + \"<\" + elemType + addClass + \">\" + escapedValue + \"</\" + elemType + \">\"\n            : \"\" + highlightedLine + escapedValue;\n    }, '');\n    return {\n        oldLine: {\n            prefix: line1.prefix,\n            content: removeInsElements(highlightedLine),\n        },\n        newLine: {\n            prefix: line2.prefix,\n            content: removeDelElements(highlightedLine),\n        },\n    };\n}\n//# sourceMappingURL=render-utils.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as Rematch from './rematch';\nimport * as renderUtils from './render-utils';\nimport { LineType, } from './types';\nexport var defaultLineByLineRendererConfig = __assign(__assign({}, renderUtils.defaultRenderConfig), { renderNothingWhenEmpty: false, matchingMaxComparisons: 2500, maxLineSizeInBlockForComparison: 200 });\nvar genericTemplatesPath = 'generic';\nvar baseTemplatesPath = 'line-by-line';\nvar iconsBaseTemplatesPath = 'icon';\nvar tagsBaseTemplatesPath = 'tag';\nvar LineByLineRenderer = (function () {\n    function LineByLineRenderer(hoganUtils, config) {\n        if (config === void 0) { config = {}; }\n        this.hoganUtils = hoganUtils;\n        this.config = __assign(__assign({}, defaultLineByLineRendererConfig), config);\n    }\n    LineByLineRenderer.prototype.render = function (diffFiles) {\n        var _this = this;\n        var diffsHtml = diffFiles\n            .map(function (file) {\n            var diffs;\n            if (file.blocks.length) {\n                diffs = _this.generateFileHtml(file);\n            }\n            else {\n                diffs = _this.generateEmptyDiff();\n            }\n            return _this.makeFileDiffHtml(file, diffs);\n        })\n            .join('\\n');\n        return this.hoganUtils.render(genericTemplatesPath, 'wrapper', { content: diffsHtml });\n    };\n    LineByLineRenderer.prototype.makeFileDiffHtml = function (file, diffs) {\n        if (this.config.renderNothingWhenEmpty && Array.isArray(file.blocks) && file.blocks.length === 0)\n            return '';\n        var fileDiffTemplate = this.hoganUtils.template(baseTemplatesPath, 'file-diff');\n        var filePathTemplate = this.hoganUtils.template(genericTemplatesPath, 'file-path');\n        var fileIconTemplate = this.hoganUtils.template(iconsBaseTemplatesPath, 'file');\n        var fileTagTemplate = this.hoganUtils.template(tagsBaseTemplatesPath, renderUtils.getFileIcon(file));\n        return fileDiffTemplate.render({\n            file: file,\n            fileHtmlId: renderUtils.getHtmlId(file),\n            diffs: diffs,\n            filePath: filePathTemplate.render({\n                fileDiffName: renderUtils.filenameDiff(file),\n            }, {\n                fileIcon: fileIconTemplate,\n                fileTag: fileTagTemplate,\n            }),\n        });\n    };\n    LineByLineRenderer.prototype.generateEmptyDiff = function () {\n        return this.hoganUtils.render(genericTemplatesPath, 'empty-diff', {\n            contentClass: 'd2h-code-line',\n            CSSLineClass: renderUtils.CSSLineClass,\n        });\n    };\n    LineByLineRenderer.prototype.generateFileHtml = function (file) {\n        var _this = this;\n        var matcher = Rematch.newMatcherFn(Rematch.newDistanceFn(function (e) { return renderUtils.deconstructLine(e.content, file.isCombined).content; }));\n        return file.blocks\n            .map(function (block) {\n            var lines = _this.hoganUtils.render(genericTemplatesPath, 'block-header', {\n                CSSLineClass: renderUtils.CSSLineClass,\n                blockHeader: renderUtils.escapeForHtml(block.header),\n                lineClass: 'd2h-code-linenumber',\n                contentClass: 'd2h-code-line',\n            });\n            _this.applyLineGroupping(block).forEach(function (_a) {\n                var contextLines = _a[0], oldLines = _a[1], newLines = _a[2];\n                if (oldLines.length && newLines.length && !contextLines.length) {\n                    _this.applyRematchMatching(oldLines, newLines, matcher).map(function (_a) {\n                        var oldLines = _a[0], newLines = _a[1];\n                        var _b = _this.processChangedLines(file.isCombined, oldLines, newLines), left = _b.left, right = _b.right;\n                        lines += left;\n                        lines += right;\n                    });\n                }\n                else if (contextLines.length) {\n                    contextLines.forEach(function (line) {\n                        var _a = renderUtils.deconstructLine(line.content, file.isCombined), prefix = _a.prefix, content = _a.content;\n                        lines += _this.generateSingleLineHtml({\n                            type: renderUtils.CSSLineClass.CONTEXT,\n                            prefix: prefix,\n                            content: content,\n                            oldNumber: line.oldNumber,\n                            newNumber: line.newNumber,\n                        });\n                    });\n                }\n                else if (oldLines.length || newLines.length) {\n                    var _b = _this.processChangedLines(file.isCombined, oldLines, newLines), left = _b.left, right = _b.right;\n                    lines += left;\n                    lines += right;\n                }\n                else {\n                    console.error('Unknown state reached while processing groups of lines', contextLines, oldLines, newLines);\n                }\n            });\n            return lines;\n        })\n            .join('\\n');\n    };\n    LineByLineRenderer.prototype.applyLineGroupping = function (block) {\n        var blockLinesGroups = [];\n        var oldLines = [];\n        var newLines = [];\n        for (var i = 0; i < block.lines.length; i++) {\n            var diffLine = block.lines[i];\n            if ((diffLine.type !== LineType.INSERT && newLines.length) ||\n                (diffLine.type === LineType.CONTEXT && oldLines.length > 0)) {\n                blockLinesGroups.push([[], oldLines, newLines]);\n                oldLines = [];\n                newLines = [];\n            }\n            if (diffLine.type === LineType.CONTEXT) {\n                blockLinesGroups.push([[diffLine], [], []]);\n            }\n            else if (diffLine.type === LineType.INSERT && oldLines.length === 0) {\n                blockLinesGroups.push([[], [], [diffLine]]);\n            }\n            else if (diffLine.type === LineType.INSERT && oldLines.length > 0) {\n                newLines.push(diffLine);\n            }\n            else if (diffLine.type === LineType.DELETE) {\n                oldLines.push(diffLine);\n            }\n        }\n        if (oldLines.length || newLines.length) {\n            blockLinesGroups.push([[], oldLines, newLines]);\n            oldLines = [];\n            newLines = [];\n        }\n        return blockLinesGroups;\n    };\n    LineByLineRenderer.prototype.applyRematchMatching = function (oldLines, newLines, matcher) {\n        var comparisons = oldLines.length * newLines.length;\n        var maxLineSizeInBlock = Math.max.apply(null, [0].concat(oldLines.concat(newLines).map(function (elem) { return elem.content.length; })));\n        var doMatching = comparisons < this.config.matchingMaxComparisons &&\n            maxLineSizeInBlock < this.config.maxLineSizeInBlockForComparison &&\n            (this.config.matching === 'lines' || this.config.matching === 'words');\n        return doMatching ? matcher(oldLines, newLines) : [[oldLines, newLines]];\n    };\n    LineByLineRenderer.prototype.processChangedLines = function (isCombined, oldLines, newLines) {\n        var fileHtml = {\n            right: '',\n            left: '',\n        };\n        var maxLinesNumber = Math.max(oldLines.length, newLines.length);\n        for (var i = 0; i < maxLinesNumber; i++) {\n            var oldLine = oldLines[i];\n            var newLine = newLines[i];\n            var diff = oldLine !== undefined && newLine !== undefined\n                ? renderUtils.diffHighlight(oldLine.content, newLine.content, isCombined, this.config)\n                : undefined;\n            var preparedOldLine = oldLine !== undefined && oldLine.oldNumber !== undefined\n                ? __assign(__assign({}, (diff !== undefined\n                    ? {\n                        prefix: diff.oldLine.prefix,\n                        content: diff.oldLine.content,\n                        type: renderUtils.CSSLineClass.DELETE_CHANGES,\n                    }\n                    : __assign(__assign({}, renderUtils.deconstructLine(oldLine.content, isCombined)), { type: renderUtils.toCSSClass(oldLine.type) }))), { oldNumber: oldLine.oldNumber, newNumber: oldLine.newNumber }) : undefined;\n            var preparedNewLine = newLine !== undefined && newLine.newNumber !== undefined\n                ? __assign(__assign({}, (diff !== undefined\n                    ? {\n                        prefix: diff.newLine.prefix,\n                        content: diff.newLine.content,\n                        type: renderUtils.CSSLineClass.INSERT_CHANGES,\n                    }\n                    : __assign(__assign({}, renderUtils.deconstructLine(newLine.content, isCombined)), { type: renderUtils.toCSSClass(newLine.type) }))), { oldNumber: newLine.oldNumber, newNumber: newLine.newNumber }) : undefined;\n            var _a = this.generateLineHtml(preparedOldLine, preparedNewLine), left = _a.left, right = _a.right;\n            fileHtml.left += left;\n            fileHtml.right += right;\n        }\n        return fileHtml;\n    };\n    LineByLineRenderer.prototype.generateLineHtml = function (oldLine, newLine) {\n        return {\n            left: this.generateSingleLineHtml(oldLine),\n            right: this.generateSingleLineHtml(newLine),\n        };\n    };\n    LineByLineRenderer.prototype.generateSingleLineHtml = function (line) {\n        if (line === undefined)\n            return '';\n        var lineNumberHtml = this.hoganUtils.render(baseTemplatesPath, 'numbers', {\n            oldNumber: line.oldNumber || '',\n            newNumber: line.newNumber || '',\n        });\n        return this.hoganUtils.render(genericTemplatesPath, 'line', {\n            type: line.type,\n            lineClass: 'd2h-code-linenumber',\n            contentClass: 'd2h-code-line',\n            prefix: line.prefix === ' ' ? '&nbsp;' : line.prefix,\n            content: line.content,\n            lineNumber: lineNumberHtml,\n        });\n    };\n    return LineByLineRenderer;\n}());\nexport default LineByLineRenderer;\n//# sourceMappingURL=line-by-line-renderer.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as Rematch from './rematch';\nimport * as renderUtils from './render-utils';\nimport { LineType, } from './types';\nexport var defaultSideBySideRendererConfig = __assign(__assign({}, renderUtils.defaultRenderConfig), { renderNothingWhenEmpty: false, matchingMaxComparisons: 2500, maxLineSizeInBlockForComparison: 200 });\nvar genericTemplatesPath = 'generic';\nvar baseTemplatesPath = 'side-by-side';\nvar iconsBaseTemplatesPath = 'icon';\nvar tagsBaseTemplatesPath = 'tag';\nvar SideBySideRenderer = (function () {\n    function SideBySideRenderer(hoganUtils, config) {\n        if (config === void 0) { config = {}; }\n        this.hoganUtils = hoganUtils;\n        this.config = __assign(__assign({}, defaultSideBySideRendererConfig), config);\n    }\n    SideBySideRenderer.prototype.render = function (diffFiles) {\n        var _this = this;\n        var diffsHtml = diffFiles\n            .map(function (file) {\n            var diffs;\n            if (file.blocks.length) {\n                diffs = _this.generateFileHtml(file);\n            }\n            else {\n                diffs = _this.generateEmptyDiff();\n            }\n            return _this.makeFileDiffHtml(file, diffs);\n        })\n            .join('\\n');\n        return this.hoganUtils.render(genericTemplatesPath, 'wrapper', { content: diffsHtml });\n    };\n    SideBySideRenderer.prototype.makeFileDiffHtml = function (file, diffs) {\n        if (this.config.renderNothingWhenEmpty && Array.isArray(file.blocks) && file.blocks.length === 0)\n            return '';\n        var fileDiffTemplate = this.hoganUtils.template(baseTemplatesPath, 'file-diff');\n        var filePathTemplate = this.hoganUtils.template(genericTemplatesPath, 'file-path');\n        var fileIconTemplate = this.hoganUtils.template(iconsBaseTemplatesPath, 'file');\n        var fileTagTemplate = this.hoganUtils.template(tagsBaseTemplatesPath, renderUtils.getFileIcon(file));\n        return fileDiffTemplate.render({\n            file: file,\n            fileHtmlId: renderUtils.getHtmlId(file),\n            diffs: diffs,\n            filePath: filePathTemplate.render({\n                fileDiffName: renderUtils.filenameDiff(file),\n            }, {\n                fileIcon: fileIconTemplate,\n                fileTag: fileTagTemplate,\n            }),\n        });\n    };\n    SideBySideRenderer.prototype.generateEmptyDiff = function () {\n        return {\n            right: '',\n            left: this.hoganUtils.render(genericTemplatesPath, 'empty-diff', {\n                contentClass: 'd2h-code-side-line',\n                CSSLineClass: renderUtils.CSSLineClass,\n            }),\n        };\n    };\n    SideBySideRenderer.prototype.generateFileHtml = function (file) {\n        var _this = this;\n        var matcher = Rematch.newMatcherFn(Rematch.newDistanceFn(function (e) { return renderUtils.deconstructLine(e.content, file.isCombined).content; }));\n        return file.blocks\n            .map(function (block) {\n            var fileHtml = {\n                left: _this.makeHeaderHtml(block.header),\n                right: _this.makeHeaderHtml(''),\n            };\n            _this.applyLineGroupping(block).forEach(function (_a) {\n                var contextLines = _a[0], oldLines = _a[1], newLines = _a[2];\n                if (oldLines.length && newLines.length && !contextLines.length) {\n                    _this.applyRematchMatching(oldLines, newLines, matcher).map(function (_a) {\n                        var oldLines = _a[0], newLines = _a[1];\n                        var _b = _this.processChangedLines(file.isCombined, oldLines, newLines), left = _b.left, right = _b.right;\n                        fileHtml.left += left;\n                        fileHtml.right += right;\n                    });\n                }\n                else if (contextLines.length) {\n                    contextLines.forEach(function (line) {\n                        var _a = renderUtils.deconstructLine(line.content, file.isCombined), prefix = _a.prefix, content = _a.content;\n                        var _b = _this.generateLineHtml({\n                            type: renderUtils.CSSLineClass.CONTEXT,\n                            prefix: prefix,\n                            content: content,\n                            number: line.oldNumber,\n                        }, {\n                            type: renderUtils.CSSLineClass.CONTEXT,\n                            prefix: prefix,\n                            content: content,\n                            number: line.newNumber,\n                        }), left = _b.left, right = _b.right;\n                        fileHtml.left += left;\n                        fileHtml.right += right;\n                    });\n                }\n                else if (oldLines.length || newLines.length) {\n                    var _b = _this.processChangedLines(file.isCombined, oldLines, newLines), left = _b.left, right = _b.right;\n                    fileHtml.left += left;\n                    fileHtml.right += right;\n                }\n                else {\n                    console.error('Unknown state reached while processing groups of lines', contextLines, oldLines, newLines);\n                }\n            });\n            return fileHtml;\n        })\n            .reduce(function (accomulated, html) {\n            return { left: accomulated.left + html.left, right: accomulated.right + html.right };\n        }, { left: '', right: '' });\n    };\n    SideBySideRenderer.prototype.applyLineGroupping = function (block) {\n        var blockLinesGroups = [];\n        var oldLines = [];\n        var newLines = [];\n        for (var i = 0; i < block.lines.length; i++) {\n            var diffLine = block.lines[i];\n            if ((diffLine.type !== LineType.INSERT && newLines.length) ||\n                (diffLine.type === LineType.CONTEXT && oldLines.length > 0)) {\n                blockLinesGroups.push([[], oldLines, newLines]);\n                oldLines = [];\n                newLines = [];\n            }\n            if (diffLine.type === LineType.CONTEXT) {\n                blockLinesGroups.push([[diffLine], [], []]);\n            }\n            else if (diffLine.type === LineType.INSERT && oldLines.length === 0) {\n                blockLinesGroups.push([[], [], [diffLine]]);\n            }\n            else if (diffLine.type === LineType.INSERT && oldLines.length > 0) {\n                newLines.push(diffLine);\n            }\n            else if (diffLine.type === LineType.DELETE) {\n                oldLines.push(diffLine);\n            }\n        }\n        if (oldLines.length || newLines.length) {\n            blockLinesGroups.push([[], oldLines, newLines]);\n            oldLines = [];\n            newLines = [];\n        }\n        return blockLinesGroups;\n    };\n    SideBySideRenderer.prototype.applyRematchMatching = function (oldLines, newLines, matcher) {\n        var comparisons = oldLines.length * newLines.length;\n        var maxLineSizeInBlock = Math.max.apply(null, [0].concat(oldLines.concat(newLines).map(function (elem) { return elem.content.length; })));\n        var doMatching = comparisons < this.config.matchingMaxComparisons &&\n            maxLineSizeInBlock < this.config.maxLineSizeInBlockForComparison &&\n            (this.config.matching === 'lines' || this.config.matching === 'words');\n        return doMatching ? matcher(oldLines, newLines) : [[oldLines, newLines]];\n    };\n    SideBySideRenderer.prototype.makeHeaderHtml = function (blockHeader) {\n        return this.hoganUtils.render(genericTemplatesPath, 'block-header', {\n            CSSLineClass: renderUtils.CSSLineClass,\n            blockHeader: renderUtils.escapeForHtml(blockHeader),\n            lineClass: 'd2h-code-side-linenumber',\n            contentClass: 'd2h-code-side-line',\n        });\n    };\n    SideBySideRenderer.prototype.processChangedLines = function (isCombined, oldLines, newLines) {\n        var fileHtml = {\n            right: '',\n            left: '',\n        };\n        var maxLinesNumber = Math.max(oldLines.length, newLines.length);\n        for (var i = 0; i < maxLinesNumber; i++) {\n            var oldLine = oldLines[i];\n            var newLine = newLines[i];\n            var diff = oldLine !== undefined && newLine !== undefined\n                ? renderUtils.diffHighlight(oldLine.content, newLine.content, isCombined, this.config)\n                : undefined;\n            var preparedOldLine = oldLine !== undefined && oldLine.oldNumber !== undefined\n                ? __assign(__assign({}, (diff !== undefined\n                    ? {\n                        prefix: diff.oldLine.prefix,\n                        content: diff.oldLine.content,\n                        type: renderUtils.CSSLineClass.DELETE_CHANGES,\n                    }\n                    : __assign(__assign({}, renderUtils.deconstructLine(oldLine.content, isCombined)), { type: renderUtils.toCSSClass(oldLine.type) }))), { number: oldLine.oldNumber }) : undefined;\n            var preparedNewLine = newLine !== undefined && newLine.newNumber !== undefined\n                ? __assign(__assign({}, (diff !== undefined\n                    ? {\n                        prefix: diff.newLine.prefix,\n                        content: diff.newLine.content,\n                        type: renderUtils.CSSLineClass.INSERT_CHANGES,\n                    }\n                    : __assign(__assign({}, renderUtils.deconstructLine(newLine.content, isCombined)), { type: renderUtils.toCSSClass(newLine.type) }))), { number: newLine.newNumber }) : undefined;\n            var _a = this.generateLineHtml(preparedOldLine, preparedNewLine), left = _a.left, right = _a.right;\n            fileHtml.left += left;\n            fileHtml.right += right;\n        }\n        return fileHtml;\n    };\n    SideBySideRenderer.prototype.generateLineHtml = function (oldLine, newLine) {\n        return {\n            left: this.generateSingleHtml(oldLine),\n            right: this.generateSingleHtml(newLine),\n        };\n    };\n    SideBySideRenderer.prototype.generateSingleHtml = function (line) {\n        var lineClass = 'd2h-code-side-linenumber';\n        var contentClass = 'd2h-code-side-line';\n        return this.hoganUtils.render(genericTemplatesPath, 'line', {\n            type: (line === null || line === void 0 ? void 0 : line.type) || renderUtils.CSSLineClass.CONTEXT + \" d2h-emptyplaceholder\",\n            lineClass: line !== undefined ? lineClass : lineClass + \" d2h-code-side-emptyplaceholder\",\n            contentClass: line !== undefined ? contentClass : contentClass + \" d2h-code-side-emptyplaceholder\",\n            prefix: (line === null || line === void 0 ? void 0 : line.prefix) === ' ' ? '&nbsp;' : line === null || line === void 0 ? void 0 : line.prefix,\n            content: line === null || line === void 0 ? void 0 : line.content,\n            lineNumber: line === null || line === void 0 ? void 0 : line.number,\n        });\n    };\n    return SideBySideRenderer;\n}());\nexport default SideBySideRenderer;\n//# sourceMappingURL=side-by-side-renderer.js.map","import * as Hogan from \"hogan.js\";\nexport var defaultTemplates = {};\ndefaultTemplates[\"file-summary-line\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<li class=\\\"d2h-file-list-line\\\">\"); t.b(\"\\n\" + i); t.b(\"    <span class=\\\"d2h-file-name-wrapper\\\">\"); t.b(\"\\n\" + i); t.b(t.rp(\"<fileIcon0\", c, p, \"      \")); t.b(\"      <a href=\\\"#\"); t.b(t.v(t.f(\"fileHtmlId\", c, p, 0))); t.b(\"\\\" class=\\\"d2h-file-name\\\">\"); t.b(t.v(t.f(\"fileName\", c, p, 0))); t.b(\"</a>\"); t.b(\"\\n\" + i); t.b(\"      <span class=\\\"d2h-file-stats\\\">\"); t.b(\"\\n\" + i); t.b(\"          <span class=\\\"d2h-lines-added\\\">\"); t.b(t.v(t.f(\"addedLines\", c, p, 0))); t.b(\"</span>\"); t.b(\"\\n\" + i); t.b(\"          <span class=\\\"d2h-lines-deleted\\\">\"); t.b(t.v(t.f(\"deletedLines\", c, p, 0))); t.b(\"</span>\"); t.b(\"\\n\" + i); t.b(\"      </span>\"); t.b(\"\\n\" + i); t.b(\"    </span>\"); t.b(\"\\n\" + i); t.b(\"</li>\"); return t.fl(); }, partials: { \"<fileIcon0\": { name: \"fileIcon\", partials: {}, subs: {} } }, subs: {} });\ndefaultTemplates[\"file-summary-wrapper\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<div class=\\\"d2h-file-list-wrapper\\\">\"); t.b(\"\\n\" + i); t.b(\"    <div class=\\\"d2h-file-list-header\\\">\"); t.b(\"\\n\" + i); t.b(\"        <span class=\\\"d2h-file-list-title\\\">Files changed (\"); t.b(t.v(t.f(\"filesNumber\", c, p, 0))); t.b(\")</span>\"); t.b(\"\\n\" + i); t.b(\"        <a class=\\\"d2h-file-switch d2h-hide\\\">hide</a>\"); t.b(\"\\n\" + i); t.b(\"        <a class=\\\"d2h-file-switch d2h-show\\\">show</a>\"); t.b(\"\\n\" + i); t.b(\"    </div>\"); t.b(\"\\n\" + i); t.b(\"    <ol class=\\\"d2h-file-list\\\">\"); t.b(\"\\n\" + i); t.b(\"    \"); t.b(t.t(t.f(\"files\", c, p, 0))); t.b(\"\\n\" + i); t.b(\"    </ol>\"); t.b(\"\\n\" + i); t.b(\"</div>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"generic-block-header\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<tr>\"); t.b(\"\\n\" + i); t.b(\"    <td class=\\\"\"); t.b(t.v(t.f(\"lineClass\", c, p, 0))); t.b(\" \"); t.b(t.v(t.d(\"CSSLineClass.INFO\", c, p, 0))); t.b(\"\\\"></td>\"); t.b(\"\\n\" + i); t.b(\"    <td class=\\\"\"); t.b(t.v(t.d(\"CSSLineClass.INFO\", c, p, 0))); t.b(\"\\\">\"); t.b(\"\\n\" + i); t.b(\"        <div class=\\\"\"); t.b(t.v(t.f(\"contentClass\", c, p, 0))); t.b(\" \"); t.b(t.v(t.d(\"CSSLineClass.INFO\", c, p, 0))); t.b(\"\\\">\"); t.b(t.t(t.f(\"blockHeader\", c, p, 0))); t.b(\"</div>\"); t.b(\"\\n\" + i); t.b(\"    </td>\"); t.b(\"\\n\" + i); t.b(\"</tr>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"generic-empty-diff\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<tr>\"); t.b(\"\\n\" + i); t.b(\"    <td class=\\\"\"); t.b(t.v(t.d(\"CSSLineClass.INFO\", c, p, 0))); t.b(\"\\\">\"); t.b(\"\\n\" + i); t.b(\"        <div class=\\\"\"); t.b(t.v(t.f(\"contentClass\", c, p, 0))); t.b(\" \"); t.b(t.v(t.d(\"CSSLineClass.INFO\", c, p, 0))); t.b(\"\\\">\"); t.b(\"\\n\" + i); t.b(\"            File without changes\"); t.b(\"\\n\" + i); t.b(\"        </div>\"); t.b(\"\\n\" + i); t.b(\"    </td>\"); t.b(\"\\n\" + i); t.b(\"</tr>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"generic-file-path\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<span class=\\\"d2h-file-name-wrapper\\\">\"); t.b(\"\\n\" + i); t.b(t.rp(\"<fileIcon0\", c, p, \"    \")); t.b(\"    <span class=\\\"d2h-file-name\\\">\"); t.b(t.v(t.f(\"fileDiffName\", c, p, 0))); t.b(\"</span>\"); t.b(\"\\n\" + i); t.b(t.rp(\"<fileTag1\", c, p, \"    \")); t.b(\"</span>\"); return t.fl(); }, partials: { \"<fileIcon0\": { name: \"fileIcon\", partials: {}, subs: {} }, \"<fileTag1\": { name: \"fileTag\", partials: {}, subs: {} } }, subs: {} });\ndefaultTemplates[\"generic-line\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<tr>\"); t.b(\"\\n\" + i); t.b(\"    <td class=\\\"\"); t.b(t.v(t.f(\"lineClass\", c, p, 0))); t.b(\" \"); t.b(t.v(t.f(\"type\", c, p, 0))); t.b(\"\\\">\"); t.b(\"\\n\" + i); t.b(\"      \"); t.b(t.t(t.f(\"lineNumber\", c, p, 0))); t.b(\"\\n\" + i); t.b(\"    </td>\"); t.b(\"\\n\" + i); t.b(\"    <td class=\\\"\"); t.b(t.v(t.f(\"type\", c, p, 0))); t.b(\"\\\">\"); t.b(\"\\n\" + i); t.b(\"        <div class=\\\"\"); t.b(t.v(t.f(\"contentClass\", c, p, 0))); t.b(\" \"); t.b(t.v(t.f(\"type\", c, p, 0))); t.b(\"\\\">\"); t.b(\"\\n\" + i); if (t.s(t.f(\"prefix\", c, p, 1), c, p, 0, 171, 247, \"{{ }}\")) {\n        t.rs(c, p, function (c, p, t) { t.b(\"            <span class=\\\"d2h-code-line-prefix\\\">\"); t.b(t.t(t.f(\"prefix\", c, p, 0))); t.b(\"</span>\"); t.b(\"\\n\" + i); });\n        c.pop();\n    } if (!t.s(t.f(\"prefix\", c, p, 1), c, p, 1, 0, 0, \"\")) {\n        t.b(\"            <span class=\\\"d2h-code-line-prefix\\\">&nbsp;</span>\");\n        t.b(\"\\n\" + i);\n    } ; if (t.s(t.f(\"content\", c, p, 1), c, p, 0, 380, 454, \"{{ }}\")) {\n        t.rs(c, p, function (c, p, t) { t.b(\"            <span class=\\\"d2h-code-line-ctn\\\">\"); t.b(t.t(t.f(\"content\", c, p, 0))); t.b(\"</span>\"); t.b(\"\\n\" + i); });\n        c.pop();\n    } if (!t.s(t.f(\"content\", c, p, 1), c, p, 1, 0, 0, \"\")) {\n        t.b(\"            <span class=\\\"d2h-code-line-ctn\\\"><br></span>\");\n        t.b(\"\\n\" + i);\n    } ; t.b(\"        </div>\"); t.b(\"\\n\" + i); t.b(\"    </td>\"); t.b(\"\\n\" + i); t.b(\"</tr>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"generic-wrapper\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<div class=\\\"d2h-wrapper\\\">\"); t.b(\"\\n\" + i); t.b(\"    \"); t.b(t.t(t.f(\"content\", c, p, 0))); t.b(\"\\n\" + i); t.b(\"</div>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"icon-file-added\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<svg aria-hidden=\\\"true\\\" class=\\\"d2h-icon d2h-added\\\" height=\\\"16\\\" title=\\\"added\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 14 16\\\"\"); t.b(\"\\n\" + i); t.b(\"     width=\\\"14\\\">\"); t.b(\"\\n\" + i); t.b(\"    <path d=\\\"M13 1H1C0.45 1 0 1.45 0 2v12c0 0.55 0.45 1 1 1h12c0.55 0 1-0.45 1-1V2c0-0.55-0.45-1-1-1z m0 13H1V2h12v12zM6 9H3V7h3V4h2v3h3v2H8v3H6V9z\\\"></path>\"); t.b(\"\\n\" + i); t.b(\"</svg>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"icon-file-changed\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<svg aria-hidden=\\\"true\\\" class=\\\"d2h-icon d2h-changed\\\" height=\\\"16\\\" title=\\\"modified\\\" version=\\\"1.1\\\"\"); t.b(\"\\n\" + i); t.b(\"     viewBox=\\\"0 0 14 16\\\" width=\\\"14\\\">\"); t.b(\"\\n\" + i); t.b(\"    <path d=\\\"M13 1H1C0.45 1 0 1.45 0 2v12c0 0.55 0.45 1 1 1h12c0.55 0 1-0.45 1-1V2c0-0.55-0.45-1-1-1z m0 13H1V2h12v12zM4 8c0-1.66 1.34-3 3-3s3 1.34 3 3-1.34 3-3 3-3-1.34-3-3z\\\"></path>\"); t.b(\"\\n\" + i); t.b(\"</svg>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"icon-file-deleted\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<svg aria-hidden=\\\"true\\\" class=\\\"d2h-icon d2h-deleted\\\" height=\\\"16\\\" title=\\\"removed\\\" version=\\\"1.1\\\"\"); t.b(\"\\n\" + i); t.b(\"     viewBox=\\\"0 0 14 16\\\" width=\\\"14\\\">\"); t.b(\"\\n\" + i); t.b(\"    <path d=\\\"M13 1H1C0.45 1 0 1.45 0 2v12c0 0.55 0.45 1 1 1h12c0.55 0 1-0.45 1-1V2c0-0.55-0.45-1-1-1z m0 13H1V2h12v12zM11 9H3V7h8v2z\\\"></path>\"); t.b(\"\\n\" + i); t.b(\"</svg>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"icon-file-renamed\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<svg aria-hidden=\\\"true\\\" class=\\\"d2h-icon d2h-moved\\\" height=\\\"16\\\" title=\\\"renamed\\\" version=\\\"1.1\\\"\"); t.b(\"\\n\" + i); t.b(\"     viewBox=\\\"0 0 14 16\\\" width=\\\"14\\\">\"); t.b(\"\\n\" + i); t.b(\"    <path d=\\\"M6 9H3V7h3V4l5 4-5 4V9z m8-7v12c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h12c0.55 0 1 0.45 1 1z m-1 0H1v12h12V2z\\\"></path>\"); t.b(\"\\n\" + i); t.b(\"</svg>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"icon-file\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<svg aria-hidden=\\\"true\\\" class=\\\"d2h-icon\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 12 16\\\" width=\\\"12\\\">\"); t.b(\"\\n\" + i); t.b(\"    <path d=\\\"M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z\\\"></path>\"); t.b(\"\\n\" + i); t.b(\"</svg>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"line-by-line-file-diff\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<div id=\\\"\"); t.b(t.v(t.f(\"fileHtmlId\", c, p, 0))); t.b(\"\\\" class=\\\"d2h-file-wrapper\\\" data-lang=\\\"\"); t.b(t.v(t.d(\"file.language\", c, p, 0))); t.b(\"\\\">\"); t.b(\"\\n\" + i); t.b(\"    <div class=\\\"d2h-file-header\\\">\"); t.b(\"\\n\" + i); t.b(\"    \"); t.b(t.t(t.f(\"filePath\", c, p, 0))); t.b(\"\\n\" + i); t.b(\"    </div>\"); t.b(\"\\n\" + i); t.b(\"    <div class=\\\"d2h-file-diff\\\">\"); t.b(\"\\n\" + i); t.b(\"        <div class=\\\"d2h-code-wrapper\\\">\"); t.b(\"\\n\" + i); t.b(\"            <table class=\\\"d2h-diff-table\\\">\"); t.b(\"\\n\" + i); t.b(\"                <tbody class=\\\"d2h-diff-tbody\\\">\"); t.b(\"\\n\" + i); t.b(\"                \"); t.b(t.t(t.f(\"diffs\", c, p, 0))); t.b(\"\\n\" + i); t.b(\"                </tbody>\"); t.b(\"\\n\" + i); t.b(\"            </table>\"); t.b(\"\\n\" + i); t.b(\"        </div>\"); t.b(\"\\n\" + i); t.b(\"    </div>\"); t.b(\"\\n\" + i); t.b(\"</div>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"line-by-line-numbers\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<div class=\\\"line-num1\\\">\"); t.b(t.v(t.f(\"oldNumber\", c, p, 0))); t.b(\"</div>\"); t.b(\"\\n\" + i); t.b(\"<div class=\\\"line-num2\\\">\"); t.b(t.v(t.f(\"newNumber\", c, p, 0))); t.b(\"</div>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"side-by-side-file-diff\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<div id=\\\"\"); t.b(t.v(t.f(\"fileHtmlId\", c, p, 0))); t.b(\"\\\" class=\\\"d2h-file-wrapper\\\" data-lang=\\\"\"); t.b(t.v(t.d(\"file.language\", c, p, 0))); t.b(\"\\\">\"); t.b(\"\\n\" + i); t.b(\"    <div class=\\\"d2h-file-header\\\">\"); t.b(\"\\n\" + i); t.b(\"      \"); t.b(t.t(t.f(\"filePath\", c, p, 0))); t.b(\"\\n\" + i); t.b(\"    </div>\"); t.b(\"\\n\" + i); t.b(\"    <div class=\\\"d2h-files-diff\\\">\"); t.b(\"\\n\" + i); t.b(\"        <div class=\\\"d2h-file-side-diff\\\">\"); t.b(\"\\n\" + i); t.b(\"            <div class=\\\"d2h-code-wrapper\\\">\"); t.b(\"\\n\" + i); t.b(\"                <table class=\\\"d2h-diff-table\\\">\"); t.b(\"\\n\" + i); t.b(\"                    <tbody class=\\\"d2h-diff-tbody\\\">\"); t.b(\"\\n\" + i); t.b(\"                    \"); t.b(t.t(t.d(\"diffs.left\", c, p, 0))); t.b(\"\\n\" + i); t.b(\"                    </tbody>\"); t.b(\"\\n\" + i); t.b(\"                </table>\"); t.b(\"\\n\" + i); t.b(\"            </div>\"); t.b(\"\\n\" + i); t.b(\"        </div>\"); t.b(\"\\n\" + i); t.b(\"        <div class=\\\"d2h-file-side-diff\\\">\"); t.b(\"\\n\" + i); t.b(\"            <div class=\\\"d2h-code-wrapper\\\">\"); t.b(\"\\n\" + i); t.b(\"                <table class=\\\"d2h-diff-table\\\">\"); t.b(\"\\n\" + i); t.b(\"                    <tbody class=\\\"d2h-diff-tbody\\\">\"); t.b(\"\\n\" + i); t.b(\"                    \"); t.b(t.t(t.d(\"diffs.right\", c, p, 0))); t.b(\"\\n\" + i); t.b(\"                    </tbody>\"); t.b(\"\\n\" + i); t.b(\"                </table>\"); t.b(\"\\n\" + i); t.b(\"            </div>\"); t.b(\"\\n\" + i); t.b(\"        </div>\"); t.b(\"\\n\" + i); t.b(\"    </div>\"); t.b(\"\\n\" + i); t.b(\"</div>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"tag-file-added\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<span class=\\\"d2h-tag d2h-added d2h-added-tag\\\">ADDED</span>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"tag-file-changed\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<span class=\\\"d2h-tag d2h-changed d2h-changed-tag\\\">CHANGED</span>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"tag-file-deleted\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<span class=\\\"d2h-tag d2h-deleted d2h-deleted-tag\\\">DELETED</span>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"tag-file-renamed\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<span class=\\\"d2h-tag d2h-moved d2h-moved-tag\\\">RENAMED</span>\"); return t.fl(); }, partials: {}, subs: {} });\n//# sourceMappingURL=diff2html-templates.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as Hogan from 'hogan.js';\nimport { defaultTemplates } from './diff2html-templates';\nvar HoganJsUtils = (function () {\n    function HoganJsUtils(_a) {\n        var _b = _a.compiledTemplates, compiledTemplates = _b === void 0 ? {} : _b, _c = _a.rawTemplates, rawTemplates = _c === void 0 ? {} : _c;\n        var compiledRawTemplates = Object.entries(rawTemplates).reduce(function (previousTemplates, _a) {\n            var _b;\n            var name = _a[0], templateString = _a[1];\n            var compiledTemplate = Hogan.compile(templateString, { asString: false });\n            return __assign(__assign({}, previousTemplates), (_b = {}, _b[name] = compiledTemplate, _b));\n        }, {});\n        this.preCompiledTemplates = __assign(__assign(__assign({}, defaultTemplates), compiledTemplates), compiledRawTemplates);\n    }\n    HoganJsUtils.compile = function (templateString) {\n        return Hogan.compile(templateString, { asString: false });\n    };\n    HoganJsUtils.prototype.render = function (namespace, view, params, partials, indent) {\n        var templateKey = this.templateKey(namespace, view);\n        try {\n            var template = this.preCompiledTemplates[templateKey];\n            return template.render(params, partials, indent);\n        }\n        catch (e) {\n            throw new Error(\"Could not find template to render '\" + templateKey + \"'\");\n        }\n    };\n    HoganJsUtils.prototype.template = function (namespace, view) {\n        return this.preCompiledTemplates[this.templateKey(namespace, view)];\n    };\n    HoganJsUtils.prototype.templateKey = function (namespace, view) {\n        return namespace + \"-\" + view;\n    };\n    return HoganJsUtils;\n}());\nexport default HoganJsUtils;\n//# sourceMappingURL=hoganjs-utils.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as DiffParser from './diff-parser';\nimport * as fileListPrinter from './file-list-renderer';\nimport LineByLineRenderer, { defaultLineByLineRendererConfig } from './line-by-line-renderer';\nimport SideBySideRenderer, { defaultSideBySideRendererConfig } from './side-by-side-renderer';\nimport { OutputFormatType } from './types';\nimport HoganJsUtils from './hoganjs-utils';\nexport var defaultDiff2HtmlConfig = __assign(__assign(__assign({}, defaultLineByLineRendererConfig), defaultSideBySideRendererConfig), { outputFormat: OutputFormatType.LINE_BY_LINE, drawFileList: true });\nexport function parse(diffInput, configuration) {\n    if (configuration === void 0) { configuration = {}; }\n    return DiffParser.parse(diffInput, __assign(__assign({}, defaultDiff2HtmlConfig), configuration));\n}\nexport function html(diffInput, configuration) {\n    if (configuration === void 0) { configuration = {}; }\n    var config = __assign(__assign({}, defaultDiff2HtmlConfig), configuration);\n    var diffJson = typeof diffInput === 'string' ? DiffParser.parse(diffInput, config) : diffInput;\n    var hoganUtils = new HoganJsUtils(config);\n    var fileList = config.drawFileList ? fileListPrinter.render(diffJson, hoganUtils) : '';\n    var diffOutput = config.outputFormat === 'side-by-side'\n        ? new SideBySideRenderer(hoganUtils, config).render(diffJson)\n        : new LineByLineRenderer(hoganUtils, config).render(diffJson);\n    return fileList + diffOutput;\n}\n//# sourceMappingURL=diff2html.js.map","import * as renderUtils from './render-utils';\nvar baseTemplatesPath = 'file-summary';\nvar iconsBaseTemplatesPath = 'icon';\nexport function render(diffFiles, hoganUtils) {\n    var files = diffFiles\n        .map(function (file) {\n        return hoganUtils.render(baseTemplatesPath, 'line', {\n            fileHtmlId: renderUtils.getHtmlId(file),\n            oldName: file.oldName,\n            newName: file.newName,\n            fileName: renderUtils.filenameDiff(file),\n            deletedLines: '-' + file.deletedLines,\n            addedLines: '+' + file.addedLines,\n        }, {\n            fileIcon: hoganUtils.template(iconsBaseTemplatesPath, renderUtils.getFileIcon(file)),\n        });\n    })\n        .join('\\n');\n    return hoganUtils.render(baseTemplatesPath, 'wrapper', {\n        filesNumber: diffFiles.length,\n        files: files,\n    });\n}\n//# sourceMappingURL=file-list-renderer.js.map"],"sourceRoot":""}