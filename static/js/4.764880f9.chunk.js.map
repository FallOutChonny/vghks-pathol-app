{"version":3,"sources":["components/input.tsx","components/app-footer.tsx","components/layout.tsx","hooks/useReportTemplate.ts","hooks/useTitle.ts","components/modal.tsx","components/table.tsx","components/select.tsx","components/checkbox.tsx","components/report-template-modal.tsx","components/report-template-wrapper.tsx","utils/form.ts","components/report-template-input-text.tsx","components/input-number.tsx","components/report-template-input-number.tsx","components/radio.tsx","components/editable-table.tsx","components/report-template-selection-modal.tsx","components/report-template-multiple-selection.tsx","components/report-template-single-selection.tsx","components/datepicker.tsx","components/report-template-date.tsx","components/report-template-time.tsx","components/report-template-select.tsx","components/report-template-list.tsx","components/query-table.tsx"],"names":["borderLess","css","p","theme","primary","StyledInput","styled","secondary","TextArea","AppFooter","Footer","className","style","background","borderTopLeftRadius","borderTopRightRadius","Page","children","Content","cx","compose","require","faker","reportTemplateCategory","CLINICAL_HISTORY","HIGHT_RISK_REASONS","DATA_OF_PRIOR_SIMILAR_STUDY","IMAGING_PROTOCOL","TUMOR_LOCATION","fakeSnippetSetting","mergeAll","map","key","x","Component","path","type","reportTemplateById","pathOr","fakeSetting","keys","fakeReportTemplateList","Array","from","length","_","idx","id","name","lorem","word","author","findName","status","statusName","createdAt","moment","createdAtStr","format","updatedAt","updatedAtStr","description","setting","defaultSnippetList","values","reportSnippetsState","atomFamily","default","find","propEq","Number","snippetCategoryState","atom","head","reportTemplateListState","content","total","reportPreviewState","useReportPreview","useRecoilState","isPreview","setIsPreview","prev","useReportSnippets","_snippetList","React","useEffect","setSnippetList","JSON","stringify","useState","snippetList","useSnippetCategory","state","useReportTemplateList","useToggleReportPreview","setter","useSetRecoilState","DEFAULT_USE_TITLE_OPTIONS","restoreOnUnmount","document","title","options","prevTitleRef","useRef","replace","envStore","appTitle","current","_title","StyledModal","ModalComponent","this","props","confirm","error","success","info","StyledTable","pagination","TableComponent","editable","columns","onAddRowClick","isRowDeletable","onDeleteRowClick","isCanEdit","_columns","useMemo","canEdit","placement","top","onClick","undefined","width","render","__","r","locale","emptyText","image","PRESENTED_IMAGE_SIMPLE","displayName","Column","StyledSelect","SelectComponent","Option","StyledCheckbox","CheckboxComponent","forwardRef","ref","Group","TemplateModal","onCancel","onOk","item","visible","maskClosable","keyboard","footer","color","minWidth","marginRight","StyledCard","TemplateWrapper","onDelete","onEdit","FontColorsOutlined","isNil","createFormItemLayout","label","wrapper","labelCol","xs","span","sm","wrapperCol","thosandSeprartor","formatter","value","parser","currency","percent","max","RegExp","InputTextModal","useForm","form","validateFields","then","labelAlign","initialValues","Item","valuePropName","StyledInputNumber","attrs","min","ThousandSeprartorInput","CurrencyInput","PercentInput","InputNumberModal","StyledRadio","darkGrey","RadioComponent","EditableTable","onChange","onRowAdd","onRowDelete","triggerChange","changedValue","rowKey","size","dataSource","defaultValue","uuid","text","selected","freetext","TemplateSelectionModal","v","noStyle","align","concat","invoker","filter","ReportTemplateMultipleSelection","editModalVisible","handleEditModalVisible","onUpdate","setSetting","bodyStyle","paddingLeft","mapIndexed","defaultChecked","bordered","placeholder","ReportTemplateSingleSelection","StyledDatePicker","StyledTimePicker","DatePickerComponent","InputDateModal","allowClear","picker","InputTimeModal","reportTemplateList","inputProps","tooltip","multipleLine","autoSize","minRows","units","TemplateMultipleSelection","TemplateSingleSelection","QueryTable","pageNum","loading","rowSelection","paginationConfig","merge","pageSize","showSizeChanger"],"mappings":"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","file":"static/js/4.764880f9.chunk.js","sourcesContent":["import { Input } from 'antd'\nimport styled, { css } from 'styled-components'\n\nconst borderLess = css`\n  &.ant-input-borderless {\n    border: none;\n    border-bottom: 1px solid ${p => p.theme.primary};\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  &:active:not(.ant-input-borderless) {\n    box-shadow: 0 0 0 1px ${p => p.theme.primary};\n  }\n`\n\nconst StyledInput = styled(Input)`\n  &.ant-input-affix-wrapper .ant-input,\n  &.ant-input {\n    border-color: ${p => p.theme.primary};\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    ${borderLess};\n  }\n`\n\nconst Search = styled(Input.Search)`\n  &.ant-input-search {\n    .ant-input {\n      border-color: ${p => p.theme.primary};\n\n      &:hover,\n      &:focus {\n        border-color: ${p => p.theme.secondary};\n      }\n\n      &:focus {\n        box-shadow: 0 0 0 1px ${p => p.theme.primary};\n      }\n    }\n\n    .anticon-search {\n      font-size: 20px;\n      color: ${p => p.theme.primary};\n    }\n  }\n`\n\nconst TextArea = styled(Input.TextArea)`\n  &.ant-input {\n    resize: none;\n    border: 1px solid ${p => p.theme.primary};\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    ${borderLess};\n  }\n`\n\nexport { StyledInput as Input, TextArea, Search }\n\nexport default StyledInput\n","import React from 'react'\nimport { Layout } from 'antd'\n\nexport default function AppFooter() {\n  return (\n    <Layout.Footer\n      className=\"pb-6 text-center text-lg text-gray-600 border-t border-gray-400\"\n      style={{ background: 'rgb(221, 228, 237)' }}>\n      高雄榮總數位病理平台\n    </Layout.Footer>\n  )\n}\n","import React from 'react'\nimport { Layout } from 'antd'\nimport cx from 'classnames'\nimport AppFooter from '@/components/app-footer'\nimport theme from '../theme'\n\ninterface PageProps {\n  children: React.ReactNode\n  style?: React.CSSProperties\n  className?: string\n}\n\nexport function Page({ children, style, className = 'pr-16' }: PageProps) {\n  return (\n    <>\n      <Layout.Content\n        style={{\n          background: `linear-gradient(-90deg,#4252c4,${theme.primary})`,\n        }}>\n        <div\n          className={cx('pl-8 pt-6 pb-12', className)}\n          style={style}\n          css={{\n            background: 'rgb(221, 228, 237)',\n            borderTopLeftRadius: 32,\n            borderTopRightRadius: 32,\n          }}>\n          {children}\n        </div>\n      </Layout.Content>\n      <AppFooter />\n    </>\n  )\n}\n","import React from 'react'\nimport { atom, atomFamily, useRecoilState, useSetRecoilState } from 'recoil'\nimport {\n  find,\n  mergeAll,\n  map,\n  values,\n  head,\n  keys,\n  path,\n  pathOr,\n  propEq,\n} from 'ramda'\nimport moment from 'moment'\nimport fakeSetting from '@/mocks/fake-snippet-setting.json'\nimport { reportTemplateById } from '@/components/report-template-list'\nconst { compose } = require('ramda')\nconst faker = require('faker')\n\ntype SnippetList = { [key: string]: any[] }\n\nexport const reportTemplateCategory = {\n  CLINICAL_HISTORY: 'Clinical History',\n  HIGHT_RISK_REASONS: 'Hight Risk Reasons',\n  DATA_OF_PRIOR_SIMILAR_STUDY: 'Data of prior similar study',\n  IMAGING_PROTOCOL: 'Imaging Protocal',\n  TUMOR_LOCATION: 'Tumor Location/Size',\n}\n\nconst fakeSnippetSetting = compose(\n  mergeAll,\n  map((key: string) => ({\n    [key]: compose(\n      map((x: any) => ({\n        ...x,\n        Component: path([x.type, 'Component'])(reportTemplateById),\n      })),\n      pathOr([], [key])\n    )(fakeSetting),\n  })),\n  keys\n)(fakeSetting) as { [key: string]: any[] }\n\nconst fakeReportTemplateList = Array.from({ length: 100 }).map((_, idx) => ({\n  id: idx + 1,\n  name: faker.lorem.word(),\n  author: faker.name.findName(),\n  status: 1,\n  statusName: '已發佈',\n  createdAt: moment(),\n  createdAtStr: moment().format('YYYY/MM/DD HH:mm'),\n  updatedAt: moment(),\n  updatedAtStr: moment().format('YYYY/MM/DD HH:mm'),\n  description: faker.lorem.word(),\n  setting: fakeSnippetSetting,\n}))\n\nexport const defaultSnippetList = compose(\n  mergeAll,\n  map((key: string) => ({ [key]: [] })),\n  values\n)(reportTemplateCategory)\n\nexport const reportSnippetsState = atomFamily<\n  SnippetList,\n  React.Key | undefined\n>({\n  key: 'reportSnippetsState',\n  default: id =>\n    compose(\n      pathOr(defaultSnippetList, ['setting']),\n      find(propEq('id', Number(id)))\n    )(fakeReportTemplateList),\n})\n\nconst snippetCategoryState = atom<string>({\n  key: 'snippetCategoryState',\n  default: compose(head, values)(reportTemplateCategory),\n})\n\nconst reportTemplateListState = atom({\n  key: 'reportTemplateListState',\n  default: {\n    content: fakeReportTemplateList,\n    total: 100,\n  },\n})\n\nconst reportPreviewState = atom({\n  key: 'reportPreviewState',\n  default: false,\n})\n\nexport function useReportPreview() {\n  const [isPreview, setIsPreview] = useRecoilState(reportPreviewState)\n\n  return [isPreview, () => setIsPreview(prev => !prev)] as [boolean, () => void]\n}\n\nexport function useReportSnippets(id?: React.Key) {\n  const [_snippetList] = useRecoilState(reportSnippetsState(id))\n\n  React.useEffect(() => {\n    setSnippetList(_snippetList)\n  }, [JSON.stringify(_snippetList)]) // eslint-disable-line\n\n  const [snippetList, setSnippetList] = React.useState<SnippetList>(\n    _snippetList\n  )\n\n  return [snippetList, setSnippetList] as [\n    SnippetList,\n    React.Dispatch<React.SetStateAction<SnippetList>>\n  ]\n}\n\nexport function useSnippetCategory(values?: any) {\n  const state = useRecoilState(snippetCategoryState)\n\n  React.useEffect(() => {}, [])\n\n  return state\n}\n\nexport function useReportTemplateList() {\n  return useRecoilState(reportTemplateListState)\n}\n\nexport function useToggleReportPreview(state: boolean = false) {\n  const setter = useSetRecoilState(reportPreviewState)\n\n  React.useEffect(() => {\n    setter(state)\n\n    return () => {\n      setter(false)\n    }\n  }, [state]) // eslint-disable-line\n}\n","import React from 'react'\nimport { replace } from 'ramda'\nimport { envStore } from '@/constants/env'\n\nexport interface UseTitleOptions {\n  restoreOnUnmount?: boolean\n}\n\nconst DEFAULT_USE_TITLE_OPTIONS: UseTitleOptions = {\n  restoreOnUnmount: false,\n}\n\nfunction useTitle(\n  title: string,\n  options: UseTitleOptions = DEFAULT_USE_TITLE_OPTIONS\n) {\n  const prevTitleRef = React.useRef(document.title)\n  document.title = replace(/%s/, title)(envStore.appTitle)\n  React.useEffect(() => {\n    if (options && options.restoreOnUnmount) {\n      return () => {\n        document.title = prevTitleRef.current // eslint-disable-line\n      }\n    } else {\n      return\n    }\n  }, []) // eslint-disable-line\n}\n\nexport default typeof document !== 'undefined'\n  ? useTitle\n  : (_title: string) => {}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal } from 'antd'\nimport { ModalProps } from 'antd/lib/modal'\n\nconst StyledModal = styled(Modal)`\n  animation-duration: 0s !important;\n  transition: none !important;\n\n  .ant-modal-header--border-none {\n    border-bottom: none;\n  }\n\n  .ant-modal-footer {\n    padding-top: 14px;\n    padding-bottom: 14px;\n  }\n`\n\nexport default class ModalComponent extends React.Component<ModalProps, any> {\n  static confirm = Modal.confirm\n  static error = Modal.error\n  static success = Modal.success\n  static info = Modal.info\n\n  render() {\n    return <StyledModal {...this.props}>{this.props.children}</StyledModal>\n  }\n}\n","import React from 'react'\nimport { Table, Empty, Tooltip } from 'antd'\nimport { TableProps } from 'antd/lib/table'\nimport { CloseOutlined, PlusOutlined } from '@ant-design/icons'\nimport styled from 'styled-components'\n\nconst StyledTable: any = styled(Table)`\n  &.ant-table-wrapper {\n    .ant-pagination-prev .ant-pagination-item-link,\n    .ant-pagination-next .ant-pagination-item-link {\n      border-color: ${p => p.theme.pagination};\n      border-radius: 6px;\n      color: ${p => p.theme.pagination};\n    }\n\n    .ant-pagination-item {\n      border-color: ${p => p.theme.pagination};\n    }\n\n    .ant-pagination-item a {\n      color: ${p => p.theme.pagination};\n    }\n\n    .ant-pagination-item-active,\n    .ant-pagination-item-active:focus,\n    .ant-pagination-item:hover {\n      border-color: ${p => p.theme.pagination};\n      background: ${p => p.theme.pagination};\n\n      a {\n        color: #fff;\n      }\n    }\n\n    .ant-table-pagination.ant-pagination {\n      margin-top: 32px;\n    }\n\n    .ant-pagination-prev:hover .ant-pagination-item-link,\n    .ant-pagination-next:hover .ant-pagination-item-link {\n      border-color: ${p => p.theme.pagination};\n      background: ${p => p.theme.pagination};\n      color: #fff;\n    }\n\n    .ant-pagination-simple-pager {\n      color: ${p => p.theme.pagination};\n    }\n  }\n\n  .ant-table-tbody > tr > td {\n    height: 40px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    line-height: 1em;\n    color: #4a4a4a;\n    background: #f0f2f5;\n    border-bottom: 1px solid #e9e9e9;\n  }\n\n  .ant-table-thead > tr > th {\n    background: rgb(196, 213, 241);\n    border-bottom: 1px solid #e9e9e9;\n    color: ${p => p.theme.primary};\n    font-weight: 600;\n    font-size: 16px;\n  }\n`\n\ntype Props<T> = TableProps<T> & {\n  editable?: boolean\n  isRowDeletable?: (row: T) => boolean\n  onAddRowClick?: (param?: any) => any\n  onDeleteRowClick?: (param?: any) => any\n  isCanEdit?: any\n}\n\nfunction TableComponent<T = any>({\n  editable = false,\n  columns = [],\n  onAddRowClick,\n  isRowDeletable = () => true,\n  onDeleteRowClick,\n  isCanEdit = '',\n  ...props\n}: Props<T>) {\n  const _columns = React.useMemo(() => {\n    let canEdit: boolean = true\n    if (!editable) {\n      return columns\n    }\n    if (isCanEdit !== '') {\n      canEdit = isCanEdit\n    }\n\n    const handleRowDelete = (key: React.Key) => () => {\n      if (onDeleteRowClick) {\n        onDeleteRowClick(key)\n      }\n    }\n\n    return [\n      {\n        title: (\n          <Tooltip placement=\"topLeft\" title=\"新增\">\n            <PlusOutlined\n              className=\"ml-1 relative\"\n              style={{ top: -3 }}\n              onClick={canEdit ? onAddRowClick : undefined}\n            />\n          </Tooltip>\n        ),\n        width: 50,\n        render: (_: any, __: any, idx: number) => (\n          <div className=\"text-center\">#{idx + 1}</div>\n        ),\n      },\n      ...columns,\n      {\n        width: 50,\n        render: (_: any, r: any, idx: number) => (\n          <Tooltip placement=\"topLeft\" title=\"刪除\">\n            <CloseOutlined\n              onClick={isRowDeletable(r) ? handleRowDelete(r.id) : undefined}\n            />\n          </Tooltip>\n        ),\n      },\n    ]\n  }, [columns, editable]) // eslint-disable-line\n\n  return (\n    <StyledTable\n      columns={_columns}\n      locale={{\n        emptyText: (\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            description={\n              <span>\n                <span className=\"d-block\">\n                  尚無資料，請點選「＋新增」新增資料。\n                </span>\n              </span>\n            }\n          />\n        ),\n      }}\n      {...props}>\n      {props.children}\n    </StyledTable>\n  )\n}\n\nTableComponent.displayName = 'Table'\nTableComponent.Column = Table.Column\n\nexport default TableComponent\n","import React from 'react'\nimport { Select } from 'antd'\nimport { SelectProps } from 'antd/lib/select'\nimport styled from 'styled-components'\n\nconst StyledSelect: any = styled(Select)`\n  &.ant-select {\n    &.ant-select-single:not(.ant-select-customize-input) .ant-select-selector,\n    .ant-select-selection:hover,\n    .ant-select-selection:active,\n    .ant-select-selection:focus {\n      border-color: ${p => p.theme.primary};\n    }\n\n    .ant-select-selection {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    .ant-select-selection:active,\n    .ant-select-selection:focus {\n      box-shadow: none;\n    }\n\n    .ant-select-arrow {\n      color: ${p => p.theme.primary};\n    }\n\n    .ant-select-arrow-icon {\n      position: relative;\n      top: -1px;\n      font-size: 14px;\n    }\n\n    &.ant-select-borderless .ant-select-selector {\n      position: relative;\n      bottom: 1px;\n      border: 0;\n      border-bottom: 1px solid ${p => p.theme.primary} !important;\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  }\n\n  &.ant-select.is--transparent {\n    &.ant-select-focused > .ant-select-selector {\n      border: 1px solid #666a8f;\n    }\n\n    > .ant-select-selector {\n      background: transparent;\n      border: 1px solid #666a8f;\n      color: #a9b6d8;\n\n      &:active,\n      &:focus,\n      &:hover {\n        border: 1px solid #666a8f;\n      }\n    }\n\n    .ant-select-arrow {\n      color: #a9b6d8;\n    }\n  }\n`\n\nclass SelectComponent<T = any> extends React.Component<SelectProps<T>, any> {\n  public static Option = Select.Option\n\n  public static displayName = 'Select'\n\n  render() {\n    return <StyledSelect {...this.props}>{this.props.children}</StyledSelect>\n  }\n}\n\nexport default SelectComponent\n","import React from 'react'\nimport { Checkbox } from 'antd'\nimport { CheckboxProps } from 'antd/lib/checkbox'\nimport styled from 'styled-components'\nimport { RefProps } from '@/constants/types'\n\nconst StyledCheckbox = styled(Checkbox)`\n  .ant-checkbox-checked .ant-checkbox-inner {\n    background-color: ${p => p.theme.primary};\n    border-color: ${p => p.theme.primary};\n  }\n\n  &.ant-checkbox-wrapper:hover .ant-checkbox-inner,\n  .ant-checkbox:hover .ant-checkbox-inner,\n  .ant-checkbox-input:focus + .ant-checkbox-inner {\n    border-color: ${p => p.theme.primary};\n  }\n\n  .ant-checkbox-checked .ant-checkbox-inner:after {\n    border: 2px solid #fff;\n    border-top: 0;\n    border-left: 0;\n  }\n\n  .ant-checkbox-inner {\n    border: 1px solid ${p => p.theme.secondary};\n  }\n\n  &.is--normal {\n    font-size: 14px !important;\n    font-weight: normal !important;\n  }\n`\n\ntype Props = RefProps & CheckboxProps\n\nconst CheckboxComponent: React.ElementType<Props> = React.forwardRef<\n  typeof StyledCheckbox,\n  Props\n>(({ ...props }, ref) => <StyledCheckbox forwardRef={ref} {...props} />)\n\nCheckboxComponent.displayName = 'Checkbox'\n\nexport const CheckboxGroup = Checkbox.Group\n\nexport default CheckboxComponent\n","import React from 'react'\nimport { ModalProps as AntModalProps } from 'antd/lib/modal'\nimport Modal from '@/components/modal'\nimport Button from '@/components/button'\n\nexport interface ModalProps<T = any>\n  extends Omit<AntModalProps, 'onOk' | 'onCancel'> {\n  item?: T\n  onOk?: (data?: any) => void\n  onCancel: () => void\n  children?: React.ReactNode\n}\n\nfunction TemplateModal<T = any>({\n  onCancel,\n  onOk,\n  item,\n  children,\n  ...props\n}: ModalProps<T>) {\n  const handleOk = () => {\n    if (onOk) {\n      onOk()\n    }\n  }\n  return (\n    <Modal\n      visible\n      onCancel={onCancel}\n      width={650}\n      maskClosable={false}\n      keyboard={false}\n      footer={[\n        <Button\n          key=\"btn-cancel\"\n          color=\"outline\"\n          style={{ minWidth: 80, marginRight: 16 }}\n          onClick={onCancel}>\n          取消\n        </Button>,\n        <Button\n          key=\"btn-save\"\n          color=\"primary\"\n          style={{ minWidth: 80 }}\n          onClick={handleOk}>\n          儲存\n        </Button>,\n      ]}\n      {...props}>\n      {children}\n    </Modal>\n  )\n}\n\nexport { TemplateModal as Modal }\n\nexport default TemplateModal\n","import React from 'react'\nimport cx from 'classnames'\nimport { Card } from 'antd'\nimport { CardProps } from 'antd/lib/card'\nimport { FontColorsOutlined } from '@ant-design/icons'\nimport styled from 'styled-components'\nimport { useReportPreview } from '@/hooks/useReportTemplate'\nimport { isNil } from '@/utils/webHelper'\n\nconst StyledCard = styled(Card)`\n  &.ant-card {\n    border-radius: 10px;\n    border: none;\n    cursor: move;\n  }\n\n  .ant-card-head {\n    padding-left: 18px;\n    border-bottom: none;\n    color: ${p => p.theme.primary};\n    font-size: 14px;\n    font-weight: 600;\n  }\n\n  &.ant-card-head--hide .ant-card-head {\n    display: none;\n  }\n\n  &.is--preview .ant-card-head {\n    min-height: auto;\n  }\n\n  &.is--preview .ant-card-head-title {\n    padding-top: 0;\n  }\n\n  &.is--preview .ant-card-body {\n    padding-top: 12px;\n    padding-bottom: 8px;\n  }\n\n  .ant-card-head-title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-bottom: 0;\n  }\n\n  .ant-card-body {\n    padding-top: 16px;\n    padding-left: 26px;\n    padding-bottom: 20px;\n  }\n`\n\ninterface Props extends CardProps {\n  onEdit?: () => void\n  onDelete?: () => void\n}\n\nfunction TemplateWrapper({\n  title,\n  children,\n  onDelete,\n  onEdit,\n  ...props\n}: Props) {\n  const [isPreview] = useReportPreview()\n\n  return (\n    <StyledCard\n      title={\n        <div className=\"flex items-center\">\n          {!isPreview && <FontColorsOutlined className=\"mr-3\" />}\n          {title || '預設標題 (可點鉛筆圖示可進行編輯)'}\n        </div>\n      }\n      className={cx({\n        'ant-card-head--hide': isNil(title),\n        'is--preview': isPreview,\n      })}\n      {...props}>\n      {children}\n    </StyledCard>\n  )\n}\n\nexport default TemplateWrapper\n","import { ReactText } from 'react'\n\nexport const createFormItemLayout = (label: number = 3, wrapper?: number) => ({\n  labelCol: {\n    xs: { span: label },\n    sm: { span: label },\n  },\n  wrapperCol: {\n    xs: { span: wrapper || 24 - label },\n    sm: { span: wrapper || 24 - label },\n  },\n})\n\nexport const thosandSeprartor = {\n  formatter: (value: number | string | undefined) => {\n    if (!value) {\n      return value as string\n    }\n    return `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n  },\n  parser: (value: string | undefined) =>\n    (value ? value.replace(/\\$\\s?|(,*)/g, '') : value) as ReactText,\n}\n\nexport const currency = {\n  formatter: (value: number | string | undefined) => {\n    if (!value) {\n      return value as string\n    }\n    return `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n  },\n  parser: (value: string | undefined) =>\n    (value ? value.replace(/\\$\\s?|(,*)/g, '') : value) as ReactText,\n}\n\nexport const percent = {\n  // min: 0,\n  max: 100,\n  formatter: (value: number | string | undefined) => {\n    if (!value) {\n      return value as string\n    }\n    return `${value}%`\n  },\n  parser: (value: string | undefined) =>\n    (value ? value.replace('%', '') : value) as ReactText,\n}\n\nexport const rules = {\n  required: { required: true, message: '此欄位必填' },\n  number: {\n    required: false,\n    type: 'number',\n    message: '請填寫數字',\n    transform(value: any) {\n      if (!value) {\n        return value\n      }\n      return Number(value)\n    },\n  },\n  account: {\n    required: true,\n    message: '欄位長度為8~128字元,特殊符號-,_',\n    pattern: new RegExp(/^.{8,128}$/),\n  },\n  password: {\n    required: true,\n    message: '密碼長度為6~128字元',\n    pattern: new RegExp(/^.{6,128}$/),\n  },\n}\n","import React from 'react'\nimport { Form } from 'antd'\nimport { pathOr } from 'ramda'\nimport { Input, TextArea } from '@/components/input'\nimport Checkbox from '@/components/checkbox'\nimport { Modal, ModalProps } from '@/components/report-template-modal'\nimport TemplateWrapper from '@/components/report-template-wrapper'\nimport { createFormItemLayout } from '@/utils/form'\nimport { ReportTemplateSetting, ReportTemplateProps } from '@/constants/types'\n\ninterface Setting extends ReportTemplateSetting {\n  defaultValue?: string\n  multipleLine?: boolean\n}\n\nexport default function ReportTemplateInputText(props: ReportTemplateProps) {\n  const { editModalVisible, handleEditModalVisible, onUpdate, item } = props\n\n  const [setting, setSetting] = React.useState<Setting>(\n    pathOr({}, ['setting'], item)\n  )\n\n  const handleOk = (values: Setting) => {\n    setSetting(values)\n    onUpdate({ ...item, setting: values })\n  }\n\n  const inputProps = {\n    bordered: false,\n    className: 'w-2/3',\n    placeholder: setting.tooltip || '輸入內容',\n    defaultValue: setting.defaultValue,\n  }\n\n  return (\n    <>\n      {editModalVisible && (\n        <InputTextModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n        />\n      )}\n      <TemplateWrapper title={setting.text || ''}>\n        {setting.multipleLine ? (\n          <TextArea {...inputProps} autoSize={{ minRows: 3 }} />\n        ) : (\n          <Input {...inputProps} />\n        )}\n      </TemplateWrapper>\n    </>\n  )\n}\n\nfunction InputTextModal({\n  onOk,\n  onCancel,\n  item,\n  ...props\n}: ModalProps<Setting>) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      if (onOk) {\n        onOk(values)\n      }\n      onCancel()\n    })\n  }\n\n  return (\n    <Modal<Setting>\n      {...props}\n      title={\n        <>\n          <div>\n            Text\n            <div className=\"inline ml-2 text-sm text-gray-600\">\n              typically used for description something.\n            </div>\n          </div>\n        </>\n      }\n      onCancel={onCancel}\n      onOk={handleOk}>\n      <Form\n        {...createFormItemLayout(5, 16)}\n        labelAlign=\"left\"\n        form={form}\n        initialValues={item}>\n        <Form.Item label=\"Text\" name=\"text\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Default Value\" name=\"defaultValue\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Tooltip\" name=\"tooltip\">\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Multiple Lines\"\n          name=\"multipleLine\"\n          valuePropName=\"checked\">\n          <Checkbox />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { InputNumber } from 'antd'\nimport { InputNumberProps } from 'antd/lib/input-number'\nimport styled from 'styled-components'\nimport { RefProps } from '@/constants/types'\nimport { percent, currency, thosandSeprartor } from '@/utils/form'\n\ntype Props = RefProps & InputNumberProps & { bordered?: boolean }\n\nconst StyledInputNumber = styled(InputNumber).attrs({\n  min: 0 as any, // dont know why error\n})<Props>`\n  &.ant-input-number {\n    border-color: ${p => p.theme.primary};\n\n    ::placeholder {\n      color: red;\n    }\n  }\n\n  &.ant-input-number-focused,\n  &.ant-input-number:focus,\n  &.ant-input-number:hover {\n    border-color: ${p => p.theme.primary};\n  }\n\n  &.ant-input-number-focused:not(.ant-input-number-borderless),\n  &.ant-input-number:focus:not(.ant-input-number-borderless) {\n    box-shadow: 0 0 0 1px ${p => p.theme.primary};\n  }\n\n  &.ant-input-number-borderless,\n  &.ant-input-number-borderless:hover,\n  &.ant-input-number-borderless:focus,\n  &.ant-input-number-borderless-focused,\n  &.ant-input-number-borderless-disabled,\n  &.ant-input-number-borderless[disabled] {\n    border: none;\n    border-bottom: 1px solid ${p => p.theme.primary};\n  }\n`\n\nexport const ThousandSeprartorInput = React.forwardRef<\n  typeof InputNumber,\n  Props\n>(({ ...props }, ref) => (\n  <StyledInputNumber forwardRef={ref} {...props} {...thosandSeprartor} />\n))\n\nexport const CurrencyInput = React.forwardRef<typeof InputNumber, Props>(\n  ({ ...props }, ref) => (\n    <StyledInputNumber forwardRef={ref} {...props} {...currency} />\n  )\n)\n\nexport const PercentInput = React.forwardRef<typeof InputNumber, Props>(\n  ({ ...props }, ref) => (\n    <StyledInputNumber forwardRef={ref} {...props} {...percent} />\n  )\n)\n\nThousandSeprartorInput.displayName = 'ThousandSeprartorInput'\n\nCurrencyInput.displayName = 'CurrencyInput'\n\nPercentInput.displayName = 'PercentInput'\n\nexport { StyledInputNumber as InputNumber }\n\nexport default StyledInputNumber\n","import React from 'react'\nimport { Form } from 'antd'\nimport { pathOr } from 'ramda'\nimport Input from '@/components/input'\nimport InputNumber from '@/components/input-number'\nimport { Modal, ModalProps } from '@/components/report-template-modal'\nimport TemplateWrapper from '@/components/report-template-wrapper'\nimport { createFormItemLayout } from '@/utils/form'\nimport { ReportTemplateSetting, ReportTemplateProps } from '@/constants/types'\n\ninterface Setting extends ReportTemplateSetting {\n  defaultValue?: number\n  max?: number\n  min?: number\n  units?: string\n}\n\nexport default function ReportTemplateInputNumber(props: ReportTemplateProps) {\n  const { editModalVisible, handleEditModalVisible, item, onUpdate } = props\n\n  const [setting, setSetting] = React.useState<Setting>(\n    pathOr({}, ['setting'], item)\n  )\n\n  const handleOk = (values: Setting) => {\n    setSetting(values)\n    onUpdate({ ...item, setting: values })\n  }\n\n  return (\n    <>\n      {editModalVisible && (\n        <InputNumberModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n        />\n      )}\n      <TemplateWrapper title={setting.text || ''}>\n        <InputNumber\n          style={{ width: '33.333333%' }}\n          className=\"ant-input-number-borderless\"\n          defaultValue={setting.defaultValue}\n          min={setting.min}\n          max={setting.max}\n          formatter={value => `${setting.units || ''} ${value}`}\n          placeholder={setting.tooltip || '輸入數值'}\n        />\n      </TemplateWrapper>\n    </>\n  )\n}\n\nfunction InputNumberModal({ onOk, onCancel, item, ...props }: ModalProps) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      if (onOk) {\n        onOk(values)\n      }\n      onCancel()\n    })\n  }\n\n  return (\n    <Modal\n      {...props}\n      title={\n        <>\n          <div>\n            Number\n            <div className=\"inline ml-2 text-sm text-gray-600\">\n              typically used for input number.\n            </div>\n          </div>\n        </>\n      }\n      onOk={handleOk}\n      onCancel={onCancel}>\n      <Form\n        {...createFormItemLayout(5, 16)}\n        labelAlign=\"left\"\n        form={form}\n        initialValues={item}>\n        <Form.Item label=\"Text\" name=\"text\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Default Value\" name=\"defaultValue\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Tooltip\" name=\"tooltip\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Minimum Value\" name=\"min\">\n          <InputNumber />\n        </Form.Item>\n        <Form.Item label=\"Maximum Value\" name=\"max\">\n          <InputNumber />\n        </Form.Item>\n        <Form.Item label=\"Units\" name=\"units\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { Radio } from 'antd'\nimport { RadioProps } from 'antd/lib/radio'\nimport styled from 'styled-components'\n\nconst StyledRadio = styled(Radio)`\n  &.ant-radio-wrapper {\n    color: ${p => p.theme.darkGrey};\n\n    span.ant-radio + * {\n      padding-left: 16px;\n    }\n\n    .ant-radio-inner,\n    .ant-radio-checked .ant-radio-inner {\n      border-color: ${p => p.theme.primary};\n    }\n\n    .ant-radio-inner::after {\n      background: ${p => p.theme.primary};\n    }\n\n    &:hover,\n    .ant-radio:hover .ant-radio-inner,\n    .ant-radio-input:focus + .ant-radio-inner {\n      border-color: ${p => p.theme.primary};\n    }\n  }\n`\n\ninterface Props extends RadioProps {\n  css?: React.CSSProperties\n}\n\nclass RadioComponent extends React.Component<Props, any> {\n  public static Group = Radio.Group\n\n  public static displayName = 'Radio'\n\n  public render() {\n    return <StyledRadio {...this.props} />\n  }\n}\n\nexport default RadioComponent\n","// tslint:disable: quotemark no-implicit-dependencies no-shadowed-variable no-var-requires\nimport React from 'react'\nimport { TableProps } from 'antd/lib/table'\nimport { FormInstance } from 'antd/lib/form'\nimport Table from '@/components/table'\n\ntype EditableTableProps<T> = Omit<TableProps<T>, 'onChange'> & {\n  value?: T[]\n  form: FormInstance\n  onChange?(changedValue: T[] | null): void\n  onRowAdd: (form: FormInstance) => any\n  onRowDelete: (value: { id: React.Key; form: FormInstance }) => any\n}\n\nexport default function EditableTable<T = any>({\n  form,\n  value,\n  onChange,\n  onRowAdd,\n  onRowDelete,\n  ...props\n}: EditableTableProps<T>) {\n  const triggerChange = (changedValue: T[]) => {\n    if (onChange) {\n      onChange(changedValue)\n    }\n  }\n\n  const handleAdd = () => {\n    triggerChange(onRowAdd(form))\n  }\n\n  const handleDelete = (id: string) => {\n    triggerChange(onRowDelete({ id, form }))\n  }\n\n  return (\n    <Table\n      {...props}\n      rowKey=\"id\"\n      pagination={false}\n      size=\"small\"\n      dataSource={value as any}\n      onAddRowClick={handleAdd}\n      onDeleteRowClick={handleDelete}\n      editable={true}\n    />\n  )\n}\n","import React from 'react'\nimport { Form } from 'antd'\nimport { ColumnProps } from 'antd/lib/table'\nimport { FormInstance } from 'antd/lib/form'\nimport { concat, __, pathOr, invoker, filter } from 'ramda'\nimport Input from '@/components/input'\nimport Checkbox from '@/components/checkbox'\nimport EditableTable from '@/components/editable-table'\nimport { uuid } from '@/utils/webHelper'\nimport { createFormItemLayout } from '@/utils/form'\nimport { ReportTemplateSetting } from '@/constants/types'\nimport { Modal, ModalProps } from './report-template-modal'\nconst { compose } = require('ramda')\n\nexport interface Setting extends ReportTemplateSetting {\n  options?: Option[]\n}\n\nexport type Option = {\n  id: React.Key\n  text?: string\n  selected?: boolean\n  freetext?: boolean\n}\n\nexport const defaultValue: Setting = {\n  options: [\n    {\n      id: uuid(),\n      text: '預設選項 1',\n      selected: true,\n      freetext: false,\n    },\n    {\n      id: uuid(),\n      text: '預設選項 2',\n      selected: true,\n      freetext: false,\n    },\n    {\n      id: uuid(),\n      text: '預設選項 3',\n      selected: true,\n      freetext: false,\n    },\n  ],\n}\n\nexport function TemplateSelectionModal({\n  onCancel,\n  onOk,\n  item,\n  ...props\n}: ModalProps) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      if (onOk) {\n        onOk(values)\n      }\n      onCancel()\n    })\n  }\n\n  const handleRowAdd = (form: FormInstance) => {\n    return compose(\n      concat(__, [\n        {\n          id: uuid(),\n          text: undefined,\n          selected: true,\n          freetext: false,\n        },\n      ]),\n      pathOr([], ['options']),\n      invoker(0, 'getFieldsValue')()\n    )(form)\n  }\n\n  const handleRowDelete = ({\n    id,\n    form,\n  }: {\n    id: React.Key\n    form: FormInstance\n  }) => {\n    return compose(\n      filter((x: any) => x.id !== id),\n      pathOr([], ['options']),\n      invoker(0, 'getFieldsValue')()\n    )(form)\n  }\n\n  const columns: ColumnProps<Option>[] = [\n    {\n      title: '選項名稱',\n      render: (v, r, idx) => (\n        <Form.Item noStyle name={['options', idx, 'text']}>\n          <Input />\n        </Form.Item>\n      ),\n    },\n    {\n      title: '是否可選',\n      align: 'center',\n      render: (v, r, idx) => (\n        <Form.Item\n          noStyle\n          name={['options', idx, 'selected']}\n          valuePropName=\"checked\">\n          <Checkbox />\n        </Form.Item>\n      ),\n    },\n    {\n      title: '是否可輸入',\n      align: 'center',\n      render: (v, r, idx) => (\n        <Form.Item\n          noStyle\n          name={['options', idx, 'freetext']}\n          valuePropName=\"checked\">\n          <Checkbox />\n        </Form.Item>\n      ),\n    },\n  ]\n\n  return (\n    <Modal\n      {...props}\n      title={\n        <>\n          <div>Single Selection List</div>\n          <div className=\"mt-1 text-sm text-gray-600\">\n            Typically used for shorter lists so that all responses are visible\n            as radio buttons. Only allow a single selection.\n          </div>\n        </>\n      }\n      onCancel={onCancel}\n      onOk={handleOk}>\n      <Form\n        {...createFormItemLayout(3, 16)}\n        labelAlign=\"left\"\n        form={form}\n        initialValues={item}>\n        <Form.Item label=\"Text\" name=\"text\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Tooltip\" name=\"tooltip\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Options\" />\n        <Form.Item noStyle name=\"options\">\n          <EditableTable\n            columns={columns}\n            form={form}\n            onRowAdd={handleRowAdd}\n            onRowDelete={handleRowDelete}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport cx from 'classnames'\nimport { pathOr } from 'ramda'\nimport Radio from '@/components/radio'\nimport Input from '@/components/input'\nimport TemplateWrapper from '@/components/report-template-wrapper'\nimport {\n  TemplateSelectionModal,\n  Setting,\n  Option,\n  defaultValue,\n} from '@/components/report-template-selection-modal'\nimport { mapIndexed } from '@/utils/webHelper'\nimport { ReportTemplateProps } from '@/constants/types'\nconst { compose } = require('ramda')\n\nfunction ReportTemplateMultipleSelection(props: ReportTemplateProps) {\n  const { item, editModalVisible, handleEditModalVisible, onUpdate } = props\n\n  const [setting, setSetting] = React.useState<Setting>(\n    pathOr(defaultValue, ['setting'], item)\n  )\n\n  const handleOk = (values: Setting) => {\n    setSetting(values)\n    onUpdate({ ...item, setting: values })\n  }\n\n  return (\n    <>\n      {editModalVisible && (\n        <TemplateSelectionModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n          title={\n            <>\n              <div>Multiple Selection List</div>\n              <div className=\"mt-1 text-sm text-gray-600\">\n                typically used for shorter lists so that all responses are\n                visible as checkboxes. Allows Multiple selections.\n              </div>\n            </>\n          }\n        />\n      )}\n      <TemplateWrapper\n        title={setting.text || ''}\n        bodyStyle={{ paddingLeft: 36 }}>\n        {compose(\n          mapIndexed((x: Option, idx: number) => (\n            <Radio\n              key={x.id}\n              className={cx('block', { 'mt-1': idx > 0 })}\n              defaultChecked={false}\n              value={x.text}>\n              {x.text}\n              {x.freetext && (\n                <Input\n                  bordered={false}\n                  size=\"small\"\n                  placeholder=\"輸入備註\"\n                  className=\"ml-4 w-1/3\"\n                />\n              )}\n            </Radio>\n          )),\n          pathOr([], ['options'])\n        )(setting)}\n      </TemplateWrapper>\n    </>\n  )\n}\n\nexport default ReportTemplateMultipleSelection\n","import React from 'react'\nimport cx from 'classnames'\nimport { pathOr } from 'ramda'\nimport Radio from '@/components/radio'\nimport Input from '@/components/input'\nimport TemplateWrapper from '@/components/report-template-wrapper'\nimport {\n  TemplateSelectionModal,\n  Setting,\n  Option,\n  defaultValue,\n} from '@/components/report-template-selection-modal'\nimport { mapIndexed } from '@/utils/webHelper'\nimport { ReportTemplateProps } from '@/constants/types'\nconst { compose } = require('ramda')\n\nfunction ReportTemplateSingleSelection(props: ReportTemplateProps) {\n  const { item, editModalVisible, handleEditModalVisible, onUpdate } = props\n\n  const [setting, setSetting] = React.useState<Setting>(\n    pathOr(defaultValue, ['setting'], item)\n  )\n\n  const handleOk = (values: Setting) => {\n    setSetting(values)\n    onUpdate({ ...item, setting: values })\n  }\n\n  return (\n    <>\n      {editModalVisible && (\n        <TemplateSelectionModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n        />\n      )}\n      <TemplateWrapper\n        title={setting.text || ''}\n        bodyStyle={{ paddingLeft: 36 }}>\n        <Radio.Group>\n          {compose(\n            mapIndexed((x: Option, idx: number) => (\n              <Radio\n                key={x.id}\n                className={cx('block', { 'mt-1': idx > 0 })}\n                defaultChecked={false}\n                value={x.text}>\n                {x.text}\n                {x.freetext && (\n                  <Input\n                    size=\"small\"\n                    bordered={false}\n                    placeholder=\"輸入備註\"\n                    className=\"ml-3 w-1/3\"\n                  />\n                )}\n              </Radio>\n            )),\n            pathOr([], ['options'])\n          )(setting)}\n        </Radio.Group>\n      </TemplateWrapper>\n    </>\n  )\n}\n\nexport default ReportTemplateSingleSelection\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { DatePicker, TimePicker } from 'antd'\nimport { DatePickerProps } from 'antd/lib/date-picker'\n\nconst borderLess = css`\n  &.ant-picker-borderless {\n    border: none;\n    border-bottom: 1px solid ${p => p.theme.primary} !important;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  &.ant-picker-focused:not(.ant-picker-borderless) {\n    box-shadow: 0 0 0 1px ${p => p.theme.primary};\n  }\n`\n\nconst RangePicker = styled(DatePicker.RangePicker)`\n  &.ant-picker {\n    border: 1px solid ${p => p.theme.primary};\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    &.ant-picker-focused {\n      box-shadow: 0 0 0 1px ${p => p.theme.primary};\n    }\n  }\n`\n\nconst StyledDatePicker: any = styled(DatePicker)`\n  &.ant-picker {\n    border: 1px solid ${p => p.theme.primary};\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    .ant-picker-suffix {\n      color: ${p => p.theme.primary};\n    }\n\n    ${borderLess};\n  }\n`\n\nconst StyledTimePicker = styled(TimePicker)`\n  &.ant-picker {\n    border: 1px solid ${p => p.theme.primary};\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    .ant-picker-suffix {\n      color: ${p => p.theme.primary};\n    }\n\n    ${borderLess};\n  }\n`\n\nfunction DatePickerComponent(props: DatePickerProps) {\n  return <StyledDatePicker {...props} />\n}\n\nexport {\n  DatePickerComponent as DatePicker,\n  RangePicker,\n  StyledTimePicker as TimePicker,\n}\n\nexport default DatePickerComponent\n","import React from 'react'\nimport { Form } from 'antd'\nimport { pathOr } from 'ramda'\nimport Input from '@/components/input'\nimport DatePicker from '@/components/datepicker'\nimport { Modal, ModalProps } from '@/components/report-template-modal'\nimport TemplateWrapper from '@/components/report-template-wrapper'\nimport { createFormItemLayout } from '@/utils/form'\nimport { ReportTemplateProps } from '@/constants/types'\n\ntype Setting = {\n  text?: string\n  defaultValue?: moment.Moment\n  tooltip?: string\n}\n\nexport default function ReportTemplateDate(props: ReportTemplateProps) {\n  const { editModalVisible, handleEditModalVisible, item, onUpdate } = props\n\n  const [setting, setSetting] = React.useState<Setting>(\n    pathOr({}, ['setting'], item)\n  )\n\n  const handleOk = (values: Setting) => {\n    setSetting(values)\n    onUpdate({ ...item, setting: values })\n  }\n\n  return (\n    <>\n      {editModalVisible && (\n        <InputDateModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n        />\n      )}\n      <TemplateWrapper title={setting.text || ''}>\n        <DatePicker\n          bordered={false}\n          className=\"w-1/3\"\n          placeholder={setting.tooltip || '選擇日期'}\n          defaultValue={setting.defaultValue}\n        />\n      </TemplateWrapper>\n    </>\n  )\n}\n\nfunction InputDateModal({\n  onOk,\n  onCancel,\n  item,\n  ...props\n}: ModalProps<Setting>) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      if (onOk) {\n        onOk(values)\n      }\n      onCancel()\n    })\n  }\n\n  return (\n    <Modal<Setting>\n      {...props}\n      title={\n        <>\n          <div>\n            Date\n            <div className=\"inline ml-2 text-sm text-gray-600\">\n              typically used for target date.\n            </div>\n          </div>\n        </>\n      }\n      onCancel={onCancel}\n      onOk={handleOk}>\n      <Form\n        {...createFormItemLayout(5, 16)}\n        labelAlign=\"left\"\n        form={form}\n        initialValues={item}>\n        <Form.Item label=\"Text\" name=\"text\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Default Value\" name=\"defaultValue\">\n          <DatePicker allowClear picker=\"date\" className=\"w-full\" />\n        </Form.Item>\n        <Form.Item label=\"Tooltip\" name=\"tooltip\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { Form } from 'antd'\nimport { pathOr } from 'ramda'\nimport Input from '@/components/input'\nimport { TimePicker } from '@/components/datepicker'\nimport { Modal, ModalProps } from '@/components/report-template-modal'\nimport TemplateWrapper from '@/components/report-template-wrapper'\nimport { createFormItemLayout } from '@/utils/form'\nimport { ReportTemplateSetting, ReportTemplateProps } from '@/constants/types'\n\ninterface Setting extends ReportTemplateSetting {\n  defaultValue?: moment.Moment\n}\n\nexport default function ReportTemplateTime(props: ReportTemplateProps) {\n  const { editModalVisible, handleEditModalVisible, item, onUpdate } = props\n\n  const [setting, setSetting] = React.useState<Setting>(\n    pathOr({}, ['setting'], item)\n  )\n\n  const handleOk = (values: Setting) => {\n    setSetting(values)\n    onUpdate({ ...item, setting: values })\n  }\n\n  return (\n    <>\n      {editModalVisible && (\n        <InputTimeModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n        />\n      )}\n      <TemplateWrapper title={setting.text || ''}>\n        <TimePicker\n          bordered={false}\n          className=\"w-1/3\"\n          placeholder={setting.tooltip || '選擇時間'}\n          defaultValue={setting.defaultValue}\n        />\n      </TemplateWrapper>\n    </>\n  )\n}\n\nfunction InputTimeModal({\n  onOk,\n  onCancel,\n  item,\n  ...props\n}: ModalProps<Setting>) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      if (onOk) {\n        onOk(values)\n      }\n      onCancel()\n    })\n  }\n\n  return (\n    <Modal<Setting>\n      {...props}\n      title={\n        <>\n          <div>\n            Time\n            <div className=\"inline ml-2 text-sm text-gray-600\">\n              typically used for target time.\n            </div>\n          </div>\n        </>\n      }\n      onCancel={onCancel}\n      onOk={handleOk}>\n      <Form\n        {...createFormItemLayout(5, 16)}\n        labelAlign=\"left\"\n        form={form}\n        initialValues={item}>\n        <Form.Item label=\"Text\" name=\"text\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Default Value\" name=\"defaultValue\">\n          <TimePicker allowClear format=\"HH:mm\" className=\"w-full\" />\n        </Form.Item>\n        <Form.Item label=\"Tooltip\" name=\"tooltip\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { pathOr, map } from 'ramda'\nimport Select from '@/components/select'\nimport TemplateWrapper from '@/components/report-template-wrapper'\nimport {\n  TemplateSelectionModal,\n  Option,\n  defaultValue,\n} from '@/components/report-template-selection-modal'\nimport { ReportTemplateSetting, ReportTemplateProps } from '@/constants/types'\nconst { compose } = require('ramda')\n\ninterface Setting extends ReportTemplateSetting {\n  options?: Option[]\n  selectionType?: 'single' | 'multiple'\n}\n\nexport default function ReportTemplateSelect(props: ReportTemplateProps) {\n  const { item, editModalVisible, handleEditModalVisible, onUpdate } = props\n\n  const [setting, setSetting] = React.useState<Setting>(\n    pathOr(defaultValue, ['setting'], item)\n  )\n\n  const handleOk = (values: Setting) => {\n    setSetting(values)\n    onUpdate({ ...item, setting: values })\n  }\n\n  return (\n    <>\n      {editModalVisible && (\n        <TemplateSelectionModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n          title={\n            <>\n              <div>Drop-down List</div>\n              <div className=\"mt-1 text-sm text-gray-600\">\n                typically used for lists of greater than 6 or 7 options.\n              </div>\n            </>\n          }\n        />\n      )}\n      <TemplateWrapper title={setting.text || ''}>\n        <Select\n          allowClear\n          bordered={false}\n          className=\"w-1/3\"\n          placeholder={setting.tooltip || '請選擇...'}>\n          {compose(\n            map((x: Option) => (\n              <Select.Option key={x.id} value={x.text as any}>\n                {x.text}\n              </Select.Option>\n            )),\n            pathOr([], ['options'])\n          )(setting)}\n        </Select>\n      </TemplateWrapper>\n    </>\n  )\n}\n","import { map, mergeAll } from 'ramda'\nimport { uuid } from '@/utils/webHelper'\nimport TemplateInputText from '@/components/report-template-input-text'\nimport TemplateInputNumber from '@/components/report-template-input-number'\nimport TemplateMultipleSelection from '@/components/report-template-multiple-selection'\nimport TemplateSingleSelection from '@/components/report-template-single-selection'\nimport TemplateDate from '@/components/report-template-date'\nimport TemplateTime from '@/components/report-template-time'\nimport TemplateSelect from '@/components/report-template-select'\n// import TempldateSectionHeader from './template-section-header'\nconst { compose } = require('ramda')\n\ninterface ReportTemplateListItem {\n  id: React.Key\n  type: string\n  name: string\n  Component: React.Component\n}\n\nconst reportTemplateList = [\n  // {\n  //   id: uuid(),\n  //   componentType: 'header',\n  //   name: renderSnippetName('Section Header'),\n  //   Component: TempldateSectionHeader,\n  // },\n  {\n    id: uuid(),\n    type: 'TemplateInputText',\n    name: 'Text',\n    Component: TemplateInputText,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateInputNumber',\n    name: 'Number',\n    Component: TemplateInputNumber,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateSelect',\n    name: 'Drop-down List',\n    Component: TemplateSelect,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateMultipleSelection',\n    name: 'Multiple Selection List',\n    Component: TemplateMultipleSelection,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateSingleSelection',\n    name: 'Single Selection List',\n    Component: TemplateSingleSelection,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateDate',\n    name: 'Date',\n    Component: TemplateDate,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateTime',\n    name: 'Time',\n    Component: TemplateTime,\n  },\n]\n\nexport const reportTemplateById = compose(\n  mergeAll,\n  map((x: ReportTemplateListItem) => ({ [x.type]: x }))\n)(reportTemplateList)\n\nexport default reportTemplateList\n","import React from 'react'\nimport { ColumnProps, TableProps, TablePaginationConfig } from 'antd/lib/table'\nimport { SpinProps } from 'antd/lib/spin'\nimport { merge } from 'ramda'\nimport { DataSource } from '@/constants/types'\nimport Table from '@/components/table'\n\ntype Props<T> = Omit<TableProps<T>, 'dataSource'> & {\n  columns: ColumnProps<T>[]\n  className?: string\n  pageNum?: number\n  dataSource: DataSource<T>\n  onChange?: (pagination: TablePaginationConfig) => any\n  loading?: boolean | SpinProps\n  rowSelection?: {\n    selectedRowKeys: any[]\n    onChange: (selectedRowKeys: any, selectedRows: any) => void\n  }\n}\n\nexport default function QueryTable<T>({\n  columns,\n  className,\n  pageNum = 1,\n  dataSource,\n  onChange,\n  loading = false,\n  rowSelection,\n  pagination,\n  ...props\n}: Props<T>) {\n  const handleTableChange = ({ current, pageSize }: TablePaginationConfig) => {\n    if (onChange) {\n      onChange({ current, pageSize })\n    }\n  }\n\n  const paginationConfig = React.useMemo(\n    () =>\n      merge<any, any>(pagination, {\n        current: pageNum,\n        pageSize: 10,\n        total: dataSource.total,\n        showSizeChanger: false,\n      }) as TablePaginationConfig,\n    [dataSource.total, pagination, pageNum]\n  )\n\n  return (\n    <Table\n      rowKey=\"id\"\n      dataSource={dataSource.content}\n      columns={columns as any}\n      pagination={paginationConfig}\n      onChange={handleTableChange}\n      rowSelection={rowSelection}\n      loading={loading}\n      className={className}\n      {...props}\n    />\n  )\n}\n"],"sourceRoot":""}