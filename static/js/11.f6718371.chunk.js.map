{"version":3,"sources":["hooks/useLink.ts","containers/report-inquiry/report-inquiry.tsx","components/input.tsx","hooks/useReportTemplate.ts","utils/form.ts","components/checkbox.tsx","components/app-footer.tsx","utils/message.tsx","components/layout.tsx","hooks/useTitle.ts","components/modal.tsx","components/table.tsx","components/select.tsx","components/report-template-modal.tsx","components/report-template-wrapper.tsx","components/report-template-input-text.tsx","components/input-number.tsx","components/report-template-input-number.tsx","components/editable-table.tsx","components/report-template-selection-modal.tsx","components/report-template-multiple-selection.tsx","components/report-template-single-selection.tsx","components/datepicker.tsx","components/report-template-date.tsx","components/report-template-time.tsx","components/report-template-select.tsx","components/report-template-section-header.tsx","components/report-template-cloze.tsx","components/report-template-list.tsx","components/radio.tsx","components/query-table.tsx"],"names":["useLink","ReportInquiry","useTitle","useBreadcrumb","name","useForm","form","useReportTemplates","dataSource","handleTo","pathname","evt","history","push","replace","currentTarget","dataset","id","columns","title","dataIndex","render","v","r","data-id","type","onClick","routes","style","height","justify","span","className","layout","hideRequiredMark","colon","Item","label","allowClear","placeholder","width","Option","value","rowKey","borderLess","css","p","theme","primary","StyledInput","styled","secondary","TextArea","compose","require","snippetCategoryOfReport","PATHOLOGICAL_DIAGNOSIS","GROSS","MICROSCOPY","NOTES","REFERENCES","fakeReportTemplateList","author","status","statusName","createdAt","moment","createdAtStr","format","updatedAt","updatedAtStr","description","setting","mergeAll","map","key","x","Component","path","reportTemplateById","pathOr","fakeSetting","keys","defaultSnippetsOfReport","values","snippetsOfReportState","atomFamily","default","find","propEq","Number","reportTemplateListState","atom","content","total","reportPreviewState","categoryState","head","useRecoilState","useReportTemplate","reportTemplate","_snippetList","React","useEffect","setSnippetList","JSON","stringify","useState","snippetList","category","setCategory","handleTabAdd","last","inc","getNumberFromString","Rlast","sort","a","b","prev","handleTabRemove","targetKey","confirm","onOk","omit","filter","snippetById","handleTabEdit","e","action","handleTabChange","activeKey","handleTabMove","order","snippetKeys","orderA","indexOf","orderB","handleTabNameChange","newTabName","target","innerHTML","handleSnippetUpdate","data","length","flatten","useReportPreview","isPreview","setIsPreview","useToggleReportPreview","state","useUpdateSnippet","options","item","onUpdate","defaultValue","setSetting","handleOk","createFormItemLayout","wrapper","labelCol","xs","sm","wrapperCol","thosandSeprartor","formatter","parser","currency","percent","max","rules","required","message","number","transform","account","pattern","RegExp","password","CheckboxGroup","Group","StyledCheckbox","CheckboxComponent","forwardRef","ref","props","displayName","AppFooter","Footer","background","marginTop","marginBottom","onCancel","icon","okText","cancelText","centered","autoFocusButton","okButtonProps","minWidth","marginRight","cancelButtonProps","modalDefaultProps","borderTopLeftRadius","borderTopRightRadius","Page","children","Content","cx","DEFAULT_USE_TITLE_OPTIONS","restoreOnUnmount","document","prevTitleRef","useRef","envStore","appTitle","current","_title","StyledModal","ModalComponent","this","error","success","info","StyledTable","pagination","TableComponent","editable","onAddRowClick","isRowDeletable","onDeleteRowClick","isCanEdit","_columns","useMemo","canEdit","placement","top","undefined","_","__","idx","locale","emptyText","image","PRESENTED_IMAGE_SIMPLE","Column","StyledSelect","SelectComponent","TemplateModal","visible","maskClosable","keyboard","footer","color","StyledCard","TemplateWrapper","onDelete","onEdit","titleVisible","bodyVisible","FontColorsOutlined","isNil","InputTextModal","validateFields","then","labelAlign","initialValues","valuePropName","StyledInputNumber","attrs","min","ThousandSeprartorInput","CurrencyInput","PercentInput","InputNumberModal","EditableTable","onChange","onRowAdd","onRowDelete","triggerChange","changedValue","size","uuid","text","selected","freetext","TemplateSelectionModal","noStyle","align","concat","invoker","ReportTemplateMultipleSelection","editModalVisible","handleEditModalVisible","bodyStyle","paddingLeft","mapIndexed","defaultChecked","bordered","ReportTemplateSingleSelection","StyledDatePicker","StyledTimePicker","DatePickerComponent","InputDateModal","picker","InputTimeModal","ReportTemplateCloze","reportTemplateList","componentType","inline","BoldOutlined","FontSizeOutlined","inputProps","tooltip","multipleLine","autoSize","minRows","NumberOutlined","units","DatabaseOutlined","UnorderedListOutlined","TemplateMultipleSelection","OrderedListOutlined","TemplateSingleSelection","CalendarOutlined","ClockCircleOutlined","html","Cloze","StyledRadio","darkGrey","RadioComponent","QueryTable","pageNum","loading","rowSelection","paginationConfig","merge","pageSize","showSizeChanger"],"mappings":"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","file":"static/js/11.f6718371.chunk.js","sourcesContent":["import history from '@/utils/history'\nimport { replace } from 'ramda'\n\nexport function useLink() {\n  return (pathname?: string) => () => {\n    if (pathname) {\n      history.push(pathname)\n    }\n  }\n}\n\nexport function useReplaceUrl() {\n  return (pathname: string) => (evt: React.MouseEvent<HTMLElement>) => {\n    history.push(replace(':id', `${evt.currentTarget.dataset.id}`)(pathname))\n  }\n}\n\nexport default useLink\n","import React from 'react'\nimport { Row, Col, Form } from 'antd'\nimport { ColumnProps } from 'antd/lib/table'\nimport useTitle from '@/hooks/useTitle'\nimport { useBreadcrumb } from '@/hooks/useApp'\nimport { useReplaceUrl } from '@/hooks/useLink'\nimport { useReportTemplates } from '@/hooks/useReportTemplate'\nimport * as routes from '@/constants/routes'\nimport Select from '@/components/select'\nimport Input from '@/components/input'\nimport { Page } from '@/components/layout'\nimport Button from '@/components/button'\nimport Table from '@/components/query-table'\nimport { ReportTemplate } from '@/services/reportService'\n\nexport default function ReportInquiry() {\n  useTitle('輸入報告')\n  useBreadcrumb([{ name: '輸入報告' }, { name: '輸入報告查詢' }])\n\n  const [form] = Form.useForm()\n\n  const [dataSource] = useReportTemplates()\n\n  const handleTo = useReplaceUrl()\n\n  const columns: ColumnProps<ReportTemplate>[] = [\n    {\n      title: '報告名稱',\n      dataIndex: 'name',\n      render: (v, r) => (\n        <Button\n          data-id={r.id}\n          type=\"link\"\n          onClick={handleTo(routes.REPORT_INPUT)}>\n          {v}\n        </Button>\n      ),\n    },\n    {\n      title: '創作者',\n      dataIndex: 'author',\n    },\n    {\n      title: '狀態',\n      dataIndex: 'statusName',\n    },\n    {\n      title: '創作時間',\n      dataIndex: 'createdAtStr',\n    },\n    {\n      title: '上次修改時間',\n      dataIndex: 'updatedAtStr',\n    },\n    {\n      title: '報告描述',\n      dataIndex: 'description',\n    },\n  ]\n\n  return (\n    <Page style={{ height: 'calc(100vh - 203px)' }}>\n      <Row justify=\"center\">\n        <Col span={20}>\n          <div className=\"bg-white p-12 mb-8 rounded-lg shadow-lg\">\n            <Form\n              layout=\"inline\"\n              form={form}\n              hideRequiredMark={true}\n              className=\"flex justify-between\"\n              colon={false}>\n              <Form.Item label=\"審核醫師\" name=\"doctorId\">\n                <Select\n                  allowClear\n                  placeholder=\"選擇醫師\"\n                  style={{ width: 160 }}>\n                  <Select.Option value={'李懷寶'}>\b李懷寶</Select.Option>\n                  <Select.Option value={'\b林榮嘉'}>\b林榮嘉</Select.Option>\n                </Select>\n              </Form.Item>\n              <Form.Item label=\"申請序號\" name=\"serialNo\">\n                <Input placeholder=\"輸入申請序號\" style={{ width: 230 }} />\n              </Form.Item>\n              <Form.Item label=\"報告格式\">\n                <Input placeholder=\"輸入報告格式\" style={{ width: 230 }} />\n              </Form.Item>\n            </Form>\n          </div>\n        </Col>\n      </Row>\n      <Row justify=\"center\">\n        <Col span={20}>\n          <Table rowKey=\"id\" columns={columns} dataSource={dataSource} />\n        </Col>\n      </Row>\n    </Page>\n  )\n}\n","import { Input } from 'antd'\nimport styled, { css } from 'styled-components'\n\nconst borderLess = css`\n  &.ant-input-borderless {\n    border: none;\n    border-bottom: 1px solid ${p => p.theme.primary};\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  &:active:not(.ant-input-borderless) {\n    box-shadow: 0 0 0 1px ${p => p.theme.primary};\n  }\n`\n\nconst StyledInput = styled(Input)`\n  &.ant-input-affix-wrapper .ant-input,\n  &.ant-input {\n    border-color: ${p => p.theme.primary};\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    ${borderLess};\n  }\n`\n\nconst Search = styled(Input.Search)`\n  &.ant-input-search {\n    .ant-input {\n      border-color: ${p => p.theme.primary};\n\n      &:hover,\n      &:focus {\n        border-color: ${p => p.theme.secondary};\n      }\n\n      &:focus {\n        box-shadow: 0 0 0 1px ${p => p.theme.primary};\n      }\n    }\n\n    .anticon-search {\n      font-size: 20px;\n      color: ${p => p.theme.primary};\n    }\n  }\n`\n\nconst TextArea = styled(Input.TextArea)`\n  &.ant-input {\n    resize: none;\n    border: 1px solid ${p => p.theme.primary};\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    ${borderLess};\n  }\n`\n\nexport { StyledInput as Input, TextArea, Search }\n\nexport default StyledInput\n","import React from 'react'\nimport { atom, atomFamily, useRecoilState } from 'recoil'\nimport {\n  find,\n  mergeAll,\n  map,\n  values,\n  head,\n  keys,\n  path,\n  pathOr,\n  propEq,\n  sort,\n  last as Rlast,\n  omit,\n  inc,\n  filter,\n  flatten,\n  length,\n} from 'ramda'\nimport moment from 'moment'\nimport fakeSetting from '@/mocks/fake-snippet-setting.json'\nimport { reportTemplateById } from '@/components/report-template-list'\nimport { getNumberFromString } from '@/utils/webHelper'\nimport { confirm } from '@/utils/message'\nimport { SnippetProps, ReportTemplateSetting } from '@/constants/types'\nconst { compose } = require('ramda')\n\nexport type Snippets = { [key: string]: SnippetProps[] }\n\nexport type ReportTemplate = {\n  id: number\n  name: string\n  author: string\n  status: 1\n  statusName: string\n  createdAt: moment.Moment\n  createdAtStr: string\n  updatedAt: moment.Moment\n  updatedAtStr: string\n  description: string\n  setting: Snippets\n}\n\n// 模版分類\nconst snippetCategoryOfReport = {\n  PATHOLOGICAL_DIAGNOSIS: 'Pathological diagnosis',\n  GROSS: 'Gross',\n  MICROSCOPY: 'Microscopy',\n  NOTES: 'Notes',\n  REFERENCES: 'References',\n}\n\nconst fakeReportTemplateList = [\n  {\n    id: 1,\n    name: 'AJCC8-2018-卵巢癌-Ovary-CT',\n    author: '李懷寶',\n    status: 1,\n    statusName: '已發佈',\n    createdAt: moment(),\n    createdAtStr: moment().format('YYYY/MM/DD HH:mm'),\n    updatedAt: moment(),\n    updatedAtStr: moment().format('YYYY/MM/DD HH:mm'),\n    description: '卵巢癌報告模版',\n    setting: compose(\n      mergeAll,\n      map((key: string) => ({\n        [key]: compose(\n          map((x: any) => ({\n            ...x,\n            Component: path([x.type, 'Component'])(reportTemplateById),\n          })),\n          pathOr([], [key])\n        )(fakeSetting),\n      })),\n      keys\n    )(fakeSetting) as Snippets,\n  },\n  {\n    id: 2,\n    name: 'AJCC8-2018-肝-HCC-CT',\n    author: '林榮嘉',\n    status: 1,\n    statusName: '已發佈',\n    createdAt: moment(),\n    createdAtStr: moment().format('YYYY/MM/DD HH:mm'),\n    updatedAt: moment(),\n    updatedAtStr: moment().format('YYYY/MM/DD HH:mm'),\n    description: '肝臟報告模版',\n    setting: compose(\n      mergeAll,\n      map((key: string) => ({\n        [key]: compose(\n          map((x: any) => ({\n            ...x,\n            Component: path([x.type, 'Component'])(reportTemplateById),\n          })),\n          pathOr([], [key])\n        )(fakeSetting),\n      })),\n      keys\n    )(fakeSetting) as Snippets,\n  },\n]\n\nconst defaultSnippetsOfReport = compose(\n  mergeAll,\n  map((key: string) => ({ [key]: [] })),\n  values\n)(snippetCategoryOfReport)\n\nconst snippetsOfReportState = atomFamily<ReportTemplate, React.Key | undefined>(\n  {\n    key: 'reportSnippetsState',\n    default: id =>\n      compose(\n        // pathOr(defaultSnippetsOfReport, ['setting']),\n        find(propEq('id', Number(id)))\n      )(fakeReportTemplateList),\n  }\n)\n\nconst reportTemplateListState = atom({\n  key: 'reportTemplateListState',\n  default: {\n    content: fakeReportTemplateList,\n    total: 2,\n  },\n})\n\nconst reportPreviewState = atom({\n  key: 'reportPreviewState',\n  default: false,\n})\n\nconst categoryState = atom<string>({\n  key: 'categoryState',\n  default: compose(head, values)(snippetCategoryOfReport),\n})\n\n// 報告模版清單\nexport function useReportTemplates() {\n  return useRecoilState(reportTemplateListState)\n}\n\n// 模版報告資料\nexport function useReportTemplate(id?: React.Key) {\n  const [reportTemplate] = useRecoilState(snippetsOfReportState(id))\n\n  let _snippetList = pathOr(defaultSnippetsOfReport, ['setting'])(\n    reportTemplate\n  )\n\n  React.useEffect(() => {\n    setSnippetList(_snippetList)\n  }, [JSON.stringify(_snippetList)]) // eslint-disable-line\n\n  const [snippetList, setSnippetList] = React.useState<Snippets>(_snippetList)\n\n  const [category, setCategory] = useRecoilState(categoryState)\n\n  const handleSnippetUpdate = (data: any[]) => {\n    setSnippetList(prev => ({ ...prev, [category]: data }))\n  }\n\n  const handleTabChange = (activeKey: string) => {\n    setCategory(activeKey)\n  }\n\n  const handleTabMove = (order: string[]) => {\n    const snippetKeys = keys(snippetList)\n\n    setSnippetList(\n      compose(\n        mergeAll,\n        map((key: string) => ({ [key]: snippetList[key] })),\n        sort((a: string, b: string) => {\n          const orderA = order.indexOf(a)\n          const orderB = order.indexOf(b)\n\n          if (orderA !== -1 && orderB !== -1) {\n            return orderA - orderB\n          }\n          if (orderA !== -1) {\n            return -1\n          }\n          if (orderB !== -1) {\n            return 1\n          }\n\n          const ia = snippetKeys.indexOf(a)\n          const ib = snippetKeys.indexOf(b)\n\n          return ia - ib\n        }),\n        keys\n      )(snippetList)\n    )\n  }\n\n  const handleTabAdd = () => {\n    const last = compose(\n      inc,\n      pathOr(0, []),\n      getNumberFromString,\n      Rlast,\n      sort((a: any, b: any) => a - b),\n      keys\n    )(snippetList)\n\n    setSnippetList(prev => ({ ...prev, [`新標籤頁${last}`]: [] }))\n    setCategory(`新標籤頁${last}`)\n  }\n\n  const handleTabRemove = (targetKey: string) => {\n    confirm({\n      title: '確認要刪除此頁籤嗎？',\n      content: '刪除會連同模版資料一起刪除，確認繼續？',\n      onOk: () => {\n        setSnippetList(prev => omit([targetKey], prev))\n\n        if (category === targetKey) {\n          setCategory(\n            compose(\n              Rlast,\n              filter((key: string) => key !== targetKey),\n              keys\n            )(snippetList)\n          )\n        }\n      },\n    })\n  }\n\n  const handleTabNameChange = (targetKey: string) => (\n    evt: React.FocusEvent<HTMLSpanElement>\n  ) => {\n    const newTabName = evt.target.innerHTML\n\n    setSnippetList(prev =>\n      compose(\n        mergeAll,\n        map((key: string) => ({\n          [key === targetKey ? newTabName : key]: prev[key],\n        })),\n        keys\n      )(prev)\n    )\n    setCategory(newTabName)\n  }\n\n  const handleTabEdit = (\n    e:\n      | string\n      | React.MouseEvent<Element, MouseEvent>\n      | React.KeyboardEvent<Element>,\n    action: 'add' | 'remove'\n  ) => {\n    const handler = action === 'add' ? handleTabAdd : handleTabRemove\n\n    handler(e as string)\n  }\n\n  let snippetById: { [key: string]: SnippetProps } = {}\n\n  return {\n    category,\n    reportTemplate,\n    snippetList,\n    setCategory,\n    setSnippetList,\n    handleTabEdit,\n    handleTabChange,\n    handleTabMove,\n    handleTabAdd,\n    handleTabRemove,\n    handleTabNameChange,\n    handleSnippetUpdate,\n    total: compose(length, flatten, values)(snippetList),\n    snippetById: compose(\n      map((x: SnippetProps) => (snippetById[x.id] = x)),\n      flatten,\n      values\n    )(snippetList),\n  }\n}\n\n// 切換編輯/檢視模式\nexport function useReportPreview() {\n  const [isPreview, setIsPreview] = useRecoilState(reportPreviewState)\n\n  return [isPreview, () => setIsPreview(prev => !prev)] as [boolean, () => void]\n}\n\n// 更方便切換編輯/檢視模式\nexport function useToggleReportPreview(state: boolean = false) {\n  const [isPreview, setIsPreview] = useRecoilState(reportPreviewState)\n\n  React.useEffect(() => {\n    setIsPreview(state)\n\n    return () => {\n      setIsPreview(false)\n    }\n  }, [state]) // eslint-disable-line\n\n  return [isPreview, () => setIsPreview(prev => !prev)] as [boolean, () => void]\n}\n\nexport function useUpdateSnippet<T = ReportTemplateSetting>(options: {\n  item: SnippetProps\n  onUpdate: (data: any) => void\n  defaultValue?: any\n}) {\n  const { item, onUpdate, defaultValue = {} } = options\n\n  const [setting, setSetting] = React.useState<T>(\n    pathOr(defaultValue, ['setting'], item) as T\n  )\n\n  const handleOk = (values: T) => {\n    setSetting(values)\n    onUpdate({ ...item, setting: values })\n  }\n\n  return { setting, handleOk }\n}\n","import { ReactText } from 'react'\n\nexport const createFormItemLayout = (label: number = 3, wrapper?: number) => ({\n  labelCol: {\n    xs: { span: label },\n    sm: { span: label },\n  },\n  wrapperCol: {\n    xs: { span: wrapper || 24 - label },\n    sm: { span: wrapper || 24 - label },\n  },\n})\n\nexport const thosandSeprartor = {\n  formatter: (value: number | string | undefined) => {\n    if (!value) {\n      return value as string\n    }\n    return `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n  },\n  parser: (value: string | undefined) =>\n    (value ? value.replace(/\\$\\s?|(,*)/g, '') : value) as ReactText,\n}\n\nexport const currency = {\n  formatter: (value: number | string | undefined) => {\n    if (!value) {\n      return value as string\n    }\n    return `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n  },\n  parser: (value: string | undefined) =>\n    (value ? value.replace(/\\$\\s?|(,*)/g, '') : value) as ReactText,\n}\n\nexport const percent = {\n  // min: 0,\n  max: 100,\n  formatter: (value: number | string | undefined) => {\n    if (!value) {\n      return value as string\n    }\n    return `${value}%`\n  },\n  parser: (value: string | undefined) =>\n    (value ? value.replace('%', '') : value) as ReactText,\n}\n\nexport const rules = {\n  required: { required: true, message: '此欄位必填' },\n  number: {\n    required: false,\n    type: 'number',\n    message: '請填寫數字',\n    transform(value: any) {\n      if (!value) {\n        return value\n      }\n      return Number(value)\n    },\n  },\n  account: {\n    required: true,\n    message: '欄位長度為8~128字元,特殊符號-,_',\n    pattern: new RegExp(/^.{8,128}$/),\n  },\n  password: {\n    required: true,\n    message: '密碼長度為6~128字元',\n    pattern: new RegExp(/^.{6,128}$/),\n  },\n}\n","import React from 'react'\nimport { Checkbox } from 'antd'\nimport { CheckboxProps } from 'antd/lib/checkbox'\nimport styled from 'styled-components'\nimport { RefProps } from '@/constants/types'\n\nconst CheckboxGroup = Checkbox.Group\n\nconst StyledCheckbox = styled(Checkbox)`\n  .ant-checkbox-checked .ant-checkbox-inner {\n    background-color: ${p => p.theme.primary};\n    border-color: ${p => p.theme.primary};\n  }\n\n  &.ant-checkbox-wrapper:hover .ant-checkbox-inner,\n  .ant-checkbox:hover .ant-checkbox-inner,\n  .ant-checkbox-input:focus + .ant-checkbox-inner {\n    border-color: ${p => p.theme.primary};\n  }\n\n  .ant-checkbox-checked .ant-checkbox-inner:after {\n    border: 2px solid #fff;\n    border-top: 0;\n    border-left: 0;\n  }\n\n  .ant-checkbox-inner {\n    border: 1px solid ${p => p.theme.secondary};\n  }\n\n  &.is--normal {\n    font-size: 14px !important;\n    font-weight: normal !important;\n  }\n`\n\ntype Props = RefProps & CheckboxProps\n\nconst CheckboxComponent: React.ElementType<Props> = React.forwardRef<\n  typeof StyledCheckbox,\n  Props\n>(({ ...props }, ref) => <StyledCheckbox forwardRef={ref} {...props} />)\n\nCheckboxComponent.displayName = 'Checkbox'\n\nexport { CheckboxComponent as Checkbox, CheckboxGroup }\n\nexport default CheckboxComponent\n","import React from 'react'\nimport { Layout } from 'antd'\n\nexport default function AppFooter() {\n  return (\n    <Layout.Footer\n      className=\"pb-6 text-center text-gray-600 border-t border-gray-400\"\n      style={{ background: 'rgb(221, 228, 237)' }}>\n      2020 高雄榮總數位病理平台\n    </Layout.Footer>\n  )\n}\n","import React from 'react'\nimport { Modal } from 'antd'\nimport { ModalProps, ModalFuncProps } from 'antd/lib/modal'\n\nexport const modalDefaultProps = (\n  content?: React.ReactNode,\n  props?: ModalProps\n): ModalFuncProps => ({\n  content: (\n    <div\n      className=\"text-darkGrey font-medium\"\n      css={{ marginTop: 16, marginBottom: 30 }}>\n      {content}\n    </div>\n  ),\n  icon: null,\n  width: 440,\n  okText: '刪除',\n  cancelText: '取消',\n  centered: true,\n  // maskStyle: {\n  //   background: theme.modal.maskDarken,\n  // },\n  autoFocusButton: null,\n  okButtonProps: {\n    className: 'c-btn is--danger',\n    style: { minWidth: 80, marginRight: 24 },\n  },\n  cancelButtonProps: {\n    className: 'c-btn is--outline mr-0 float-right',\n    style: { minWidth: 80 },\n  },\n  ...props,\n})\n\nexport const confirm = ({\n  onOk,\n  onCancel,\n  content = '刪除後將無法還原，確認繼續？',\n  ...props\n}: ModalFuncProps) => {\n  Modal.confirm({\n    ...modalDefaultProps(content),\n    ...props,\n    onOk: () => {\n      if (onOk) {\n        onOk()\n      }\n    },\n    onCancel() {\n      if (onCancel) {\n        onCancel()\n      }\n    },\n  })\n}\n","import React from 'react'\nimport { Layout } from 'antd'\nimport cx from 'classnames'\nimport AppFooter from '@/components/app-footer'\nimport theme from '../theme'\n\ninterface PageProps {\n  children: React.ReactNode\n  style?: React.CSSProperties\n  className?: string\n  wrapperClassName?: string\n  wrapperStyle?: React.CSSProperties\n}\n\nexport function Page({ children, style, className = 'pr-16' }: PageProps) {\n  return (\n    <Layout>\n      <Layout.Content\n        style={{\n          background: `linear-gradient(-90deg,#42c2b8,${theme.primary})`,\n        }}>\n        <div\n          className={cx('pl-8 pt-6 pb-12', className)}\n          style={style}\n          css={{\n            background: 'rgb(221, 228, 237)',\n            borderTopLeftRadius: 32,\n            borderTopRightRadius: 32,\n          }}>\n          {children}\n        </div>\n      </Layout.Content>\n      <AppFooter />\n    </Layout>\n  )\n}\n","import React from 'react'\nimport { replace } from 'ramda'\nimport { envStore } from '@/constants/env'\n\nexport interface UseTitleOptions {\n  restoreOnUnmount?: boolean\n}\n\nconst DEFAULT_USE_TITLE_OPTIONS: UseTitleOptions = {\n  restoreOnUnmount: false,\n}\n\nfunction useTitle(\n  title: string,\n  options: UseTitleOptions = DEFAULT_USE_TITLE_OPTIONS\n) {\n  const prevTitleRef = React.useRef(document.title)\n  document.title = replace(/%s/, title)(envStore.appTitle)\n  React.useEffect(() => {\n    if (options && options.restoreOnUnmount) {\n      return () => {\n        document.title = prevTitleRef.current // eslint-disable-line\n      }\n    } else {\n      return\n    }\n  }, []) // eslint-disable-line\n}\n\nexport default typeof document !== 'undefined'\n  ? useTitle\n  : (_title: string) => {}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal } from 'antd'\nimport { ModalProps } from 'antd/lib/modal'\n\nconst StyledModal = styled(Modal)`\n  animation-duration: 0s !important;\n  transition: none !important;\n\n  .ant-modal-header--border-none {\n    border-bottom: none;\n  }\n\n  .ant-modal-footer {\n    padding-top: 14px;\n    padding-bottom: 14px;\n  }\n`\n\nexport default class ModalComponent extends React.Component<ModalProps, any> {\n  static confirm = Modal.confirm\n  static error = Modal.error\n  static success = Modal.success\n  static info = Modal.info\n\n  render() {\n    return <StyledModal {...this.props}>{this.props.children}</StyledModal>\n  }\n}\n","import React from 'react'\nimport { Table, Empty, Tooltip } from 'antd'\nimport { TableProps } from 'antd/lib/table'\nimport { CloseOutlined, PlusOutlined } from '@ant-design/icons'\nimport styled from 'styled-components'\n\nconst StyledTable: any = styled(Table)`\n  &.ant-table-wrapper {\n    .ant-pagination-prev .ant-pagination-item-link,\n    .ant-pagination-next .ant-pagination-item-link {\n      border-color: ${p => p.theme.pagination};\n      border-radius: 6px;\n      color: ${p => p.theme.pagination};\n    }\n\n    .ant-pagination-item {\n      border-color: ${p => p.theme.pagination};\n    }\n\n    .ant-pagination-item a {\n      color: ${p => p.theme.pagination};\n    }\n\n    .ant-pagination-item-active,\n    .ant-pagination-item-active:focus,\n    .ant-pagination-item:hover {\n      border-color: ${p => p.theme.pagination};\n      background: ${p => p.theme.pagination};\n\n      a {\n        color: #fff;\n      }\n    }\n\n    .ant-table-pagination.ant-pagination {\n      margin-top: 32px;\n    }\n\n    .ant-pagination-prev:hover .ant-pagination-item-link,\n    .ant-pagination-next:hover .ant-pagination-item-link {\n      border-color: ${p => p.theme.pagination};\n      background: ${p => p.theme.pagination};\n      color: #fff;\n    }\n\n    .ant-pagination-simple-pager {\n      color: ${p => p.theme.pagination};\n    }\n  }\n\n  .ant-table-tbody > tr > td {\n    height: 40px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    line-height: 1em;\n    color: #4a4a4a;\n    background: #f0f2f5;\n    border-bottom: 1px solid #e9e9e9;\n  }\n\n  .ant-table-thead > tr > th {\n    background: rgb(39, 189, 179);\n    border-bottom: 1px solid #e9e9e9;\n    color: #fff;\n    font-weight: 600;\n    font-size: 16px;\n  }\n`\n\ntype Props<T> = TableProps<T> & {\n  editable?: boolean\n  isRowDeletable?: (row: T) => boolean\n  onAddRowClick?: (param?: any) => any\n  onDeleteRowClick?: (param?: any) => any\n  isCanEdit?: any\n}\n\nfunction TableComponent<T = any>({\n  editable = false,\n  columns = [],\n  onAddRowClick,\n  isRowDeletable = () => true,\n  onDeleteRowClick,\n  isCanEdit = '',\n  ...props\n}: Props<T>) {\n  const _columns = React.useMemo(() => {\n    let canEdit: boolean = true\n    if (!editable) {\n      return columns\n    }\n    if (isCanEdit !== '') {\n      canEdit = isCanEdit\n    }\n\n    const handleRowDelete = (key: React.Key) => () => {\n      if (onDeleteRowClick) {\n        onDeleteRowClick(key)\n      }\n    }\n\n    return [\n      {\n        title: (\n          <Tooltip placement=\"topLeft\" title=\"新增\">\n            <PlusOutlined\n              className=\"ml-1 relative\"\n              style={{ top: -3 }}\n              onClick={canEdit ? onAddRowClick : undefined}\n            />\n          </Tooltip>\n        ),\n        width: 50,\n        render: (_: any, __: any, idx: number) => (\n          <div className=\"text-center\">#{idx + 1}</div>\n        ),\n      },\n      ...columns,\n      {\n        width: 50,\n        render: (_: any, r: any, idx: number) => (\n          <Tooltip placement=\"topLeft\" title=\"刪除\">\n            <CloseOutlined\n              onClick={isRowDeletable(r) ? handleRowDelete(r.id) : undefined}\n            />\n          </Tooltip>\n        ),\n      },\n    ]\n  }, [columns, editable]) // eslint-disable-line\n\n  return (\n    <StyledTable\n      columns={_columns}\n      locale={{\n        emptyText: (\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            description={\n              <span>\n                <span className=\"d-block\">\n                  尚無資料，請點選「＋新增」新增資料。\n                </span>\n              </span>\n            }\n          />\n        ),\n      }}\n      {...props}>\n      {props.children}\n    </StyledTable>\n  )\n}\n\nTableComponent.displayName = 'Table'\nTableComponent.Column = Table.Column\n\nexport default TableComponent\n","import React from 'react'\nimport { Select } from 'antd'\nimport { SelectProps } from 'antd/lib/select'\nimport styled from 'styled-components'\n\nconst StyledSelect: any = styled(Select)`\n  &.ant-select {\n    &.ant-select-single:not(.ant-select-customize-input) .ant-select-selector,\n    .ant-select-selection:hover,\n    .ant-select-selection:active,\n    .ant-select-selection:focus {\n      border-color: ${p => p.theme.primary};\n    }\n\n    .ant-select-selection {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    .ant-select-selection:active,\n    .ant-select-selection:focus {\n      box-shadow: none;\n    }\n\n    .ant-select-arrow {\n      color: ${p => p.theme.primary};\n    }\n\n    .ant-select-arrow-icon {\n      position: relative;\n      top: -1px;\n      font-size: 14px;\n    }\n\n    &.ant-select-borderless .ant-select-selector {\n      position: relative;\n      bottom: 1px;\n      border: 0;\n      border-bottom: 1px solid ${p => p.theme.primary} !important;\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  }\n\n  &.ant-select.is--outline {\n    > .ant-select-selector {\n      background: transparent;\n      border: 1px solid #fff;\n      color: #fff;\n\n      &:active,\n      &:focus,\n      &:hover {\n        border: 1px solid #fff;\n      }\n    }\n\n    .ant-select-selection-placeholder,\n    .ant-select-arrow {\n      color: #fff;\n    }\n\n    .ant-select-selection-placeholder {\n      opacity: 1;\n      left: 30%;\n    }\n  }\n\n  &.ant-select.is--transparent {\n    &.ant-select-focused > .ant-select-selector {\n      border: 1px solid #666a8f;\n    }\n\n    > .ant-select-selector {\n      background: transparent;\n      border: 1px solid #666a8f;\n      color: #a9b6d8;\n\n      &:active,\n      &:focus,\n      &:hover {\n        border: 1px solid #666a8f;\n      }\n    }\n\n    .ant-select-arrow {\n      color: #a9b6d8;\n    }\n  }\n`\n\nclass SelectComponent<T = any> extends React.Component<SelectProps<T>, any> {\n  public static Option = Select.Option\n\n  public static displayName = 'Select'\n\n  render() {\n    return <StyledSelect {...this.props}>{this.props.children}</StyledSelect>\n  }\n}\n\nexport default SelectComponent\n","import React from 'react'\nimport { ModalProps as AntModalProps } from 'antd/lib/modal'\nimport Modal from '@/components/modal'\nimport Button from '@/components/button'\n\nexport interface ModalProps<T = any>\n  extends Omit<AntModalProps, 'onOk' | 'onCancel'> {\n  item?: T\n  onOk?: (data?: any) => void\n  onCancel: () => void\n  children?: React.ReactNode\n}\n\nfunction TemplateModal<T = any>({\n  onCancel,\n  onOk,\n  item,\n  children,\n  ...props\n}: ModalProps<T>) {\n  const handleOk = () => {\n    if (onOk) {\n      onOk()\n    }\n  }\n  return (\n    <Modal\n      visible\n      onCancel={onCancel}\n      width={650}\n      maskClosable={false}\n      keyboard={false}\n      footer={[\n        <Button\n          key=\"btn-cancel\"\n          color=\"outline\"\n          style={{ minWidth: 80, marginRight: 16 }}\n          onClick={onCancel}>\n          取消\n        </Button>,\n        <Button\n          key=\"btn-save\"\n          color=\"primary\"\n          style={{ minWidth: 80 }}\n          onClick={handleOk}>\n          儲存\n        </Button>,\n      ]}\n      {...props}>\n      {children}\n    </Modal>\n  )\n}\n\nexport { TemplateModal as Modal }\n\nexport default TemplateModal\n","import React from 'react'\nimport cx from 'classnames'\nimport { Card } from 'antd'\nimport { CardProps } from 'antd/lib/card'\nimport { FontColorsOutlined } from '@ant-design/icons'\nimport styled from 'styled-components'\nimport { useReportPreview } from '@/hooks/useReportTemplate'\nimport { isNil } from '@/utils/webHelper'\n\nconst StyledCard = styled(Card)`\n  &.ant-card {\n    border-radius: 10px;\n    border: none;\n    cursor: move;\n  }\n\n  .ant-card-head {\n    padding-left: 18px;\n    border-bottom: none;\n    color: ${p => p.theme.primary};\n    font-size: 14px;\n    font-weight: 600;\n  }\n\n  &.ant-card-head--hide .ant-card-head {\n    display: none;\n  }\n\n  &.ant-card-body--hide {\n    .ant-card-head {\n      padding-bottom: 16px;\n      border-bottom: 1px dashed #f0f0f0;\n    }\n\n    .ant-card-body {\n      display: none;\n    }\n  }\n\n  &.is--preview .ant-card-head {\n    min-height: auto;\n  }\n\n  &.is--preview .ant-card-head-title {\n    padding-top: 0;\n  }\n\n  &.is--preview .ant-card-body {\n    padding-top: 12px;\n    padding-bottom: 8px;\n  }\n\n  .ant-card-head-title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-bottom: 0;\n  }\n\n  .ant-card-body {\n    padding-top: 6px;\n    padding-left: 26px;\n    padding-bottom: 20px;\n  }\n`\n\ninterface Props extends CardProps {\n  titleVisible?: boolean\n  bodyVisible?: boolean\n  onEdit?: () => void\n  onDelete?: () => void\n}\n\nfunction TemplateWrapper({\n  title,\n  children,\n  onDelete,\n  onEdit,\n  titleVisible = false,\n  bodyVisible = true,\n  ...props\n}: Props) {\n  const [isPreview] = useReportPreview()\n\n  return (\n    <StyledCard\n      title={\n        <div className=\"flex items-center\">\n          {!isPreview && <FontColorsOutlined className=\"mr-3\" />}\n          {title || '預設標題 (可點鉛筆圖示可進行編輯)'}\n        </div>\n      }\n      className={cx({\n        'ant-card-head--hide': isNil(title) && !titleVisible,\n        'ant-card-body--hide': !bodyVisible,\n        // 'is--preview': isPreview,\n      })}\n      {...props}>\n      {children}\n    </StyledCard>\n  )\n}\n\nexport default TemplateWrapper\n","import React from 'react'\nimport { Form } from 'antd'\nimport { Input, TextArea } from '@/components/input'\nimport Checkbox from '@/components/checkbox'\nimport { Modal, ModalProps } from '@/components/report-template-modal'\nimport TemplateWrapper from '@/components/report-template-wrapper'\nimport { createFormItemLayout } from '@/utils/form'\nimport { ReportTemplateSetting, ReportTemplateProps } from '@/constants/types'\nimport { useUpdateSnippet } from '@/hooks/useReportTemplate'\n\ninterface Setting extends ReportTemplateSetting {\n  defaultValue?: string\n  multipleLine?: boolean\n}\n\nexport default function ReportTemplateInputText(props: ReportTemplateProps) {\n  const { editModalVisible, handleEditModalVisible, onUpdate, item } = props\n\n  const { setting, handleOk } = useUpdateSnippet<Setting>({ item, onUpdate })\n\n  const inputProps = {\n    bordered: false,\n    className: 'w-2/3',\n    placeholder: setting.tooltip || '輸入內容',\n    defaultValue: setting.defaultValue,\n  }\n\n  return (\n    <>\n      {editModalVisible && (\n        <InputTextModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n        />\n      )}\n      <TemplateWrapper title={setting.text || ''}>\n        <Form.Item noStyle name={['data', item.id]}>\n          {setting.multipleLine ? (\n            <TextArea {...inputProps} autoSize={{ minRows: 3 }} />\n          ) : (\n            <Input {...inputProps} />\n          )}\n        </Form.Item>\n      </TemplateWrapper>\n    </>\n  )\n}\n\nfunction InputTextModal({\n  onOk,\n  onCancel,\n  item,\n  ...props\n}: ModalProps<Setting>) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      if (onOk) {\n        onOk(values)\n      }\n      onCancel()\n    })\n  }\n\n  return (\n    <Modal<Setting>\n      {...props}\n      title={\n        <>\n          <div>\n            Text\n            <div className=\"inline ml-2 text-sm text-gray-600\">\n              typically used for description something.\n            </div>\n          </div>\n        </>\n      }\n      onCancel={onCancel}\n      onOk={handleOk}>\n      <Form\n        {...createFormItemLayout(5, 16)}\n        labelAlign=\"left\"\n        form={form}\n        initialValues={item}>\n        <Form.Item label=\"Text\" name=\"text\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Default Value\" name=\"defaultValue\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Tooltip\" name=\"tooltip\">\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Multiple Lines\"\n          name=\"multipleLine\"\n          valuePropName=\"checked\">\n          <Checkbox />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { InputNumber } from 'antd'\nimport { InputNumberProps } from 'antd/lib/input-number'\nimport styled from 'styled-components'\nimport { RefProps } from '@/constants/types'\nimport { percent, currency, thosandSeprartor } from '@/utils/form'\n\ntype Props = RefProps & InputNumberProps & { bordered?: boolean }\n\nconst StyledInputNumber = styled(InputNumber).attrs({\n  min: 0 as any, // dont know why error\n})<Props>`\n  &.ant-input-number {\n    border-color: ${p => p.theme.primary};\n\n    ::placeholder {\n      color: red;\n    }\n  }\n\n  &.ant-input-number-focused,\n  &.ant-input-number:focus,\n  &.ant-input-number:hover {\n    border-color: ${p => p.theme.primary};\n  }\n\n  &.ant-input-number-focused:not(.ant-input-number-borderless),\n  &.ant-input-number:focus:not(.ant-input-number-borderless) {\n    box-shadow: 0 0 0 1px ${p => p.theme.primary};\n  }\n\n  &.ant-input-number-borderless,\n  &.ant-input-number-borderless:hover,\n  &.ant-input-number-borderless:focus,\n  &.ant-input-number-borderless-focused,\n  &.ant-input-number-borderless-disabled,\n  &.ant-input-number-borderless[disabled] {\n    border: none;\n    border-bottom: 1px solid ${p => p.theme.primary};\n  }\n`\n\nexport const ThousandSeprartorInput = React.forwardRef<\n  typeof InputNumber,\n  Props\n>(({ ...props }, ref) => (\n  <StyledInputNumber forwardRef={ref} {...props} {...thosandSeprartor} />\n))\n\nexport const CurrencyInput = React.forwardRef<typeof InputNumber, Props>(\n  ({ ...props }, ref) => (\n    <StyledInputNumber forwardRef={ref} {...props} {...currency} />\n  )\n)\n\nexport const PercentInput = React.forwardRef<typeof InputNumber, Props>(\n  ({ ...props }, ref) => (\n    <StyledInputNumber forwardRef={ref} {...props} {...percent} />\n  )\n)\n\nThousandSeprartorInput.displayName = 'ThousandSeprartorInput'\n\nCurrencyInput.displayName = 'CurrencyInput'\n\nPercentInput.displayName = 'PercentInput'\n\nexport { StyledInputNumber as InputNumber }\n\nexport default StyledInputNumber\n","import React from 'react'\nimport { Form } from 'antd'\nimport Input from '@/components/input'\nimport InputNumber from '@/components/input-number'\nimport { Modal, ModalProps } from '@/components/report-template-modal'\nimport TemplateWrapper from '@/components/report-template-wrapper'\nimport { createFormItemLayout } from '@/utils/form'\nimport { ReportTemplateSetting, ReportTemplateProps } from '@/constants/types'\nimport { useUpdateSnippet } from '@/hooks/useReportTemplate'\n\ninterface Setting extends ReportTemplateSetting {\n  defaultValue?: number\n  max?: number\n  min?: number\n  units?: string\n}\n\nexport default function ReportTemplateInputNumber(props: ReportTemplateProps) {\n  const { editModalVisible, handleEditModalVisible, item, onUpdate } = props\n\n  const { setting, handleOk } = useUpdateSnippet<Setting>({ item, onUpdate })\n\n  return (\n    <>\n      {editModalVisible && (\n        <InputNumberModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n        />\n      )}\n      <TemplateWrapper title={setting.text || ''}>\n        <Form.Item noStyle name={['data', item.id]}>\n          <InputNumber\n            style={{ width: '33.333333%' }}\n            className=\"ant-input-number-borderless\"\n            defaultValue={setting.defaultValue}\n            min={setting.min}\n            max={setting.max}\n            formatter={value => `${setting.units || ''} ${value}`}\n            placeholder={setting.tooltip || '輸入數值'}\n          />\n        </Form.Item>\n      </TemplateWrapper>\n    </>\n  )\n}\n\nfunction InputNumberModal({ onOk, onCancel, item, ...props }: ModalProps) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      if (onOk) {\n        onOk(values)\n      }\n      onCancel()\n    })\n  }\n\n  return (\n    <Modal\n      {...props}\n      title={\n        <>\n          <div>\n            Number\n            <div className=\"inline ml-2 text-sm text-gray-600\">\n              typically used for input number.\n            </div>\n          </div>\n        </>\n      }\n      onOk={handleOk}\n      onCancel={onCancel}>\n      <Form\n        {...createFormItemLayout(5, 16)}\n        labelAlign=\"left\"\n        form={form}\n        initialValues={item}>\n        <Form.Item label=\"Text\" name=\"text\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Default Value\" name=\"defaultValue\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Tooltip\" name=\"tooltip\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Minimum Value\" name=\"min\">\n          <InputNumber />\n        </Form.Item>\n        <Form.Item label=\"Maximum Value\" name=\"max\">\n          <InputNumber />\n        </Form.Item>\n        <Form.Item label=\"Units\" name=\"units\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","// tslint:disable: quotemark no-implicit-dependencies no-shadowed-variable no-var-requires\nimport React from 'react'\nimport { TableProps } from 'antd/lib/table'\nimport { FormInstance } from 'antd/lib/form'\nimport Table from '@/components/table'\n\ntype EditableTableProps<T> = Omit<TableProps<T>, 'onChange'> & {\n  value?: T[]\n  form: FormInstance\n  onChange?(changedValue: T[] | null): void\n  onRowAdd: (form: FormInstance) => any\n  onRowDelete: (value: { id: React.Key; form: FormInstance }) => any\n}\n\nexport default function EditableTable<T = any>({\n  form,\n  value,\n  onChange,\n  onRowAdd,\n  onRowDelete,\n  ...props\n}: EditableTableProps<T>) {\n  const triggerChange = (changedValue: T[]) => {\n    if (onChange) {\n      onChange(changedValue)\n    }\n  }\n\n  const handleAdd = () => {\n    triggerChange(onRowAdd(form))\n  }\n\n  const handleDelete = (id: string) => {\n    triggerChange(onRowDelete({ id, form }))\n  }\n\n  return (\n    <Table\n      {...props}\n      rowKey=\"id\"\n      pagination={false}\n      size=\"small\"\n      dataSource={value as any}\n      onAddRowClick={handleAdd}\n      onDeleteRowClick={handleDelete}\n      editable={true}\n    />\n  )\n}\n","import React from 'react'\nimport { Form } from 'antd'\nimport { ColumnProps } from 'antd/lib/table'\nimport { FormInstance } from 'antd/lib/form'\nimport { concat, __, pathOr, invoker, filter } from 'ramda'\nimport Input from '@/components/input'\nimport Checkbox from '@/components/checkbox'\nimport EditableTable from '@/components/editable-table'\nimport { uuid } from '@/utils/webHelper'\nimport { createFormItemLayout } from '@/utils/form'\nimport { ReportTemplateSetting } from '@/constants/types'\nimport { Modal, ModalProps } from './report-template-modal'\nconst { compose } = require('ramda')\n\nexport interface Setting extends ReportTemplateSetting {\n  options?: Option[]\n}\n\nexport type Option = {\n  id: React.Key\n  text?: string\n  selected?: boolean\n  freetext?: boolean\n}\n\nexport const defaultValue: Setting = {\n  options: [\n    {\n      id: uuid(),\n      text: '預設選項 1',\n      selected: true,\n      freetext: false,\n    },\n    {\n      id: uuid(),\n      text: '預設選項 2',\n      selected: true,\n      freetext: false,\n    },\n    {\n      id: uuid(),\n      text: '預設選項 3',\n      selected: true,\n      freetext: false,\n    },\n  ],\n}\n\nexport function TemplateSelectionModal({\n  onCancel,\n  onOk,\n  item,\n  ...props\n}: ModalProps) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      if (onOk) {\n        onOk(values)\n      }\n      onCancel()\n    })\n  }\n\n  const handleRowAdd = (form: FormInstance) => {\n    return compose(\n      concat(__, [\n        {\n          id: uuid(),\n          text: undefined,\n          selected: true,\n          freetext: false,\n        },\n      ]),\n      pathOr([], ['options']),\n      invoker(0, 'getFieldsValue')()\n    )(form)\n  }\n\n  const handleRowDelete = ({\n    id,\n    form,\n  }: {\n    id: React.Key\n    form: FormInstance\n  }) => {\n    return compose(\n      filter((x: any) => x.id !== id),\n      pathOr([], ['options']),\n      invoker(0, 'getFieldsValue')()\n    )(form)\n  }\n\n  const columns: ColumnProps<Option>[] = [\n    {\n      title: '選項名稱',\n      render: (v, r, idx) => (\n        <Form.Item noStyle name={['options', idx, 'text']}>\n          <Input />\n        </Form.Item>\n      ),\n    },\n    {\n      title: '是否可選',\n      align: 'center',\n      render: (v, r, idx) => (\n        <Form.Item\n          noStyle\n          name={['options', idx, 'selected']}\n          valuePropName=\"checked\">\n          <Checkbox />\n        </Form.Item>\n      ),\n    },\n    {\n      title: '是否可輸入',\n      align: 'center',\n      render: (v, r, idx) => (\n        <Form.Item\n          noStyle\n          name={['options', idx, 'freetext']}\n          valuePropName=\"checked\">\n          <Checkbox />\n        </Form.Item>\n      ),\n    },\n  ]\n\n  return (\n    <Modal\n      {...props}\n      title={\n        <>\n          <div>Single Selection List</div>\n          <div className=\"mt-1 text-sm text-gray-600\">\n            Typically used for shorter lists so that all responses are visible\n            as radio buttons. Only allow a single selection.\n          </div>\n        </>\n      }\n      onCancel={onCancel}\n      onOk={handleOk}>\n      <Form\n        {...createFormItemLayout(3, 16)}\n        labelAlign=\"left\"\n        form={form}\n        initialValues={item}>\n        <Form.Item label=\"Text\" name=\"text\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Tooltip\" name=\"tooltip\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Options\" />\n        <Form.Item noStyle name=\"options\">\n          <EditableTable\n            columns={columns}\n            form={form}\n            onRowAdd={handleRowAdd}\n            onRowDelete={handleRowDelete}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { Form } from 'antd'\nimport cx from 'classnames'\nimport { pathOr } from 'ramda'\nimport { Checkbox, CheckboxGroup } from '@/components/checkbox'\nimport Input from '@/components/input'\nimport TemplateWrapper from '@/components/report-template-wrapper'\nimport {\n  TemplateSelectionModal,\n  Setting,\n  Option,\n  defaultValue,\n} from '@/components/report-template-selection-modal'\nimport { mapIndexed } from '@/utils/webHelper'\nimport { ReportTemplateProps } from '@/constants/types'\nimport { useUpdateSnippet } from '@/hooks/useReportTemplate'\nconst { compose } = require('ramda')\n\nfunction ReportTemplateMultipleSelection(props: ReportTemplateProps) {\n  const { item, editModalVisible, handleEditModalVisible, onUpdate } = props\n\n  const { setting, handleOk } = useUpdateSnippet<Setting>({\n    item,\n    onUpdate,\n    defaultValue,\n  })\n\n  return (\n    <>\n      {editModalVisible && (\n        <TemplateSelectionModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n          title={\n            <>\n              <div>Multiple Selection List</div>\n              <div className=\"mt-1 text-sm text-gray-600\">\n                typically used for shorter lists so that all responses are\n                visible as checkboxes. Allows Multiple selections.\n              </div>\n            </>\n          }\n        />\n      )}\n      <TemplateWrapper\n        title={setting.text || ''}\n        bodyStyle={{ paddingLeft: 36 }}>\n        <Form.Item noStyle name={['data', item.id]}>\n          <CheckboxGroup>\n            {compose(\n              mapIndexed((x: Option, idx: number) => (\n                <Checkbox\n                  key={x.id}\n                  className={cx('block ml-0', { 'mt-1': idx > 0 })}\n                  defaultChecked={false}\n                  value={`${idx}`}>\n                  {x.text}\n                  {x.freetext && (\n                    <Input\n                      bordered={false}\n                      size=\"small\"\n                      placeholder=\"輸入備註\"\n                      className=\"ml-4 w-1/3\"\n                    />\n                  )}\n                </Checkbox>\n              )),\n              pathOr([], ['options'])\n            )(setting)}\n          </CheckboxGroup>\n        </Form.Item>\n      </TemplateWrapper>\n    </>\n  )\n}\n\nexport default ReportTemplateMultipleSelection\n","import React from 'react'\nimport cx from 'classnames'\nimport { Form } from 'antd'\nimport { pathOr } from 'ramda'\nimport Radio from '@/components/radio'\nimport Input from '@/components/input'\nimport TemplateWrapper from '@/components/report-template-wrapper'\nimport {\n  TemplateSelectionModal,\n  Setting,\n  Option,\n  defaultValue,\n} from '@/components/report-template-selection-modal'\nimport { mapIndexed } from '@/utils/webHelper'\nimport { ReportTemplateProps } from '@/constants/types'\nimport { useUpdateSnippet } from '@/hooks/useReportTemplate'\nconst { compose } = require('ramda')\n\nfunction ReportTemplateSingleSelection(props: ReportTemplateProps) {\n  const { item, editModalVisible, handleEditModalVisible, onUpdate } = props\n\n  const { setting, handleOk } = useUpdateSnippet<Setting>({\n    item,\n    onUpdate,\n    defaultValue,\n  })\n\n  return (\n    <>\n      {editModalVisible && (\n        <TemplateSelectionModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n        />\n      )}\n      <TemplateWrapper\n        title={setting.text || ''}\n        bodyStyle={{ paddingLeft: 36 }}>\n        <Form.Item noStyle name={['data', item.id]}>\n          <Radio.Group>\n            {compose(\n              mapIndexed((x: Option, idx: number) => (\n                <Radio\n                  key={x.id}\n                  className={cx('block', { 'mt-1': idx > 0 })}\n                  defaultChecked={false}\n                  value={`${idx}`}>\n                  {x.text}\n                  {x.freetext && (\n                    <Input\n                      size=\"small\"\n                      bordered={false}\n                      placeholder=\"輸入備註\"\n                      className=\"ml-3 w-1/3\"\n                    />\n                  )}\n                </Radio>\n              )),\n              pathOr([], ['options'])\n            )(setting)}\n          </Radio.Group>\n        </Form.Item>\n      </TemplateWrapper>\n    </>\n  )\n}\n\nexport default ReportTemplateSingleSelection\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { DatePicker, TimePicker } from 'antd'\nimport { DatePickerProps } from 'antd/lib/date-picker'\n\nconst borderLess = css`\n  &.ant-picker-borderless {\n    border: none;\n    border-bottom: 1px solid ${p => p.theme.primary} !important;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  &.ant-picker-focused:not(.ant-picker-borderless) {\n    box-shadow: 0 0 0 1px ${p => p.theme.primary};\n  }\n`\n\nconst RangePicker = styled(DatePicker.RangePicker)`\n  &.ant-picker {\n    border: 1px solid ${p => p.theme.primary};\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    &.ant-picker-focused {\n      box-shadow: 0 0 0 1px ${p => p.theme.primary};\n    }\n  }\n`\n\nconst StyledDatePicker: any = styled(DatePicker)`\n  &.ant-picker {\n    border: 1px solid ${p => p.theme.primary};\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    .ant-picker-suffix {\n      color: ${p => p.theme.primary};\n    }\n\n    ${borderLess};\n  }\n`\n\nconst StyledTimePicker = styled(TimePicker)`\n  &.ant-picker {\n    border: 1px solid ${p => p.theme.primary};\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    .ant-picker-suffix {\n      color: ${p => p.theme.primary};\n    }\n\n    ${borderLess};\n  }\n`\n\nfunction DatePickerComponent(props: DatePickerProps) {\n  return <StyledDatePicker {...props} />\n}\n\nexport {\n  DatePickerComponent as DatePicker,\n  RangePicker,\n  StyledTimePicker as TimePicker,\n}\n\nexport default DatePickerComponent\n","import React from 'react'\nimport { Form } from 'antd'\nimport Input from '@/components/input'\nimport DatePicker from '@/components/datepicker'\nimport { Modal, ModalProps } from '@/components/report-template-modal'\nimport TemplateWrapper from '@/components/report-template-wrapper'\nimport { createFormItemLayout } from '@/utils/form'\nimport { ReportTemplateProps } from '@/constants/types'\nimport { useUpdateSnippet } from '@/hooks/useReportTemplate'\n\ntype Setting = {\n  text?: string\n  defaultValue?: moment.Moment\n  tooltip?: string\n}\n\nexport default function ReportTemplateDate(props: ReportTemplateProps) {\n  const { editModalVisible, handleEditModalVisible, item, onUpdate } = props\n\n  const { setting, handleOk } = useUpdateSnippet<Setting>({ item, onUpdate })\n\n  return (\n    <>\n      {editModalVisible && (\n        <InputDateModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n        />\n      )}\n      <TemplateWrapper title={setting.text || ''}>\n        <Form.Item noStyle name={['data', item.id]}>\n          <DatePicker\n            bordered={false}\n            className=\"w-1/3\"\n            placeholder={setting.tooltip || '選擇日期'}\n            defaultValue={setting.defaultValue}\n          />\n        </Form.Item>\n      </TemplateWrapper>\n    </>\n  )\n}\n\nfunction InputDateModal({\n  onOk,\n  onCancel,\n  item,\n  ...props\n}: ModalProps<Setting>) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      if (onOk) {\n        onOk(values)\n      }\n      onCancel()\n    })\n  }\n\n  return (\n    <Modal<Setting>\n      {...props}\n      title={\n        <>\n          <div>\n            Date\n            <div className=\"inline ml-2 text-sm text-gray-600\">\n              typically used for target date.\n            </div>\n          </div>\n        </>\n      }\n      onCancel={onCancel}\n      onOk={handleOk}>\n      <Form\n        {...createFormItemLayout(5, 16)}\n        labelAlign=\"left\"\n        form={form}\n        initialValues={item}>\n        <Form.Item label=\"Text\" name=\"text\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Default Value\" name=\"defaultValue\">\n          <DatePicker allowClear picker=\"date\" className=\"w-full\" />\n        </Form.Item>\n        <Form.Item label=\"Tooltip\" name=\"tooltip\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { Form } from 'antd'\nimport Input from '@/components/input'\nimport { TimePicker } from '@/components/datepicker'\nimport { Modal, ModalProps } from '@/components/report-template-modal'\nimport TemplateWrapper from '@/components/report-template-wrapper'\nimport { createFormItemLayout } from '@/utils/form'\nimport { ReportTemplateSetting, ReportTemplateProps } from '@/constants/types'\nimport { useUpdateSnippet } from '@/hooks/useReportTemplate'\n\ninterface Setting extends ReportTemplateSetting {\n  defaultValue?: moment.Moment\n}\n\nexport default function ReportTemplateTime(props: ReportTemplateProps) {\n  const { editModalVisible, handleEditModalVisible, item, onUpdate } = props\n\n  const { setting, handleOk } = useUpdateSnippet<Setting>({ item, onUpdate })\n\n  return (\n    <>\n      {editModalVisible && (\n        <InputTimeModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n        />\n      )}\n      <TemplateWrapper title={setting.text || ''}>\n        <Form.Item noStyle name={['data', item.id]}>\n          <TimePicker\n            bordered={false}\n            className=\"w-1/3\"\n            placeholder={setting.tooltip || '選擇時間'}\n            defaultValue={setting.defaultValue}\n          />\n        </Form.Item>\n      </TemplateWrapper>\n    </>\n  )\n}\n\nfunction InputTimeModal({\n  onOk,\n  onCancel,\n  item,\n  ...props\n}: ModalProps<Setting>) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      if (onOk) {\n        onOk(values)\n      }\n      onCancel()\n    })\n  }\n\n  return (\n    <Modal<Setting>\n      {...props}\n      title={\n        <>\n          <div>\n            Time\n            <div className=\"inline ml-2 text-sm text-gray-600\">\n              typically used for target time.\n            </div>\n          </div>\n        </>\n      }\n      onCancel={onCancel}\n      onOk={handleOk}>\n      <Form\n        {...createFormItemLayout(5, 16)}\n        labelAlign=\"left\"\n        form={form}\n        initialValues={item}>\n        <Form.Item label=\"Text\" name=\"text\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Default Value\" name=\"defaultValue\">\n          <TimePicker allowClear format=\"HH:mm\" className=\"w-full\" />\n        </Form.Item>\n        <Form.Item label=\"Tooltip\" name=\"tooltip\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { pathOr, map } from 'ramda'\nimport { Form } from 'antd'\nimport Select from '@/components/select'\nimport TemplateWrapper from '@/components/report-template-wrapper'\nimport {\n  TemplateSelectionModal,\n  Option,\n  defaultValue,\n} from '@/components/report-template-selection-modal'\nimport { ReportTemplateSetting, ReportTemplateProps } from '@/constants/types'\nimport { useUpdateSnippet } from '@/hooks/useReportTemplate'\nconst { compose } = require('ramda')\n\ninterface Setting extends ReportTemplateSetting {\n  options?: Option[]\n  selectionType?: 'single' | 'multiple'\n}\n\nexport default function ReportTemplateSelect(props: ReportTemplateProps) {\n  const { item, editModalVisible, handleEditModalVisible, onUpdate } = props\n\n  const { setting, handleOk } = useUpdateSnippet<Setting>({\n    item,\n    onUpdate,\n    defaultValue,\n  })\n\n  return (\n    <>\n      {editModalVisible && (\n        <TemplateSelectionModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n          title={\n            <>\n              <div>Drop-down List</div>\n              <div className=\"mt-1 text-sm text-gray-600\">\n                typically used for lists of greater than 6 or 7 options.\n              </div>\n            </>\n          }\n        />\n      )}\n      <TemplateWrapper title={setting.text || ''}>\n        <Form.Item noStyle name={['data', item.id]}>\n          <Select\n            allowClear\n            bordered={false}\n            className=\"w-1/3\"\n            placeholder={setting.tooltip || '請選擇...'}>\n            {compose(\n              map((x: Option) => (\n                <Select.Option key={x.id} value={x.text as any}>\n                  {x.text}\n                </Select.Option>\n              )),\n              pathOr([], ['options'])\n            )(setting)}\n          </Select>\n        </Form.Item>\n      </TemplateWrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { Form } from 'antd'\nimport Input from '@/components/input'\nimport { Modal, ModalProps } from '@/components/report-template-modal'\nimport TemplateWrapper from '@/components/report-template-wrapper'\nimport { createFormItemLayout } from '@/utils/form'\nimport { useUpdateSnippet } from '@/hooks/useReportTemplate'\nimport { ReportTemplateSetting, ReportTemplateProps } from '@/constants/types'\n\ninterface Setting extends ReportTemplateSetting {}\n\nexport default function TemplateSectionHeader(props: ReportTemplateProps) {\n  const { item, editModalVisible, handleEditModalVisible, onUpdate } = props\n\n  const { setting, handleOk } = useUpdateSnippet<Setting>({\n    item,\n    onUpdate,\n  })\n\n  return (\n    <>\n      {editModalVisible && (\n        <InputTextModal\n          item={setting}\n          onCancel={handleEditModalVisible}\n          onOk={handleOk}\n        />\n      )}\n      <TemplateWrapper\n        titleVisible\n        bodyVisible={false}\n        title={setting.text}\n        onEdit={handleEditModalVisible}></TemplateWrapper>\n    </>\n  )\n}\n\nfunction InputTextModal({\n  onOk,\n  onCancel,\n  item,\n  ...props\n}: ModalProps<Setting>) {\n  const [form] = Form.useForm()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      if (onOk) {\n        onOk(values)\n      }\n      onCancel()\n    })\n  }\n\n  return (\n    <Modal<Setting>\n      {...props}\n      title={\n        <>\n          <div>\n            Section Header\n            <div className=\"inline ml-2 text-sm text-gray-600\">\n              typically used for section.\n            </div>\n          </div>\n        </>\n      }\n      onCancel={onCancel}\n      onOk={handleOk}>\n      <Form\n        {...createFormItemLayout(5, 16)}\n        labelAlign=\"left\"\n        form={form}\n        initialValues={item}>\n        <Form.Item label=\"Text\" name=\"text\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Tooltip\" name=\"tooltip\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n","import React from 'react'\n\nfunction ReportTemplateCloze() {\n  return <div></div>\n}\n\nexport const html = `\n  <div>\n    Cloze test\n  </div>\n`\n\nexport const Component = ReportTemplateCloze\n\nexport default ReportTemplateCloze\n","import { map, mergeAll } from 'ramda'\nimport {\n  CalendarOutlined,\n  ClockCircleOutlined,\n  OrderedListOutlined,\n  UnorderedListOutlined,\n  FontSizeOutlined,\n  DatabaseOutlined,\n  NumberOutlined,\n  BoldOutlined,\n  FontColorsOutlined,\n} from '@ant-design/icons'\nimport { uuid } from '@/utils/webHelper'\nimport TemplateInputText from '@/components/report-template-input-text'\nimport TemplateInputNumber from '@/components/report-template-input-number'\nimport TemplateMultipleSelection from '@/components/report-template-multiple-selection'\nimport TemplateSingleSelection from '@/components/report-template-single-selection'\nimport TemplateDate from '@/components/report-template-date'\nimport TemplateTime from '@/components/report-template-time'\nimport TemplateSelect from '@/components/report-template-select'\nimport TempldateSectionHeader from '@/components/report-template-section-header'\nimport * as Cloze from '@/components/report-template-cloze'\nconst { compose } = require('ramda')\n\ninterface ReportTemplateListItem {\n  id: React.Key\n  type: string\n  name: string\n  Component: React.Component\n  inline: boolean\n}\n\nconst reportTemplateList = [\n  {\n    id: uuid(),\n    componentType: 'header',\n    name: 'Section Header',\n    inline: false,\n    icon: BoldOutlined,\n    Component: TempldateSectionHeader,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateInputText',\n    name: 'Text',\n    inline: false,\n    icon: FontSizeOutlined,\n    Component: TemplateInputText,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateInputNumber',\n    name: 'Number',\n    inline: false,\n    icon: NumberOutlined,\n    Component: TemplateInputNumber,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateSelect',\n    name: 'Drop-down List',\n    inline: false,\n    icon: DatabaseOutlined,\n    Component: TemplateSelect,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateMultipleSelection',\n    name: 'Multiple Selection List',\n    inline: false,\n    icon: UnorderedListOutlined,\n    Component: TemplateMultipleSelection,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateSingleSelection',\n    name: 'Single Selection List',\n    inline: false,\n    icon: OrderedListOutlined,\n    Component: TemplateSingleSelection,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateDate',\n    name: 'Date',\n    inline: false,\n    icon: CalendarOutlined,\n    Component: TemplateDate,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateTime',\n    name: 'Time',\n    inline: false,\n    icon: ClockCircleOutlined,\n    Component: TemplateTime,\n  },\n  {\n    id: uuid(),\n    type: 'TemplateCloze',\n    name: 'Cloze',\n    inline: true,\n    icon: FontColorsOutlined,\n    html: Cloze.html,\n    Component: Cloze.Component,\n  },\n]\n\nexport const reportTemplateById = compose(\n  mergeAll,\n  map((x: ReportTemplateListItem) => ({ [x.type]: x }))\n)(reportTemplateList)\n\nexport default reportTemplateList\n","import React from 'react'\nimport { Radio } from 'antd'\nimport { RadioProps } from 'antd/lib/radio'\nimport styled from 'styled-components'\n\nconst StyledRadio = styled(Radio)`\n  &.ant-radio-wrapper {\n    color: ${p => p.theme.darkGrey};\n\n    span.ant-radio + * {\n      padding-left: 16px;\n    }\n\n    .ant-radio-inner,\n    .ant-radio-checked .ant-radio-inner {\n      border-color: ${p => p.theme.primary};\n    }\n\n    .ant-radio-inner::after {\n      background: ${p => p.theme.primary};\n    }\n\n    &:hover,\n    .ant-radio:hover .ant-radio-inner,\n    .ant-radio-input:focus + .ant-radio-inner {\n      border-color: ${p => p.theme.primary};\n    }\n  }\n`\n\ninterface Props extends RadioProps {\n  css?: React.CSSProperties\n}\n\nclass RadioComponent extends React.Component<Props, any> {\n  public static Group = Radio.Group\n\n  public static displayName = 'Radio'\n\n  public render() {\n    return <StyledRadio {...this.props} />\n  }\n}\n\nexport default RadioComponent\n","import React from 'react'\nimport { ColumnProps, TableProps, TablePaginationConfig } from 'antd/lib/table'\nimport { SpinProps } from 'antd/lib/spin'\nimport { merge } from 'ramda'\nimport { DataSource } from '@/constants/types'\nimport Table from '@/components/table'\n\ntype Props<T> = Omit<TableProps<T>, 'dataSource'> & {\n  columns: ColumnProps<T>[]\n  className?: string\n  pageNum?: number\n  dataSource: DataSource<T>\n  onChange?: (pagination: TablePaginationConfig) => any\n  loading?: boolean | SpinProps\n  rowSelection?: {\n    selectedRowKeys: any[]\n    onChange: (selectedRowKeys: any, selectedRows: any) => void\n  }\n}\n\nexport default function QueryTable<T>({\n  columns,\n  className,\n  pageNum = 1,\n  dataSource,\n  onChange,\n  loading = false,\n  rowSelection,\n  pagination,\n  ...props\n}: Props<T>) {\n  const handleTableChange = ({ current, pageSize }: TablePaginationConfig) => {\n    if (onChange) {\n      onChange({ current, pageSize })\n    }\n  }\n\n  const paginationConfig = React.useMemo(\n    () =>\n      merge<any, any>(pagination, {\n        current: pageNum,\n        pageSize: 10,\n        total: dataSource.total,\n        showSizeChanger: false,\n      }) as TablePaginationConfig,\n    [dataSource.total, pagination, pageNum]\n  )\n\n  return (\n    <Table\n      rowKey=\"id\"\n      dataSource={dataSource.content}\n      columns={columns as any}\n      pagination={paginationConfig}\n      onChange={handleTableChange}\n      rowSelection={rowSelection}\n      loading={loading}\n      className={className}\n      {...props}\n    />\n  )\n}\n"],"sourceRoot":""}