{"version":3,"sources":["components/snippet-preview-modal.tsx","../node_modules/@ant-design/icons-svg/es/asn/MinusOutlined.js","../node_modules/@ant-design/icons/es/icons/MinusOutlined.js","components/snippet-drag-preview.js","components/snippet-drag-layer.tsx","containers/report-template-editor/report-template-builder.tsx"],"names":["compose","require","SnippetPreviewModal","onCancel","snippetList","visible","style","top","maskClosable","className","keyboard","width","footer","map","key","gt","__","length","pathOr","renderSnippets","keys","MinusOutlined","props","ref","React","AntdIcon","Object","assign","icon","MinusOutlinedSvg","displayName","SnippetDragPreview","Component","layerStyles","position","pointerEvents","zIndex","left","height","getItemStyles","initialOffset","currentOffset","display","x","y","transform","WebkitTransform","DragLayer","monitor","item","getItem","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","isDragging","element","document","elementFromPoint","canDrop","canMoveSnippet","ItemTypes","BOARD","SNIPPET","renderItem","whiteSpace","ReportTemplateBuilder","useTitle","useBreadcrumb","href","REPORT_TEMPLATE_LIST","name","params","match","useReportTemplate","id","category","reportTemplate","handleTabChange","handleTabEdit","handleTabMove","handleTabNameChange","handleSnippetUpdate","useReportPreview","isPreview","handlePreview","useForm","form","useAddNewTemplate","onCompleted","history","push","replace","REPORT_TEMPLATE_EDIT","handleAdd","useUpdateTemplate","handleUpdate","useHeaderContent","color","onClick","validateFields","then","values","setting","mergeAll","categoryName","initialValues","gutter","span","defaultActiveKey","expandIconPosition","expandIcon","isActive","PlusOutlined","Panel","header","Item","noStyle","type","activeKey","onChange","onEdit","moveTabNode","TabPane","closable","tab","contentEditable","suppressContentEditableWarning","spellCheck","draggable","onSnippetUpdate"],"mappings":"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","file":"static/js/9.b955719d.chunk.js","sourcesContent":["import React from 'react'\nimport { ModalProps } from 'antd/lib/modal'\nimport { length, __, gt, keys, map, pathOr } from 'ramda'\nimport Modal from '@/components/modal'\nimport { Snippets } from '@/hooks/useReportTemplate'\nimport { renderSnippets } from '@/components/snippet-utils'\nconst { compose } = require('ramda')\n\ninterface Props extends ModalProps {\n  snippetList?: Snippets\n}\n\nexport default function SnippetPreviewModal({ onCancel, snippetList }: Props) {\n  return (\n    <Modal\n      visible\n      style={{ top: 30 }}\n      maskClosable={false}\n      className=\"ant-modal-header--border-none\"\n      keyboard={false}\n      width=\"85%\"\n      onCancel={onCancel}\n      footer={false}>\n      {compose(\n        map((key: string) => (\n          <div key={key}>\n            {compose(gt(__, 0), length, pathOr([], [key]))(snippetList) && (\n              <h2 className=\"my-2\">{key}</h2>\n            )}\n            {compose(renderSnippets(), pathOr([], [key]))(snippetList)}\n          </div>\n        )),\n        keys\n      )(snippetList)}\n    </Modal>\n  )\n}\n","// This icon file is generated automatically.\nvar MinusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M872 474H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"minus\", \"theme\": \"outlined\" };\nexport default MinusOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MinusOutlined = function MinusOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: MinusOutlinedSvg\n  }));\n};\n\nMinusOutlined.displayName = 'MinusOutlined';\nexport default React.forwardRef(MinusOutlined);","import React from 'react'\n// import { envStore } from '@/constants/env'\n\nexport default class SnippetDragPreview extends React.Component {\n  render() {\n    // const dropType = this.props.canDrop ? 'allow' : 'forbid'\n    // const url = `${envStore.publicUrl}/images/icon-drag-${dropType}-drop@2x.png`\n\n    return <div>{/* <img width={160} src={url} alt={url} /> */}</div>\n  }\n}\n","import React from 'react'\nimport { XYCoord, DragLayer } from 'react-dnd'\nimport { Identifier } from 'dnd-core'\nimport ItemTypes from '@/constants/item-types'\nimport SnippetDragPreview from '@/components/snippet-drag-preview'\nimport { canMoveSnippet } from './snippet-utils'\n\nconst layerStyles: React.CSSProperties = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 100,\n  left: 0,\n  top: 0,\n  width: '100%',\n  height: '100%',\n}\n\ninterface DragLayerProps {\n  item?: any\n  itemType?: Identifier | null\n  initialOffset?: XYCoord | null\n  currentOffset?: XYCoord | null\n  isDragging?: boolean\n}\n\nfunction getItemStyles(props: DragLayerProps) {\n  const { initialOffset, currentOffset } = props\n\n  if (!initialOffset || !currentOffset) {\n    return {\n      display: 'none',\n    }\n  }\n\n  const { x, y } = currentOffset\n\n  const transform = `translate(${x}px, ${y}px)`\n  return {\n    transform,\n    WebkitTransform: transform,\n  }\n}\n\nconst SnippetDragLayer: React.FC<DragLayerProps> = props => {\n  const { itemType, isDragging, currentOffset } = props\n\n  function renderItem({ canDrop }: { canDrop: boolean }) {\n    switch (itemType) {\n      case ItemTypes.BOARD:\n      case ItemTypes.SNIPPET:\n        return <SnippetDragPreview canDrop={canDrop} />\n      default:\n        return null\n    }\n  }\n\n  if (!isDragging) {\n    return null\n  }\n\n  if (!currentOffset) {\n    return null\n  }\n\n  const element = document.elementFromPoint(currentOffset.x, currentOffset.y)\n\n  let canDrop = false\n  if (element) {\n    canDrop = canMoveSnippet(element)\n  }\n\n  return (\n    <div className=\"report-template-builder__drag-layer\" style={layerStyles}>\n      <div style={getItemStyles(props)}>{renderItem({ canDrop })}</div>\n    </div>\n  )\n}\n\nexport default DragLayer(monitor => ({\n  item: monitor.getItem(),\n  itemType: monitor.getItemType(),\n  initialOffset: monitor.getInitialSourceClientOffset(),\n  currentOffset: monitor.getSourceClientOffset(),\n  isDragging: monitor.isDragging(),\n}))(SnippetDragLayer)\n","import React from 'react'\nimport { Row, Col, Form } from 'antd'\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { keys, map, mergeAll, pathOr, replace } from 'ramda'\nimport { Page } from '@/components/layout'\nimport Button from '@/components/button'\nimport Input from '@/components/input'\nimport useTitle from '@/hooks/useTitle'\nimport { useBreadcrumb, useHeaderContent } from '@/hooks/useApp'\nimport { useReportTemplate, useReportPreview } from '@/hooks/useReportTemplate'\nimport { REPORT_TEMPLATE_LIST } from '@/constants/routes'\nimport Tabs from '@/components/draggable-tabs'\nimport ReactDndProvider from '@/components/snippet-scrollable-container'\nimport SnippetListMenu from '@/components/snippet-list-menu'\nimport SnippetDragLayer from '@/components/snippet-drag-layer'\nimport SnippetsContainer from '@/components/snippets-container'\nimport SnippetPreviewModal from '@/components/snippet-preview-modal'\nimport Collapse from '@/components/collapse'\nimport { useAddNewTemplate, useUpdateTemplate } from '@/services/reportTemplate'\nimport history from '@/utils/history'\nimport { REPORT_TEMPLATE_EDIT } from '@/constants/routes'\nconst { compose } = require('ramda')\n\ninterface Props extends RouteComponentProps<{ id: string }> {}\n\nfunction ReportTemplateBuilder(props: Props) {\n  useTitle('結構式報告模版編輯')\n\n  useBreadcrumb([\n    { href: REPORT_TEMPLATE_LIST, name: '結構式報告' },\n    { name: '結構式報告模版編輯' },\n  ])\n\n  const { params } = props.match\n\n  const {\n    category,\n    reportTemplate,\n    snippetList,\n    handleTabChange,\n    handleTabEdit,\n    handleTabMove,\n    handleTabNameChange,\n    handleSnippetUpdate,\n  } = useReportTemplate(params.id)\n\n  const [isPreview, handlePreview] = useReportPreview()\n\n  const [form] = Form.useForm()\n\n  const [, handleAdd] = useAddNewTemplate({\n    onCompleted: ({ id }) => {\n      history.push(replace(':id', id)(REPORT_TEMPLATE_EDIT))\n    },\n  })\n\n  const [, handleUpdate] = useUpdateTemplate()\n\n  const handleSave = () => {\n    form.validateFields().then(values => {\n      let handler = reportTemplate?.id ? handleUpdate : handleAdd\n\n      handler({\n        ...reportTemplate,\n        ...values,\n        setting: compose(\n          mergeAll,\n          map((key: string) => ({\n            [key]: compose(\n              map(({ Component, icon, ...x }) => ({\n                ...x,\n                categoryName: key,\n              })),\n              pathOr([], [key])\n            )(snippetList),\n          })),\n          keys\n        )(snippetList),\n      })\n    })\n  }\n\n  useHeaderContent(\n    <div className=\"inline-flex\">\n      <Button\n        color=\"outline\"\n        className=\"bg-transparent text-white border-white\">\n        發佈\n      </Button>\n      <Button\n        color=\"outline\"\n        className=\"ml-6 bg-transparent text-white border-white\"\n        onClick={handleSave}>\n        儲存\n      </Button>\n      <Button\n        color=\"outline\"\n        className=\"ml-6 bg-transparent text-white border-white\"\n        onClick={handlePreview}>\n        預覽\n      </Button>\n    </div>\n  )\n\n  return (\n    <ReactDndProvider>\n      {isPreview && (\n        <SnippetPreviewModal\n          snippetList={snippetList}\n          onCancel={handlePreview}\n        />\n      )}\n      <SnippetDragLayer />\n      <Page>\n        <Form form={form} initialValues={{ ...reportTemplate }}>\n          <Row gutter={48} className=\"pt-2 relative\">\n            <Col span={5}>\n              <Collapse\n                defaultActiveKey={[1, 2]}\n                expandIconPosition=\"right\"\n                className=\"shadow-2xl header-pl-clear\"\n                expandIcon={({ isActive }) =>\n                  isActive ? <MinusOutlined /> : <PlusOutlined />\n                }>\n                <Collapse.Panel header=\"模版資訊\" key={1}>\n                  <Row className=\"mb-2 text-sm text-darkGrey\">\n                    <Col span={24} className=\"mb-3\">\n                      <div className=\"inline-block\" css={{ width: 60 }}>\n                        名稱:\n                      </div>\n                      <Form.Item noStyle name=\"name\">\n                        <Input className=\"w-2/3\" />\n                      </Form.Item>\n                    </Col>\n                    <Col span={24} className=\"my-3\">\n                      <div className=\"inline-block\" css={{ width: 60 }}>\n                        描述:\n                      </div>\n                      <Form.Item noStyle name=\"description\">\n                        <Input className=\"w-2/3\" />\n                      </Form.Item>\n                    </Col>\n                    <Col span={24} className=\"my-3\">\n                      <div className=\"inline-block\" css={{ width: 60 }}>\n                        創作者:\n                      </div>\n                      <Form.Item noStyle name=\"author\">\n                        <Input className=\"w-2/3\" />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                </Collapse.Panel>\n                <Collapse.Panel header=\"工具列\" key={2}>\n                  <Row>\n                    <Col span={24}>\n                      <SnippetListMenu />\n                    </Col>\n                  </Row>\n                </Collapse.Panel>\n              </Collapse>\n            </Col>\n            <Tabs\n              type=\"editable-card\"\n              activeKey={category}\n              onChange={handleTabChange}\n              onEdit={handleTabEdit}\n              moveTabNode={handleTabMove}\n              className=\"flex-1\">\n              {compose(\n                map((key: string) => (\n                  <Tabs.TabPane\n                    closable\n                    key={key}\n                    tab={\n                      <span\n                        contentEditable\n                        suppressContentEditableWarning\n                        spellCheck={false}\n                        className=\"outline-none\"\n                        css={{ whiteSpace: 'nowrap' }}\n                        onChange={handleTabNameChange(key)}\n                        // onBlur={handleTabNameChange(key)}\n                      >\n                        {key}\n                      </span>\n                    }>\n                    <Col\n                      span={19}\n                      className=\"report-template-builder__main-content\">\n                      <SnippetsContainer\n                        draggable={!isPreview}\n                        snippetList={snippetList[key]}\n                        onSnippetUpdate={handleSnippetUpdate}\n                      />\n                    </Col>\n                  </Tabs.TabPane>\n                )),\n                keys\n              )(snippetList)}\n            </Tabs>\n          </Row>\n        </Form>\n      </Page>\n    </ReactDndProvider>\n  )\n}\n\nexport default ReportTemplateBuilder\n"],"sourceRoot":""}