{"version":3,"sources":["hooks/useFormValues.ts","services/yellow-card.ts","containers/yellow-card-inquiry/yellow-card-inquiry.tsx"],"names":["useFormValues","startDateField","endDateField","format","values","date","rest","getRangeDate","startDate","endDate","evolve","createDate","ifElse","isNil","identity","invoker","reportDate","useYellowCards","variables","useYellowCardsData","data","dataSource","content","map","s","id","uuid","total","length","totalPages","Math","floor","formItemLayout","createFormItemLayout","YellowCardInquiry","useTitle","useBreadcrumb","name","useForm","form","loading","refetch","called","transform","columns","title","dataIndex","sorter","spinning","style","minHeight","justify","md","xs","layout","hideRequiredMark","labelAlign","colon","gutter","Item","label","allowClear","Option","value","className","compose","x","key","times","picker","color","width","onClick","resetFields","validateFields","then","rowKey"],"mappings":"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","file":"static/js/16.c2adb456.chunk.js","sourcesContent":["import { evolve, ifElse, isNil, identity, invoker } from 'ramda'\nimport { getRangeDate } from '@/utils/webHelper'\n\nexport default function useFormValues({\n  startDateField = 'startDate',\n  endDateField = 'endDate',\n  format,\n}: {\n  format?: string\n  startDateField?: string\n  endDateField?: string\n}) {\n  return (values: { [key: string]: any }) => {\n    if (!values) {\n      return {}\n    }\n\n    const { date = [], ...rest } = values\n\n    const [startDate, endDate] = getRangeDate(date, format)\n\n    return evolve({\n      createDate: ifElse(isNil, identity, invoker(1, 'format')('YYYY-MM-DD')),\n      reportDate: ifElse(isNil, identity, invoker(1, 'format')('YYYY-MM-DD')),\n    })({\n      ...rest,\n      [startDateField]: startDate,\n      [endDateField]: endDate,\n    })\n  }\n}\n","import { length, map } from 'ramda'\nimport { QueryVariables } from '@/constants/types'\nimport { uuid } from '@/utils/webHelper'\nimport { useYellowCards as useYellowCardsData } from '@/services/report'\n\nexport type YellowCard = {\n  hage: string\n  hhisnum: string\n  hnamec: string\n  hsex: string\n  orworkno: string\n  rptypedt: string\n}\n\nexport function useYellowCards(variables: QueryVariables = {}) {\n  const { data, ...rest } = useYellowCardsData(variables)\n\n  const dataSource = {\n    content: map((s: any) => ({ ...s, id: uuid() }))(data) as YellowCard[],\n    total: length(data),\n    totalPages: Math.floor(length(data) / 10) + 1,\n  }\n\n  return {\n    ...rest,\n    dataSource,\n    data: dataSource,\n  }\n}\n","import React from 'react'\nimport { compose, identity, times, map } from 'ramda'\nimport { Row, Col, Form, Spin } from 'antd'\nimport { ColumnProps } from 'antd/lib/table'\nimport useTitle from '@/hooks/useTitle'\nimport { useBreadcrumb } from '@/hooks/useApp'\nimport useFormValues from '@/hooks/useFormValues'\nimport { useYellowCards } from '@/services/yellow-card'\nimport Select from '@/components/select'\nimport Input from '@/components/input'\nimport { RangePicker } from '@/components/datepicker'\nimport Table from '@/components/query-table'\nimport Button from '@/components/button'\nimport { Page } from '@/components/layout'\nimport { createFormItemLayout } from '@/utils/form'\nimport { sorter } from '@/utils/webHelper'\n\nconst formItemLayout = createFormItemLayout(6)\n\nexport default function YellowCardInquiry() {\n  useTitle('黃卡新檢索')\n\n  useBreadcrumb([{ name: '報告查詢' }, { name: '黃卡新檢索' }])\n\n  const [form] = Form.useForm()\n\n  const { data, loading, refetch, called } = useYellowCards()\n\n  const transform = useFormValues({\n    startDateField: 'StartDate',\n    endDateField: 'EndDate',\n    format: 'YYYY-MM-DD',\n  })\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      refetch(transform(values))\n    })\n  }\n\n  const handleResetFields = () => form.resetFields()\n\n  const columns: ColumnProps<any>[] = [\n    { title: '工作號', dataIndex: 'orworkno', sorter: sorter('orworkno') },\n    { title: '病歷號', dataIndex: 'hhisnum', sorter: sorter('hhisnum') },\n    { title: '姓名', dataIndex: 'hnamec' },\n    { title: '性別', dataIndex: 'hsex', sorter: sorter('hsex') },\n    { title: '報告時間', dataIndex: 'rptypedt', sorter: sorter('rptypedt') },\n    { title: '病理資料', dataIndex: 'diag' },\n    { title: '年齡', dataIndex: 'hage', sorter: sorter('hage') },\n  ]\n\n  return (\n    <Spin spinning={loading}>\n      <Page style={{ minHeight: 'calc(100vh - 203px)' }}>\n        <Row justify=\"center\">\n          <Col md={22} xs={24}>\n            <Form\n              form={form}\n              layout=\"horizontal\"\n              hideRequiredMark={true}\n              labelAlign=\"left\"\n              colon={false}>\n              <Row gutter={12} justify=\"space-between\">\n                <Col md={6} xs={24}>\n                  <Form.Item {...formItemLayout} label=\"資料庫\" name=\"no\">\n                    <Select allowClear>\n                      <Select.Option value={1}>黃卡資料庫</Select.Option>\n                    </Select>\n                  </Form.Item>\n                </Col>\n                <Col md={6} xs={24}>\n                  <Form.Item {...formItemLayout} label=\"病歷號\" name=\"HHISNUM\">\n                    <Input />\n                  </Form.Item>\n                </Col>\n                <Col md={6} xs={24}>\n                  <Form.Item {...formItemLayout} label=\"病理號\" name=\"ORWORKNO\">\n                    <Input />\n                  </Form.Item>\n                </Col>\n                <Col md={6} xs={24}>\n                  <Form.Item {...formItemLayout} label=\"病理資料\" name=\"DIAG\">\n                    <Input className=\"w-full\" />\n                  </Form.Item>\n                </Col>\n              </Row>\n              <Row gutter={12} justify=\"space-between\">\n                <Col md={6} xs={24}>\n                  <Form.Item {...formItemLayout} label=\"年齡\" name=\"HAGE\">\n                    <Select allowClear>\n                      {compose(\n                        map((x: number) => (\n                          <Select.Option key={x} value={x + 1}>\n                            {x + 1}\n                          </Select.Option>\n                        )),\n                        times(identity)\n                      )(120)}\n                    </Select>\n                  </Form.Item>\n                </Col>\n                <Col md={6} xs={24}>\n                  <Form.Item {...formItemLayout} label=\"性別\" name=\"HSEX\">\n                    <Select allowClear>\n                      <Select.Option value=\"M\">男</Select.Option>\n                      <Select.Option value=\"F\">女</Select.Option>\n                    </Select>\n                  </Form.Item>\n                </Col>\n                <Col md={6} xs={24}>\n                  <Form.Item {...formItemLayout} label=\"年度範圍\" name=\"date\">\n                    <RangePicker picker={'year' as any} />\n                  </Form.Item>\n                </Col>\n                <Col md={6} xs={24}>\n                  <Form.Item>\n                    <Button\n                      color=\"primary\"\n                      style={{ width: 120 }}\n                      className=\"mr-3\"\n                      onClick={handleResetFields}>\n                      重設\n                    </Button>\n                    <Button\n                      color=\"primary\"\n                      className=\"ml-3\"\n                      style={{ width: 120 }}\n                      onClick={handleOk}>\n                      搜尋\n                    </Button>\n                  </Form.Item>\n                </Col>\n              </Row>\n            </Form>\n          </Col>\n        </Row>\n        {called && (\n          <>\n            <Row className=\"mb-2 mt-4\" justify=\"center\">\n              <Col md={22} xs={24} className=\"text-sm\">\n                檢索結果共 <span className=\"text-primary\">{data.total}</span> 筆\n              </Col>\n            </Row>\n            <Row justify=\"center\">\n              <Col md={22} xs={24}>\n                <Table rowKey=\"id\" dataSource={data} columns={columns} />\n              </Col>\n            </Row>\n          </>\n        )}\n      </Page>\n    </Spin>\n  )\n}\n"],"sourceRoot":""}