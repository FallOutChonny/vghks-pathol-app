{"version":3,"sources":["containers/report-inquiry/report-inquiry.tsx","hooks/useLink.ts","components/input.tsx","components/layout.tsx","components/table.tsx","hooks/useTitle.ts","components/query-table.tsx","components/select.tsx"],"names":["faker","require","dataSource","content","Array","from","length","map","_","idx","id","uuid","name","lorem","word","author","findName","status","statusName","createdAt","moment","createdAtStr","format","updatedAt","updatedAtStr","description","total","ReportInquiry","useTitle","useForm","form","useBreadcrumb","setBreadcrumbItems","React","useEffect","handleTo","pathname","history","push","columns","title","dataIndex","render","v","r","type","onClick","routes","layout","hideRequiredMark","colon","className","gutter","span","Item","label","allowClear","placeholder","Option","value","rowKey","borderLess","css","p","theme","primary","StyledInput","styled","secondary","TextArea","Page","children","background","borderTopLeftRadius","borderTopRightRadius","StyledTable","pagination","TableComponent","editable","onAddRowClick","isRowDeletable","onDeleteRowClick","isCanEdit","props","_columns","useMemo","canEdit","placement","style","top","undefined","width","__","key","locale","emptyText","image","PRESENTED_IMAGE_SIMPLE","displayName","Column","DEFAULT_USE_TITLE_OPTIONS","restoreOnUnmount","document","options","prevTitleRef","useRef","replace","envStore","appTitle","current","_title","QueryTable","pageNum","onChange","loading","rowSelection","paginationConfig","merge","pageSize","showSizeChanger","StyledSelect","SelectComponent","this","Component"],"mappings":"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","file":"static/js/8.8494533c.chunk.js","sourcesContent":["import React from 'react'\nimport moment from 'moment'\nimport { Row, Col, Form } from 'antd'\nimport { ColumnProps } from 'antd/lib/table'\nimport useTitle from '@/hooks/useTitle'\nimport useBreadcrumb from '@/hooks/useBreadcrumb'\nimport useLink from '@/hooks/useLink'\nimport { uuid } from '@/utils/webHelper'\nimport * as routes from '@/constants/routes'\nimport Select from '@/components/select'\nimport Input from '@/components/input'\nimport { Page } from '@/components/layout'\nimport Button from '@/components/button'\nimport Table from '@/components/query-table'\nimport Box from '@/components/box'\nimport { ReportTemplate } from '@/services/reportService'\n\nconst faker = require('faker')\n\nconst dataSource = {\n  content: Array.from({ length: 100 }).map((_, idx) => ({\n    id: uuid(),\n    name: faker.lorem.word(),\n    author: faker.name.findName(),\n    status: 1,\n    statusName: '已發佈',\n    createdAt: moment(),\n    createdAtStr: moment().format('YYYY/MM/DD HH:mm'),\n    updatedAt: moment(),\n    updatedAtStr: moment().format('YYYY/MM/DD HH:mm'),\n    description: faker.lorem.word(),\n  })),\n  total: 100,\n}\n\nexport default function ReportInquiry() {\n  useTitle('輸入報告')\n\n  const [form] = Form.useForm()\n\n  const [, setBreadcrumbItems] = useBreadcrumb()\n  React.useEffect(() => {\n    setBreadcrumbItems([{ name: '輸入報告' }])\n  }, []) // eslint-disable-line\n\n  const handleTo = useLink()\n\n  const columns: ColumnProps<ReportTemplate>[] = [\n    {\n      title: '報告名稱',\n      dataIndex: 'name',\n      render: (v, r) => (\n        <Button type=\"link\" onClick={handleTo(routes.REPORT_INPUT)}>\n          {v}\n        </Button>\n      ),\n    },\n    {\n      title: '創作者',\n      dataIndex: 'author',\n    },\n    {\n      title: '狀態',\n      dataIndex: 'statusName',\n    },\n    {\n      title: '創作時間',\n      dataIndex: 'createdAtStr',\n    },\n    {\n      title: '上次修改時間',\n      dataIndex: 'updatedAtStr',\n    },\n    {\n      title: '報告描述',\n      dataIndex: 'description',\n    },\n    // {\n    //   title: 'actions',\n    //   dataIndex: 'delete',\n    //   align: 'center',\n    //   render: (_, r) => (\n    //     <>\n    //       <Tooltip title=\"檢視\">\n    //         <EyeOutlined\n    //           className=\"c-icon text-lg cursor-pointer mr-3\"\n    //           onClick={handleToEditPage(r)}\n    //         />\n    //       </Tooltip>\n    //       <Tooltip title=\"刪除\">\n    //         <DeleteOutlined className=\"c-icon text-lg cursor-pointer\" />\n    //       </Tooltip>\n    //     </>\n    //   ),\n    // },\n  ]\n\n  return (\n    <Page>\n      <Form\n        layout=\"horizontal\"\n        form={form}\n        hideRequiredMark={true}\n        colon={false}>\n        <Box className=\"bg-white p-12 mb-8 rounded-lg shadow-lg\">\n          <Row gutter={24}>\n            <Col span={8}>\n              <Form.Item label=\"審核醫師\" name=\"doctorId\">\n                <Select allowClear placeholder=\"選擇醫師\" className=\"w-2/3\">\n                  <Select.Option value={1}>\b醫師名1</Select.Option>\n                  <Select.Option value={2}>\b醫師名2</Select.Option>\n                  <Select.Option value={3}>\b醫師名3</Select.Option>\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item label=\"申請序號\" name=\"serialNo\">\n                <Input className=\"w-2/3\" placeholder=\"輸入申請序號\" />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item label=\"報告格式\">\n                <Input className=\"w-2/3\" placeholder=\"輸入報告格式\" />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Box>\n        <Row>\n          <Col span={24}>\n            <Table rowKey=\"id\" columns={columns} dataSource={dataSource} />\n          </Col>\n        </Row>\n      </Form>\n    </Page>\n  )\n}\n","import history from '@/utils/history'\n\nexport default function useLink() {\n  return (pathname?: string) => () => {\n    if (pathname) {\n      history.push(pathname)\n    }\n  }\n}\n","import { Input } from 'antd'\nimport styled, { css } from 'styled-components'\n\nconst borderLess = css`\n  &.ant-input-borderless {\n    border: none;\n    border-bottom: 1px solid ${p => p.theme.primary};\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  &:active:not(.ant-input-borderless) {\n    box-shadow: 0 0 0 1px ${p => p.theme.primary};\n  }\n`\n\nconst StyledInput = styled(Input)`\n  &.ant-input-affix-wrapper .ant-input,\n  &.ant-input {\n    border-color: ${p => p.theme.primary};\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    ${borderLess};\n  }\n`\n\nconst Search = styled(Input.Search)`\n  &.ant-input-search {\n    .ant-input {\n      border-color: ${p => p.theme.primary};\n\n      &:hover,\n      &:focus {\n        border-color: ${p => p.theme.secondary};\n      }\n\n      &:focus {\n        box-shadow: 0 0 0 1px ${p => p.theme.primary};\n      }\n    }\n\n    .anticon-search {\n      font-size: 20px;\n      color: ${p => p.theme.primary};\n    }\n  }\n`\n\nconst TextArea = styled(Input.TextArea)`\n  &.ant-input {\n    resize: none;\n    border: 1px solid ${p => p.theme.primary};\n\n    &:hover,\n    &:focus {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    ${borderLess};\n  }\n`\n\nexport { StyledInput as Input, TextArea, Search }\n\nexport default StyledInput\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BreadcrumbProps } from 'antd/lib/breadcrumb'\nimport { HomeOutlined } from '@ant-design/icons'\nimport Breadcrumb from '@/components/breadcrumb'\nimport Box from '@/components/box'\nimport history from '@/utils/history'\n\nconst PageTitleWrapper = styled(Box)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1.429rem;\n`\n\ninterface PageTitleProps extends BreadcrumbProps {\n  title?: string\n  items?: { href?: string; name: string }[]\n  right?: React.ReactNode\n}\n\nexport function PageTitle({ items = [], right, ...props }: PageTitleProps) {\n  const handleTo = (pathname?: string) => (\n    evt: React.MouseEvent<HTMLElement>\n  ) => {\n    evt.preventDefault()\n\n    if (pathname) {\n      history.push(pathname)\n    }\n  }\n\n  return (\n    <PageTitleWrapper>\n      <Breadcrumb separator=\">\" {...props}>\n        <Breadcrumb.Item onClick={handleTo('/')} href=\"/\">\n          <HomeOutlined className=\"relative\" style={{ top: -4 }} />\n        </Breadcrumb.Item>\n        {items.map((x, idx) => (\n          <Breadcrumb.Item\n            key={`breadcrumb-${idx}`}\n            onClick={handleTo(x.href)}\n            href={x.href}>\n            {x.name}\n          </Breadcrumb.Item>\n        ))}\n      </Breadcrumb>\n      {right}\n    </PageTitleWrapper>\n  )\n}\n\ninterface PageProps {\n  children: React.ReactNode\n}\n\nexport function Page({ children }: PageProps) {\n  return (\n    <Box\n      className=\"pl-8 pt-6 pr-16 pb-12\"\n      background=\"rgb(221, 228, 237)\"\n      borderTopLeftRadius={32}\n      borderTopRightRadius={32}>\n      {children}\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Table, Empty, Tooltip } from 'antd'\nimport { TableProps } from 'antd/lib/table'\nimport { CloseOutlined, PlusOutlined } from '@ant-design/icons'\nimport styled from 'styled-components'\n\nconst StyledTable: any = styled(Table)`\n  &.ant-table-wrapper {\n    .ant-pagination-prev .ant-pagination-item-link,\n    .ant-pagination-next .ant-pagination-item-link {\n      border-color: ${p => p.theme.pagination};\n      border-radius: 6px;\n      color: ${p => p.theme.pagination};\n    }\n\n    .ant-pagination-item {\n      border-color: ${p => p.theme.pagination};\n    }\n\n    .ant-pagination-item a {\n      color: ${p => p.theme.pagination};\n    }\n\n    .ant-pagination-item-active,\n    .ant-pagination-item-active:focus,\n    .ant-pagination-item:hover {\n      border-color: ${p => p.theme.pagination};\n      background: ${p => p.theme.pagination};\n\n      a {\n        color: #fff;\n      }\n    }\n\n    .ant-table-pagination.ant-pagination {\n      margin-top: 32px;\n    }\n\n    .ant-pagination-prev:hover .ant-pagination-item-link,\n    .ant-pagination-next:hover .ant-pagination-item-link {\n      border-color: ${p => p.theme.pagination};\n      background: ${p => p.theme.pagination};\n      color: #fff;\n    }\n\n    .ant-pagination-simple-pager {\n      color: ${p => p.theme.pagination};\n    }\n  }\n\n  .ant-table-tbody > tr > td {\n    height: 40px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    line-height: 1em;\n    color: #4a4a4a;\n    background: #f0f2f5;\n    border-bottom: 1px solid #e9e9e9;\n  }\n\n  .ant-table-thead > tr > th {\n    background: rgb(196, 213, 241);\n    border-bottom: 1px solid #e9e9e9;\n    color: ${p => p.theme.primary};\n    font-weight: 600;\n    font-size: 16px;\n  }\n`\n\ntype Props<T> = TableProps<T> & {\n  editable?: boolean\n  isRowDeletable?: (row: T) => boolean\n  onAddRowClick?: (param?: any) => any\n  onDeleteRowClick?: (param?: any) => any\n  isCanEdit?: any\n}\n\nfunction TableComponent<T = any>({\n  editable = false,\n  columns = [],\n  onAddRowClick,\n  isRowDeletable = () => true,\n  onDeleteRowClick,\n  isCanEdit = '',\n  ...props\n}: Props<T>) {\n  const _columns = React.useMemo(() => {\n    let canEdit: boolean = true\n    if (!editable) {\n      return columns\n    }\n    if (isCanEdit !== '') {\n      canEdit = isCanEdit\n    }\n\n    const handleRowDelete = (key: React.Key) => () => {\n      if (onDeleteRowClick) {\n        onDeleteRowClick(key)\n      }\n    }\n\n    return [\n      {\n        title: (\n          <Tooltip placement=\"topLeft\" title=\"新增\">\n            <PlusOutlined\n              className=\"ml-1 relative\"\n              style={{ top: -3 }}\n              onClick={canEdit ? onAddRowClick : undefined}\n            />\n          </Tooltip>\n        ),\n        width: 50,\n        render: (_: any, __: any, idx: number) => (\n          <div className=\"text-center\">#{idx + 1}</div>\n        ),\n      },\n      ...columns,\n      {\n        width: 50,\n        render: (_: any, r: any, idx: number) => (\n          <Tooltip placement=\"topLeft\" title=\"刪除\">\n            <CloseOutlined\n              onClick={isRowDeletable(r) ? handleRowDelete(r.id) : undefined}\n            />\n          </Tooltip>\n        ),\n      },\n    ]\n  }, [columns, editable]) // eslint-disable-line\n\n  return (\n    <StyledTable\n      columns={_columns}\n      locale={{\n        emptyText: (\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            description={\n              <span>\n                <span className=\"d-block\">\n                  尚無資料，請點選「＋新增」新增資料。\n                </span>\n              </span>\n            }\n          />\n        ),\n      }}\n      {...props}>\n      {props.children}\n    </StyledTable>\n  )\n}\n\nTableComponent.displayName = 'Table'\nTableComponent.Column = Table.Column\n\nexport default TableComponent\n","import React from 'react'\nimport { replace } from 'ramda'\nimport { envStore } from '@/constants/env'\n\nexport interface UseTitleOptions {\n  restoreOnUnmount?: boolean\n}\n\nconst DEFAULT_USE_TITLE_OPTIONS: UseTitleOptions = {\n  restoreOnUnmount: false,\n}\n\nfunction useTitle(\n  title: string,\n  options: UseTitleOptions = DEFAULT_USE_TITLE_OPTIONS\n) {\n  const prevTitleRef = React.useRef(document.title)\n  document.title = replace(/%s/, title)(envStore.appTitle)\n  React.useEffect(() => {\n    if (options && options.restoreOnUnmount) {\n      return () => {\n        document.title = prevTitleRef.current // eslint-disable-line\n      }\n    } else {\n      return\n    }\n  }, []) // eslint-disable-line\n}\n\nexport default typeof document !== 'undefined'\n  ? useTitle\n  : (_title: string) => {}\n","import React from 'react'\nimport { ColumnProps, TableProps, TablePaginationConfig } from 'antd/lib/table'\nimport { SpinProps } from 'antd/lib/spin'\nimport { merge } from 'ramda'\nimport { DataSource } from '@/constants/types'\nimport Table from '@/components/table'\n\ntype Props<T> = Omit<TableProps<T>, 'dataSource'> & {\n  columns: ColumnProps<T>[]\n  className?: string\n  pageNum?: number\n  dataSource: DataSource<T>\n  onChange?: (pagination: TablePaginationConfig) => any\n  loading?: boolean | SpinProps\n  rowSelection?: {\n    selectedRowKeys: any[]\n    onChange: (selectedRowKeys: any, selectedRows: any) => void\n  }\n}\n\nexport default function QueryTable<T>({\n  columns,\n  className,\n  pageNum = 1,\n  dataSource,\n  onChange,\n  loading = false,\n  rowSelection,\n  pagination,\n  ...props\n}: Props<T>) {\n  const handleTableChange = ({ current, pageSize }: TablePaginationConfig) => {\n    if (onChange) {\n      onChange({ current, pageSize })\n    }\n  }\n\n  const paginationConfig = React.useMemo(\n    () =>\n      merge<any, any>(pagination, {\n        current: pageNum,\n        pageSize: 10,\n        total: dataSource.total,\n        showSizeChanger: false,\n      }) as TablePaginationConfig,\n    [dataSource.total, pagination, pageNum]\n  )\n\n  return (\n    <Table\n      rowKey=\"id\"\n      dataSource={dataSource.content}\n      columns={columns as any}\n      pagination={paginationConfig}\n      onChange={handleTableChange}\n      rowSelection={rowSelection}\n      loading={loading}\n      className={className}\n      {...props}\n    />\n  )\n}\n","import React from 'react'\nimport { Select } from 'antd'\nimport { SelectProps } from 'antd/lib/select'\nimport styled from 'styled-components'\n\nconst StyledSelect: any = styled(Select)`\n  &.ant-select {\n    &.ant-select-single:not(.ant-select-customize-input) .ant-select-selector,\n    .ant-select-selection:hover,\n    .ant-select-selection:active,\n    .ant-select-selection:focus {\n      border-color: ${p => p.theme.primary};\n    }\n\n    .ant-select-selection {\n      border-color: ${p => p.theme.secondary};\n    }\n\n    .ant-select-selection:active,\n    .ant-select-selection:focus {\n      box-shadow: none;\n    }\n\n    .ant-select-arrow {\n      color: ${p => p.theme.primary};\n    }\n\n    .ant-select-arrow-icon {\n      position: relative;\n      top: -1px;\n      font-size: 14px;\n    }\n\n    &.ant-select-borderless .ant-select-selector {\n      position: relative;\n      bottom: 1px;\n      border: 0;\n      border-bottom: 1px solid ${p => p.theme.primary} !important;\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  }\n\n  &.ant-select.is--transparent {\n    &.ant-select-focused > .ant-select-selector {\n      border: 1px solid #666a8f;\n    }\n\n    > .ant-select-selector {\n      background: transparent;\n      border: 1px solid #666a8f;\n      color: #a9b6d8;\n\n      &:active,\n      &:focus,\n      &:hover {\n        border: 1px solid #666a8f;\n      }\n    }\n\n    .ant-select-arrow {\n      color: #a9b6d8;\n    }\n  }\n`\n\nclass SelectComponent<T = any> extends React.Component<SelectProps<T>, any> {\n  public static Option = Select.Option\n\n  public static displayName = 'Select'\n\n  render() {\n    return <StyledSelect {...this.props}>{this.props.children}</StyledSelect>\n  }\n}\n\nexport default SelectComponent\n"],"sourceRoot":""}