{"version":3,"sources":["hooks/useVisible.ts","containers/report-inquiry/report-inquiry.tsx"],"names":["useVisible","onRequestOpen","React","useState","visible","setVisible","handleVisible","evt","prev","handleClose","ReportInquiry","useTitle","useBreadcrumb","name","useForm","form","isEdit","setIsEdit","reportInfo","setReportInfo","useReportTemplateState","reportTemplates","style","height","justify","span","className","layout","hideRequiredMark","colon","Item","label","rules","required","allowClear","size","placeholder","width","Option","value","map","x","key","id","color","onClick","validateFields","then","values"],"mappings":"4LASe,SAASA,IAA2C,IAAD,yDAAJ,GAAzBC,EAA6B,EAA7BA,cAA6B,EAClCC,IAAMC,UAAS,GADmB,mBACzDC,EADyD,KAChDC,EADgD,KAG1DC,EAAqB,SAACC,GAC1BF,GAAW,SAAAG,GAAI,OAAKA,KAEhBP,GACFA,KAIEQ,EAAc,WAClBJ,GAAW,IAGb,MAAO,CAACD,EAASE,EAAeG,K,kRCXnB,SAASC,IACtBC,YAAS,4BACTC,YAAc,CAAC,CAAEC,KAAM,8BAFe,MAIvB,IAAKC,UAAbC,EAJ+B,sBAMVf,cANU,mBAM/BgB,EAN+B,KAMvBC,EANuB,OAQFf,IAAMC,WARJ,mBAQ/Be,EAR+B,KAQnBC,EARmB,OAUZC,cAAnBC,EAV+B,oBAmBtC,OACE,oCACGL,GAAU,kBAAC,IAAiBE,IAC3BF,GACA,kBAAC,IAAD,CAAMM,MAAO,CAAEC,OAAQ,wBACrB,uBAAKC,QAAQ,UACX,uBAAKC,KAAM,IACT,yBAAKC,UAAU,2CACb,uBACEX,KAAMA,EACNY,OAAO,SACPD,UAAU,oBACVE,kBAAkB,EAClBC,OAAO,GACP,sBAAMC,KAAN,CACEJ,UAAU,oBACVK,MAAM,2BACNC,MAAO,CAACA,IAAMC,UACdpB,KAAK,gBACL,kBAAC,IAAD,CACEqB,YAAU,EACVC,KAAK,QACLC,YAAY,2BACZd,MAAO,CAAEe,MAAO,MAChB,kBAAC,IAAOC,OAAR,CAAeC,MAAO,sBAAtB,wBACA,kBAAC,IAAOD,OAAR,CAAeC,MAAO,wBAAtB,0BAGJ,sBAAMT,KAAN,CACEJ,UAAU,oBACVK,MAAM,2BACNC,MAAO,CAACA,IAAMC,UACdpB,KAAK,YACL,kBAAC,IAAD,CACEsB,KAAK,QACLC,YAAY,uCACZd,MAAO,CAAEe,MAAO,QAGpB,sBAAMP,KAAN,CACEE,MAAO,CAACA,IAAMC,UACdP,UAAU,oBACVb,KAAK,KACLkB,MAAM,4BACN,kBAAC,IAAD,CAAQI,KAAK,QAAQb,MAAO,CAAEe,MAAO,MAClChB,EAAgBmB,KAAI,SAAAC,GAAC,OACpB,kBAAC,IAAOH,OAAR,CAAeI,IAAKD,EAAEE,GAAIJ,MAAOE,EAAEE,IAChCF,EAAE5B,WAKX,yBAAKa,UAAU,yBACb,kBAAC,IAAD,CACES,KAAK,QACLS,MAAM,UACNtB,MAAO,CAAEe,MAAO,KAChBQ,QAhEH,WACf9B,EAAK+B,iBAAiBC,MAAK,SAAAC,GACzB/B,IACAE,EAAc6B,QAyDA","file":"static/js/10.77c93dc4.chunk.js","sourcesContent":["import React from 'react'\n\ntype Props = {\n  /**\n   * 開關 Modal 時希望處理的事情\n   */\n  onRequestOpen?: () => any\n}\n\nexport default function useVisible({ onRequestOpen }: Props = {}) {\n  const [visible, setVisible] = React.useState(false)\n\n  const handleVisible: any = (evt: React.MouseEvent<HTMLElement>) => {\n    setVisible(prev => !prev)\n\n    if (onRequestOpen) {\n      onRequestOpen()\n    }\n  }\n\n  const handleClose = () => {\n    setVisible(false)\n  }\n\n  return [visible, handleVisible, handleClose]\n}\n","import React from 'react'\nimport { Row, Col, Form } from 'antd'\nimport useTitle from '@/hooks/useTitle'\nimport { useBreadcrumb } from '@/hooks/useApp'\nimport { useReportTemplateState } from '@/hooks/useReportTemplate'\nimport Select from '@/components/select'\nimport Input from '@/components/input'\nimport { Page } from '@/components/layout'\nimport Button from '@/components/button'\nimport ReportTyping from '@/containers/report-typing'\nimport { rules } from '@/utils/form'\nimport useVisible from '@/hooks/useVisible'\n\nexport default function ReportInquiry() {\n  useTitle('輸入報告')\n  useBreadcrumb([{ name: '輸入報告' }])\n\n  const [form] = Form.useForm()\n\n  const [isEdit, setIsEdit] = useVisible()\n\n  const [reportInfo, setReportInfo] = React.useState<any>()\n\n  const [reportTemplates] = useReportTemplateState()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      setIsEdit()\n      setReportInfo(values)\n    })\n  }\n\n  return (\n    <>\n      {isEdit && <ReportTyping {...reportInfo} />}\n      {!isEdit && (\n        <Page style={{ height: 'calc(100vh - 203px)' }}>\n          <Row justify=\"center\">\n            <Col span={20}>\n              <div className=\"bg-white p-12 mb-8 rounded-lg shadow-lg\">\n                <Form\n                  form={form}\n                  layout=\"inline\"\n                  className=\"flex items-center\"\n                  hideRequiredMark={true}\n                  colon={false}>\n                  <Form.Item\n                    className=\"flex items-center\"\n                    label=\"審核醫師\"\n                    rules={[rules.required]}\n                    name=\"reviewDoctor\">\n                    <Select\n                      allowClear\n                      size=\"large\"\n                      placeholder=\"選擇醫師\"\n                      style={{ width: 160 }}>\n                      <Select.Option value={'李懷寶'}>\b李懷寶</Select.Option>\n                      <Select.Option value={'\b林榮嘉'}>\b林榮嘉</Select.Option>\n                    </Select>\n                  </Form.Item>\n                  <Form.Item\n                    className=\"flex items-center\"\n                    label=\"申請序號\"\n                    rules={[rules.required]}\n                    name=\"serialNo\">\n                    <Input\n                      size=\"large\"\n                      placeholder=\"輸入申請序號\"\n                      style={{ width: 230 }}\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    rules={[rules.required]}\n                    className=\"flex items-center\"\n                    name=\"id\"\n                    label=\"報告格式\">\n                    <Select size=\"large\" style={{ width: 230 }}>\n                      {reportTemplates.map(x => (\n                        <Select.Option key={x.id} value={x.id}>\n                          {x.name}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                  <div className=\"mt-4 flex justify-end\">\n                    <Button\n                      size=\"large\"\n                      color=\"primary\"\n                      style={{ width: 120 }}\n                      onClick={handleOk}>\n                      確認\n                    </Button>\n                  </div>\n                </Form>\n              </div>\n            </Col>\n          </Row>\n        </Page>\n      )}\n    </>\n  )\n}\n"],"sourceRoot":""}