{"version":3,"sources":["containers/report-inquiry/report-inquiry.tsx"],"names":["FormItem","styled","Item","ReportInquiry","useTitle","useBreadcrumb","name","React","useEffect","handleKeyPress","evt","key","handleOk","window","addEventListener","removeEventListener","handleConfirm","useRouteLeaveConfirm","useState","keyword","setKeyword","useForm","form","useAllReportTemplates","reportTemplates","validateFields","then","values","history","push","REPORT_INPUT","toQueryString","filterReportTemplates","useMemo","ifElse","isNil","always","val","filter","x","toLowerCase","includes","useHeaderContent","color","className","onClick","style","minHeight","justify","span","layout","hideRequiredMark","colon","label","rules","required","allowClear","size","placeholder","width","Option","value","showSearch","filterOption","onSearch","map","id"],"mappings":"uaAmBMA,EAAWC,kBAAO,IAAKC,MAAf,2EAAGD,CAAH,MAEC,SAASE,IACtBC,YAAS,4BAETC,YAAc,CAAC,CAAEC,KAAM,8BAEvBC,IAAMC,WAAU,WACd,IAAMC,EAAiB,SAACC,GAClB,UAAAA,EAAIC,KACNC,KAMJ,OAFAC,OAAOC,iBAAiB,UAAWL,GAE5B,WACLI,OAAOE,oBAAoB,UAAWN,MAEvC,IAIH,IAAMO,EAAgBC,YAAqB,KArBL,EAuBRV,IAAMW,WAvBE,mBAuB/BC,EAvB+B,KAuBtBC,EAvBsB,OAyBvB,IAAKC,UAAbC,EAzB+B,sBA2BZC,cAAnBC,EA3B+B,oBA6BhCZ,EAAW,WACfU,EAAKG,iBAAiBC,MAAK,SAAAC,GACzBC,IAAQC,KAAR,UAAgBC,IAAhB,YAAgCC,YAAcJ,SAQ5CK,EAA0CzB,IAAM0B,SACpD,kBACEC,YAAOC,IAAOC,YAAOZ,IAAkB,SAAAa,GAAG,OACxCC,aAAO,SAACC,GAAD,uBACLA,EAAEjC,YADG,aACL,EAAQkC,cAAcC,SAASJ,EAAIG,iBADrCF,CAEEd,KAHJU,CAIEf,KACJ,CAACA,IAoBH,OAjBAuB,YACE,6BACE,kBAAC,IAAD,CACEC,MAAM,UACNC,UAAU,yCACVC,QAASjC,GAHX,gBAMA,kBAAC,IAAD,CACE+B,MAAM,UACNC,UAAU,8CACVC,QAAS7B,GAHX,kBAUF,oCACE,kBAAC,IAAD,CAAM8B,MAAO,CAAEC,UAAW,wBACxB,uBAAKC,QAAQ,UACX,uBAAKC,KAAM,IACT,yBAAKL,UAAU,iDACb,uBACEtB,KAAMA,EACN4B,OAAO,SACPN,UAAU,sBACVO,kBAAkB,EAClBC,OAAO,GACP,kBAACpD,EAAD,CACE4C,UAAU,UACVS,MAAM,2BACNC,MAAO,CAACA,IAAMC,UAEdjD,KAAK,gBACL,kBAAC,IAAD,CACEkD,YAAU,EACVC,KAAK,QACLC,YAAY,2BACZZ,MAAO,CAAEa,MAAO,MAChB,kBAAC,IAAOC,OAAR,CAAeC,MAAO,sBAAtB,wBACA,kBAAC,IAAOD,OAAR,CAAeC,MAAO,wBAAtB,0BAGJ,kBAAC7D,EAAD,CACEqD,MAAM,2BACNC,MAAO,CAACA,IAAMC,UACdjD,KAAK,YACL,kBAAC,IAAD,CACEmD,KAAK,QACLC,YAAY,uCACZZ,MAAO,CAAEa,MAAO,QAGpB,kBAAC3D,EAAD,CACEsD,MAAO,CAACA,IAAMC,UACdjD,KAAK,aACL+C,MAAM,4BACN,kBAAC,IAAD,CACES,YAAU,EACVC,cAAc,EACdN,KAAK,QACLO,SA5ES,SAACH,GAC1BzC,EAAWyC,IA4EKf,MAAO,CAAEa,MAAO,MACf3B,EAAsBiC,KAAI,SAAA1B,GAAC,OAC1B,kBAAC,IAAOqB,OAAR,CAAejD,IAAK4B,EAAE2B,GAAIL,MAAOtB,EAAE2B,IAChC3B,EAAEjC,YAMb,yBAAKsC,UAAU","file":"static/js/21.976743bf.chunk.js","sourcesContent":["import React from 'react'\nimport { Row, Col, Form } from 'antd'\nimport { ifElse, isNil, always, filter } from 'ramda'\nimport styled from 'styled-components'\nimport useTitle from '@/hooks/useTitle'\nimport { useBreadcrumb, useHeaderContent } from '@/hooks/useApp'\nimport useRouteLeaveConfirm from '@/hooks/useRouteLeaveConfirm'\n// import useAuth from '@/hooks/useAuth'\nimport { useAllReportTemplates } from '@/services/reportTemplate'\nimport Select from '@/components/select'\nimport Input from '@/components/input'\nimport { Page } from '@/components/layout'\nimport Button from '@/components/button'\nimport { rules } from '@/utils/form'\nimport history from '@/utils/history'\nimport { REPORT_INPUT } from '@/constants/routes'\nimport { ReportTemplate } from '@/constants/types'\nimport { toQueryString } from '@/utils/request'\n\nconst FormItem = styled(Form.Item)``\n\nexport default function ReportInquiry() {\n  useTitle('輸入報告')\n\n  useBreadcrumb([{ name: '輸入報告' }])\n\n  React.useEffect(() => {\n    const handleKeyPress = (evt: KeyboardEvent) => {\n      if (evt.key === `Enter`) {\n        handleOk()\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyPress)\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress)\n    }\n  }, []) // eslint-disable-line\n\n  // const { user } = useAuth()\n\n  const handleConfirm = useRouteLeaveConfirm('/')\n\n  const [keyword, setKeyword] = React.useState<string>()\n\n  const [form] = Form.useForm()\n\n  const [reportTemplates] = useAllReportTemplates()\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      history.push(`${REPORT_INPUT}?${toQueryString(values)}`)\n    })\n  }\n\n  const handleReportSearch = (value: string) => {\n    setKeyword(value)\n  }\n\n  const filterReportTemplates: ReportTemplate[] = React.useMemo(\n    () =>\n      ifElse(isNil, always(reportTemplates), val =>\n        filter((x: ReportTemplate) =>\n          x.name?.toLowerCase().includes(val.toLowerCase())\n        )(reportTemplates)\n      )(keyword),\n    [keyword] // eslint-disable-line\n  )\n\n  useHeaderContent(\n    <div>\n      <Button\n        color=\"oultine\"\n        className=\"text-white border-white bg-transparent\"\n        onClick={handleOk}>\n        確認\n      </Button>\n      <Button\n        color=\"outline\"\n        className=\"ml-3 text-white border-white bg-transparent\"\n        onClick={handleConfirm}>\n        取消\n      </Button>\n    </div>\n  )\n\n  return (\n    <>\n      <Page style={{ minHeight: 'calc(100vh - 203px)' }}>\n        <Row justify=\"center\">\n          <Col span={20}>\n            <div className=\"bg-white p-12 py-24 mb-8 rounded-lg shadow-lg\">\n              <Form\n                form={form}\n                layout=\"inline\"\n                className=\"flex justify-center\"\n                hideRequiredMark={true}\n                colon={false}>\n                <FormItem\n                  className=\"text-lg\"\n                  label=\"審核醫師\"\n                  rules={[rules.required]}\n                  // initialValue={user.id}\n                  name=\"reviewDoctor\">\n                  <Select\n                    allowClear\n                    size=\"large\"\n                    placeholder=\"選擇醫師\"\n                    style={{ width: 160 }}>\n                    <Select.Option value={'李懷寶'}>\b李懷寶</Select.Option>\n                    <Select.Option value={'\b林榮嘉'}>\b林榮嘉</Select.Option>\n                  </Select>\n                </FormItem>\n                <FormItem\n                  label=\"申請序號\"\n                  rules={[rules.required]}\n                  name=\"serialNo\">\n                  <Input\n                    size=\"large\"\n                    placeholder=\"輸入申請序號\"\n                    style={{ width: 230 }}\n                  />\n                </FormItem>\n                <FormItem\n                  rules={[rules.required]}\n                  name=\"templateId\"\n                  label=\"報告格式\">\n                  <Select\n                    showSearch\n                    filterOption={false}\n                    size=\"large\"\n                    onSearch={handleReportSearch}\n                    style={{ width: 230 }}>\n                    {filterReportTemplates.map(x => (\n                      <Select.Option key={x.id} value={x.id}>\n                        {x.name}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                </FormItem>\n              </Form>\n              <div className=\"mt-6\"></div>\n            </div>\n          </Col>\n        </Row>\n      </Page>\n      {/* )} */}\n    </>\n  )\n}\n"],"sourceRoot":""}