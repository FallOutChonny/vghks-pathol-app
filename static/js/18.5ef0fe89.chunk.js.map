{"version":3,"sources":["services/yellowCard.ts","containers/yellow-card-inquiry/yellow-card-inquiry.tsx"],"names":["compose","require","useYellowCards","React","useState","content","total","totalPages","data","setData","refetch","values","_data","map","_","id","uuid","workNo","faker","lorem","slug","HHISNUM","company","catchPhrase","patholInfo","name","firstName","age","random","number","sex","reportTime","moment","reportTimeStr","format","times","identity","length","Math","floor","loading","locale","formItemLayout","createFormItemLayout","YellowCardInquiry","useTitle","useBreadcrumb","useForm","form","style","minHeight","justify","md","xs","layout","hideRequiredMark","labelAlign","colon","gutter","Item","label","allowClear","Option","value","className","x","key","picker","color","width","onClick","resetFields","rowKey","dataSource","columns","title","dataIndex"],"mappings":"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","file":"static/js/18.5ef0fe89.chunk.js","sourcesContent":["import React from 'react'\nimport { length, times, identity, map } from 'ramda'\nimport moment from 'moment'\nimport { DataSource } from '@/constants/types'\nimport { uuid } from '@/utils/webHelper'\nimport faker from 'faker'\nconst { compose } = require('ramda')\n\nfaker.locale = 'zh_TW'\n\nexport function useYellowCards() {\n  const [data, setData] = React.useState<DataSource>({\n    content: [],\n    total: 0,\n    totalPages: 0,\n  })\n\n  const refetch = (values?: any) => {\n    const _data = compose(\n      map(_ => ({\n        id: uuid(),\n        workNo: faker.lorem.slug(),\n        HHISNUM: faker.company.catchPhrase(),\n        patholInfo: faker.company.catchPhrase(),\n        name: faker.name.firstName(),\n        age: faker.random.number(50),\n        sex: '男',\n        reportTime: moment(),\n        reportTimeStr: moment().format('YYYY.MM.DD HH:mm:ss'),\n      })),\n      times(identity)\n    )(100)\n\n    setData({\n      content: _data,\n      total: length(_data),\n      totalPages: Math.floor(length(_data) / 10) + 1,\n    })\n  }\n\n  return {\n    data,\n    refetch,\n    loading: false,\n  }\n}\n","import React from 'react'\nimport { length, compose, identity, times, map } from 'ramda'\nimport { Row, Col, Form } from 'antd'\nimport { ColumnProps } from 'antd/lib/table'\nimport useTitle from '@/hooks/useTitle'\nimport { useBreadcrumb } from '@/hooks/useApp'\nimport { useYellowCards } from '@/services/yellowCard'\nimport Select from '@/components/select'\nimport Input from '@/components/input'\nimport { RangePicker } from '@/components/datepicker'\nimport Table from '@/components/query-table'\nimport Button from '@/components/button'\nimport { Page } from '@/components/layout'\nimport { createFormItemLayout } from '@/utils/form'\n\nconst formItemLayout = createFormItemLayout(6)\n\nexport default function YellowCardInquiry() {\n  useTitle('黃卡新檢索')\n  useBreadcrumb([{ name: '報告查詢' }, { name: '黃卡新檢索' }])\n\n  const [form] = Form.useForm()\n\n  const { data, refetch } = useYellowCards()\n\n  const handleOk = () => {\n    refetch()\n  }\n\n  const handleResetFields = () => form.resetFields()\n\n  const columns: ColumnProps<any>[] = [\n    { title: '工作號', dataIndex: 'workNo' },\n    { title: '病歷號', dataIndex: 'HHISNUM' },\n    { title: '姓名', dataIndex: 'name' },\n    { title: '性別', dataIndex: 'sex' },\n    { title: '報告時間', dataIndex: 'reportTimeStr' },\n    { title: '病理資料', dataIndex: 'patholInfo' },\n    { title: '年齡', dataIndex: 'age' },\n  ]\n\n  return (\n    <Page style={{ minHeight: 'calc(100vh - 203px)' }}>\n      <Row justify=\"center\">\n        <Col md={22} xs={24}>\n          <Form\n            form={form}\n            layout=\"horizontal\"\n            hideRequiredMark={true}\n            labelAlign=\"left\"\n            colon={false}>\n            <Row gutter={12} justify=\"space-between\">\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"資料庫\" name=\"no\">\n                  <Select allowClear>\n                    <Select.Option value={1}>黃卡資料庫</Select.Option>\n                    <Select.Option value={2}>...</Select.Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"病歷號\" name=\"no\">\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"病理號\" name=\"no\">\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"病理資料\" name=\"createAt\">\n                  <Input className=\"w-full\" />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={12} justify=\"space-between\">\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"年齡\" name=\"doctor\">\n                  <Select allowClear>\n                    {compose(\n                      map((x: number) => (\n                        <Select.Option key={x} value={x}>\n                          {x}\n                        </Select.Option>\n                      )),\n                      times(identity)\n                    )(120)}\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"性別\" name=\"state\">\n                  <Select allowClear>\n                    <Select.Option value={1}>男</Select.Option>\n                    <Select.Option value={2}>女</Select.Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"年度範圍\" name=\"state\">\n                  <RangePicker picker={'year' as any} />\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item>\n                  <Button\n                    color=\"primary\"\n                    style={{ width: 120 }}\n                    className=\"mr-3\"\n                    onClick={handleResetFields}>\n                    重設\n                  </Button>\n                  <Button\n                    color=\"primary\"\n                    className=\"ml-3\"\n                    style={{ width: 120 }}\n                    onClick={handleOk}>\n                    搜尋\n                  </Button>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n      {length(data.content) > 0 && (\n        <>\n          <Row className=\"mb-2 mt-4\" justify=\"center\">\n            <Col md={22} xs={24} className=\"text-sm\">\n              檢索結果共 <span className=\"text-primary\">{data.total}</span> 筆\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col md={22} xs={24}>\n              <Table rowKey=\"id\" dataSource={data} columns={columns} />\n            </Col>\n          </Row>\n        </>\n      )}\n    </Page>\n  )\n}\n"],"sourceRoot":""}