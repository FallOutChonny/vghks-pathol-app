{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/MinusOutlined.js","../node_modules/@ant-design/icons/es/icons/MinusOutlined.js","components/snippet-list-menu-item.tsx","components/snippet-list-menu.tsx","components/snippet-drag-preview.js","components/snippet-drag-layer.tsx","components/snippet-block-placeholder.ts","components/snippets-container.tsx","containers/report-template-editor/components.tsx","containers/report-template-editor/report-template-builder.tsx","constants/item-types.ts","components/snippet-utils.js","utils/message.tsx","components/box.ts","components/snippet-toolbar.tsx","components/snippet.tsx","components/withScroll.js","components/snippet-scrollable-container.tsx","components/snippet-preview-modal.tsx"],"names":["MinusOutlined","props","ref","React","AntdIcon","Object","assign","icon","MinusOutlinedSvg","displayName","withDragSource","DragSource","ItemTypes","BOARD","beginDrag","children","className","rest","fromMenu","endDrag","_","monitor","didDrop","isDragging","id","getItem","connect","connectDragSource","dragSource","connectDragPreview","dragPreview","SnippetListMenuItem","this","SnippetListMenuWrapper","comp","Component","styled","div","SnippetListMenu","cx","reportTemplateList","map","item","key","FontColorsOutlined","name","SnippetDragPreview","layerStyles","position","pointerEvents","zIndex","left","top","width","height","getItemStyles","initialOffset","currentOffset","display","x","y","transform","WebkitTransform","DragLayer","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","element","document","elementFromPoint","canDrop","canMoveSnippet","style","SNIPPET","renderItem","attrs","p","border","compose","require","withDropTarget","DropTarget","drop","component","draggable","placeholderIndex","state","handleSnippetDrop","handleSnippetMove","snippetList","length","isOver","clientOffset","getClientOffset","hover","getPlaceHolderIndex","isOverSnippet","overSnippet","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","equals","setState","connectDropTarget","dropTarget","draggingItem","SnippetsContainer","atIndex","handleFindSnippet","snippet","index","newList","isPlaced","forEach","s","idx","push","onSnippetUpdate","droppedItem","nextIndex","uuid","insert","handleSnippetRemove","remove","handleSnippetUpdate","data","update","filter","indexOf","isPlaceHold","cardList","undefined","wrapperId","findSnippet","removeSnippet","onUpdate","defaultProps","withRouter","StyledCollapse","theme","primary","StyledTabs","secondary","whiteSpace","RowM","ReportTemplateBuilder","useTitle","useBreadcrumb","href","REPORT_TEMPLATE_LIST","params","match","useSnippetCategory","category","setCategory","useReportSnippets","setSnippetList","useState","setTemplateInfo","useReportPreview","isPreview","handlePreview","useHeaderContent","color","onClick","handleInputChange","field","evt","prev","target","value","handleUpdate","handleTabAdd","last","inc","pathOr","getNumberFromString","Rlast","sort","a","b","keys","handleTabRemove","targetKey","confirm","title","content","onOk","omit","onCancel","gutter","span","defaultActiveKey","expandIconPosition","expandIcon","isActive","PlusOutlined","Panel","header","onChange","type","activeKey","onEdit","e","action","TabPane","closable","tab","contentEditable","suppressContentEditableWarning","spellCheck","newTabName","innerHTML","mergeAll","CARD","hasClassName","nodes","find","n","isNil","includes","elem","parentNode","unshift","classList","contains","parentElement","snippetIndex","dataset","getDisplayName","marginTop","marginBottom","okText","cancelText","centered","autoFocusButton","okButtonProps","minWidth","marginRight","cancelButtonProps","modalDefaultProps","layout","space","flexbox","typography","background","ToolbarWrapper","Box","SnippetToolbar","tabIndex","onDelete","EditOutlined","DeleteOutlined","originalIndex","canDrag","Snippet","componentDidMount","getEmptyImage","handleRemove","console","log","handleEditModalVisible","editModalVisible","handleIndent","align","_onMouseOver","_onMouseOut","styles","mergeRight","isFocus","borderRadius","outlineColor","purple150","cursor","onMouseOver","onMouseOut","data-index","Children","child","cloneElement","noop","intBetween","min","max","val","Math","floor","createVerticalStrength","_buffer","point","h","w","buffer","defaultHorizontalStrength","defaultVerticalStrength","ScrollableComponent","WrappedComponent","ScrollingComponent","ctx","handleEvent","dragging","attached","attach","updateScrolling","throttle","container","box","coords","changedTouches","clientX","clientY","getCoords","scaleX","horizontalStrength","scaleY","verticalStrength","frame","startScrolling","trailing","useScroll","_initial","findDOMNode","wrappedInstance","addEventListener","window","body","clearMonitorSubscription","context","dragDropManager","getMonitor","subscribeToStateChange","handleMonitorChange","_remove","removeEventListener","stopScrolling","i","tick","strengthMultiplier","onScrollChange","scrollLeft","scrollTop","scrollWidth","scrollHeight","clientWidth","clientHeight","raf","detach","cancel","contextType","DndContext","hoist","withScroll","vStrength","ReactDndProvider","SnippetPreviewModal","visible","maskClosable","keyboard","footer","gt","__","mapIndexed"],"mappings":"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","file":"static/js/10.d395a752.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar MinusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M872 474H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"minus\", \"theme\": \"outlined\" };\nexport default MinusOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MinusOutlined = function MinusOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: MinusOutlinedSvg\n  }));\n};\n\nMinusOutlined.displayName = 'MinusOutlined';\nexport default React.forwardRef(MinusOutlined);","import React from 'react'\nimport { DragSource, ConnectDragSource } from 'react-dnd'\nimport styled from 'styled-components'\nimport ItemTypes from '@/constants/item-types'\n\ninterface Props {\n  connectDragSource: ConnectDragSource\n  children?: React.ReactNode\n  className?: string\n  id?: React.Key\n}\n\nconst withDragSource = DragSource(\n  ItemTypes.BOARD,\n  {\n    beginDrag(props: Props) {\n      const { children, className, ...rest } = props // eslint-disable-line\n      return {\n        ...rest,\n        fromMenu: true,\n      }\n    },\n    endDrag(_, monitor) {\n      if (!monitor.didDrop()) {\n        return\n      }\n    },\n    isDragging(props, monitor) {\n      const isDragging = props.id === monitor.getItem().id\n\n      return isDragging\n    },\n  },\n  (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging(),\n  })\n)\n\nclass SnippetListMenuItem extends React.Component<Props> {\n  render() {\n    const { connectDragSource, id, ...rest } = this.props\n\n    return (\n      <SnippetListMenuWrapper\n        {...rest}\n        ref={comp => connectDragSource(comp)}\n        id={`${id}`}>\n        <div className=\"snippet-drawer-menu__item--content\">\n          {this.props.children}\n        </div>\n      </SnippetListMenuWrapper>\n    )\n  }\n}\n\nconst SnippetListMenuWrapper = styled.div`\n  cursor: move;\n`\n\nexport default withDragSource(SnippetListMenuItem)\n","import React from 'react'\nimport cx from 'classnames'\nimport { FontColorsOutlined } from '@ant-design/icons'\nimport styled from 'styled-components'\nimport SnippetListMenuItem from '@/components/snippet-list-menu-item'\nimport reportTemplateList from '@/components/report-template-list'\n\ninterface Props {\n  className?: string\n  style?: React.CSSProperties\n}\n\nexport default class SnippetListMenu extends React.Component<Props> {\n  render() {\n    return (\n      <SnippetListMenuWrapper\n        className={cx('snippet-drawer-menu', this.props.className)}\n        {...this.props}>\n        <div className=\"snippet-drawer-menu__list\">\n          {reportTemplateList.map(item => (\n            <SnippetListMenuItem\n              {...item}\n              key={item.id}\n              className=\"snippet-drawer-menu__item py-3\">\n              <div className=\"flex items-center\">\n                <FontColorsOutlined className=\"mr-2\" />\n                {item.name}\n              </div>\n            </SnippetListMenuItem>\n          ))}\n        </div>\n      </SnippetListMenuWrapper>\n    )\n  }\n}\n\nconst SnippetListMenuWrapper = styled.div`\n  .snippet-drawer-menu {\n    &__list {\n      height: 100%;\n      overflow-y: auto;\n      overflow-x: hidden;\n\n      ::-webkit-scrollbar {\n        display: none;\n      }\n    }\n  }\n`\n","import React from 'react'\n// import { envStore } from '@/constants/env'\n\nexport default class SnippetDragPreview extends React.Component {\n  render() {\n    // const dropType = this.props.canDrop ? 'allow' : 'forbid'\n    // const url = `${envStore.publicUrl}/images/icon-drag-${dropType}-drop@2x.png`\n\n    return <div>{/* <img width={160} src={url} alt={url} /> */}</div>\n  }\n}\n","import React from 'react'\nimport { XYCoord, DragLayer } from 'react-dnd'\nimport { Identifier } from 'dnd-core'\nimport ItemTypes from '@/constants/item-types'\nimport SnippetDragPreview from '@/components/snippet-drag-preview'\nimport { canMoveSnippet } from './snippet-utils'\n\nconst layerStyles: React.CSSProperties = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 100,\n  left: 0,\n  top: 0,\n  width: '100%',\n  height: '100%',\n}\n\ninterface DragLayerProps {\n  item?: any\n  itemType?: Identifier | null\n  initialOffset?: XYCoord | null\n  currentOffset?: XYCoord | null\n  isDragging?: boolean\n}\n\nfunction getItemStyles(props: DragLayerProps) {\n  const { initialOffset, currentOffset } = props\n\n  if (!initialOffset || !currentOffset) {\n    return {\n      display: 'none',\n    }\n  }\n\n  const { x, y } = currentOffset\n\n  const transform = `translate(${x}px, ${y}px)`\n  return {\n    transform,\n    WebkitTransform: transform,\n  }\n}\n\nconst SnippetDragLayer: React.FC<DragLayerProps> = props => {\n  const { itemType, isDragging, currentOffset } = props\n\n  function renderItem({ canDrop }: { canDrop: boolean }) {\n    switch (itemType) {\n      case ItemTypes.BOARD:\n      case ItemTypes.SNIPPET:\n        return <SnippetDragPreview canDrop={canDrop} />\n      default:\n        return null\n    }\n  }\n\n  if (!isDragging) {\n    return null\n  }\n\n  if (!currentOffset) {\n    return null\n  }\n\n  const element = document.elementFromPoint(currentOffset.x, currentOffset.y)\n\n  let canDrop = false\n  if (element) {\n    canDrop = canMoveSnippet(element)\n  }\n\n  return (\n    <div className=\"report-template-builder__drag-layer\" style={layerStyles}>\n      <div style={getItemStyles(props)}>{renderItem({ canDrop })}</div>\n    </div>\n  )\n}\n\nexport default DragLayer(monitor => ({\n  item: monitor.getItem(),\n  itemType: monitor.getItemType(),\n  initialOffset: monitor.getInitialSourceClientOffset(),\n  currentOffset: monitor.getSourceClientOffset(),\n  isDragging: monitor.isDragging(),\n}))(SnippetDragLayer)\n","import styled from 'styled-components'\n\ntype Props = {\n  border?: string\n}\n\nexport default styled.div.attrs({\n  className: 'block-placeholder',\n})<Props>`\n  display: flex;\n  align-items: center;\n  padding-left: 25px;\n  height: 50px;\n  border: rgba(225, 225, 225, 0.9) 2px ${p => p.border || 'dashed'};\n  background-color: transparent;\n  margin-bottom: 35px;\n`\n","/**\n * NOTE:\n * nerver using index as list component key forever,\n * it will completely fucked up your page\n */\nimport React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { DropTarget, ConnectDropTarget, XYCoord } from 'react-dnd'\nimport { equals, length, remove, update, insert } from 'ramda'\nimport cx from 'classnames'\nimport { uuid } from '@/utils/webHelper'\nimport ItemTypes from '@/constants/item-types'\nimport Snippet from '@/components/snippet'\nimport BlockPlaceholder from '@/components/snippet-block-placeholder'\nimport { canMoveSnippet, getPlaceHolderIndex } from './snippet-utils'\nconst { compose } = require('ramda')\n\ninterface Props {\n  draggingItem: any\n  isOver?: boolean\n  draggable?: boolean\n  canDrop?: boolean\n  snippetList: any[]\n  connectDropTarget: ConnectDropTarget\n  onSnippetUpdate(data: any): void\n}\n\ninterface State {\n  placeholderIndex: number | null\n}\n\nconst withDropTarget = DropTarget<Props>(\n  ItemTypes.BOARD,\n  {\n    drop(_, monitor, component) {\n      if (!component || !component.props.draggable) {\n        return\n      }\n\n      const canDrop = monitor.canDrop()\n      let { placeholderIndex } = component.state\n      const item = monitor.getItem()\n\n      if (canDrop && item.fromMenu) {\n        component.handleSnippetDrop({ ...item, placeholderIndex })\n      }\n\n      if (canDrop && !item.fromMenu) {\n        component.handleSnippetMove(item.id, placeholderIndex)\n      }\n    },\n    canDrop({ snippetList }, monitor) {\n      // if there is no items in cards, and is over on the board currently,\n      // we can display a placeholder and drop the snippet item on the board.\n      if (snippetList.length === 0 && monitor.isOver()) {\n        return true\n      }\n\n      const clientOffset = monitor.getClientOffset() as XYCoord\n      const element = document.elementFromPoint(clientOffset.x, clientOffset.y)\n\n      return canMoveSnippet(element)\n    },\n    hover(_, monitor, component) {\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset() as XYCoord\n\n      let {\n        placeholderIndex,\n        isOverSnippet,\n        overSnippet,\n      } = getPlaceHolderIndex(clientOffset)\n\n      // 還要判斷是否是在最後一個 snippet 下面及 snippets-container 裡面\n      if (!isOverSnippet) {\n        return\n      }\n\n      const hoverBoundingRect = overSnippet.getBoundingClientRect()\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\n\n      if (hoverClientY < hoverMiddleY) {\n        placeholderIndex -= 1\n      }\n\n      if (\n        monitor.canDrop() &&\n        !equals(component.state.placeholderIndex, placeholderIndex)\n      ) {\n        component.setState({ placeholderIndex })\n      }\n    },\n  },\n  (connect, monitor) => ({\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    canDrop: monitor.canDrop(),\n    didDrop: monitor.didDrop(),\n    draggingItem: monitor.getItem(),\n  })\n)\n\nclass SnippetsContainer extends React.Component<Props, State> {\n  static defaultProps = {\n    draggable: true,\n    snippetList: [],\n  }\n\n  public state: State = {\n    placeholderIndex: null,\n  }\n\n  handleSnippetMove = (id: React.Key, atIndex: number) => {\n    const { snippetList } = this.props\n    const { snippet, index } = this.handleFindSnippet(id)\n\n    const newList = []\n    let isPlaced = false\n\n    snippetList.forEach((s, idx) => {\n      if (idx === index) {\n        return\n      }\n\n      if (!isPlaced && atIndex < idx) {\n        newList.push(snippet)\n        isPlaced = true\n      }\n\n      newList.push(s)\n\n      if (!isPlaced && atIndex === idx) {\n        newList.push(snippet)\n        isPlaced = true\n      }\n    })\n\n    // we dropped the only one snippet in the list so let it back to list.\n    if (length(snippetList) === 1 && !atIndex) {\n      newList.push(snippet)\n    }\n\n    this.props.onSnippetUpdate(newList)\n    this.setState({ placeholderIndex: null })\n  }\n\n  // prettier-ignore\n  handleSnippetDrop = (droppedItem: { [key: string]: any; placeholderIndex: number }) => {\n    const { placeholderIndex, ...item } = droppedItem\n\n    const snippetList = [...this.props.snippetList]\n\n    const nextIndex = placeholderIndex + 1\n    let newList: any[] = []\n\n    const snippet = {\n      ...item,\n      fromMenu: false,\n      id: `${item.id}__${uuid()}`,\n    }\n\n    if (length(snippetList) === 0) {\n      newList = insert(0, snippet)(snippetList)\n    }\n    if (length(snippetList) > 0) {\n      newList = insert(nextIndex, snippet)(snippetList)\n    }\n\n    this.props.onSnippetUpdate(newList)\n    this.setState({ placeholderIndex: null })\n  }\n\n  handleSnippetRemove = (index: number) => {\n    this.props.onSnippetUpdate(remove(index, 1)(this.props.snippetList))\n  }\n\n  handleSnippetUpdate = (data: any) => {\n    const { snippet, index } = this.handleFindSnippet(data.id)\n\n    this.props.onSnippetUpdate(\n      update(index, { ...snippet, ...data })(this.props.snippetList)\n    )\n  }\n\n  handleFindSnippet = (id: React.Key) => {\n    const { snippetList } = this.props\n    const snippet = snippetList.filter(x => x.id === id)[0]\n\n    return {\n      snippet,\n      index: snippetList.indexOf(snippet),\n    }\n  }\n\n  render() {\n    const {\n      connectDropTarget,\n      isOver,\n      canDrop,\n      snippetList,\n      draggingItem,\n      draggable, // 模版是否可拖曳，編輯模式下才會是 true\n    } = this.props\n\n    const { placeholderIndex } = this.state\n\n    let isPlaceHold = false\n    const cardList = []\n\n    snippetList.forEach((item, idx) => {\n      if (isOver && canDrop) {\n        isPlaceHold = false\n        if (idx === 0 && placeholderIndex === -1) {\n          cardList.push(<BlockPlaceholder key={`block-placeholder-${idx}`} />)\n        } else if ((placeholderIndex as any) > idx) {\n          isPlaceHold = true\n        }\n      }\n\n      if (item !== undefined) {\n        cardList.push(\n          <Snippet\n            key={item.id}\n            id={item.id}\n            wrapperId={`snippet-wrapper-${idx}`}\n            index={idx}\n            draggable={draggable}\n            findSnippet={this.handleFindSnippet}\n            removeSnippet={this.handleSnippetRemove}>\n            <item.Component\n              id={item.id}\n              className={item.id}\n              item={item}\n              index={idx}\n              onUpdate={this.handleSnippetUpdate}\n            />\n          </Snippet>\n        )\n      }\n\n      if (isOver && canDrop && placeholderIndex === idx) {\n        cardList.push(<BlockPlaceholder key={`block-placeholder-${idx}`} />)\n      }\n    })\n\n    // if placeholder index is greater than array.length, display placeholder as last\n    if (isPlaceHold) {\n      cardList.push(<BlockPlaceholder key={'block-placeholder-bottom'} />)\n    }\n\n    // if there is no items in cards currently, display a placeholder anyway\n    if (isOver && canDrop && snippetList.length === 0) {\n      cardList.push(<BlockPlaceholder key={'block-placeholder-zero'} />)\n    }\n\n    // if just has only one item in list and currently dragged, display a placeholder\n    if (isOver && canDrop && snippetList.length === 1) {\n      if (!draggingItem.fromMenu) {\n        cardList.push(<BlockPlaceholder key={'block-placeholder-zero'} />)\n      }\n    }\n\n    return connectDropTarget(\n      <div\n        className={cx('report-template-builder__contentarea', {\n          'report-template-builder__contentarea--fixed-layout': !draggable,\n        })}>\n        {cardList}\n      </div>\n    )\n  }\n}\n\nexport default compose(withRouter, withDropTarget)(SnippetsContainer)\n","import { Collapse, Tabs } from 'antd'\nimport styled from 'styled-components'\n\nconst StyledCollapse = styled(Collapse)`\n  &.ant-collapse {\n    border-radius: 16px;\n    border-bottom: none;\n\n    > .ant-collapse-item > .ant-collapse-header {\n      background: rgb(207, 224, 245);\n      color: ${p => p.theme.primary};\n    }\n\n    > .ant-collapse-item:first-child > .ant-collapse-header {\n      border-top-left-radius: 16px;\n      border-top-right-radius: 16px;\n    }\n\n    > .ant-collapse-item:last-child {\n      border-bottom: none;\n    }\n\n    > .ant-collapse-item:last-child > .ant-collapse-content {\n      border-bottom-left-radius: 16px;\n      border-bottom-right-radius: 16px;\n    }\n\n    > .ant-collapse-item.ant-collapse-item-active:last-child {\n      border-bottom: 1px solid #d9d9d9;\n    }\n\n    > .ant-collapse-item:not(.ant-collapse-item-active):last-child\n      > .ant-collapse-header {\n      border-bottom-left-radius: 16px;\n      border-bottom-right-radius: 16px;\n    }\n  }\n`\n\nconst StyledTabs = styled(Tabs)`\n  &.ant-tabs {\n    .ant-tabs-tab {\n      display: flex;\n      align-items: center;\n      padding: 10px 24px !important;\n      margin-right: 4px !important;\n      border-color: rgb(199, 214, 238) !important;\n      background: rgb(199, 214, 238) !important;\n      border-top-left-radius: 12px !important;\n      border-top-right-radius: 12px !important;\n      color: ${p => p.theme.primary};\n    }\n\n    .ant-tabs-tab-active {\n      border-color: #fff !important;\n      background: #fff !important;\n    }\n\n    .ant-tabs-tab .anticon {\n      color: ${p => p.theme.primary};\n    }\n\n    > .ant-tabs-nav .ant-tabs-nav-add,\n    .ant-tabs > div > .ant-tabs-nav .ant-tabs-nav-add {\n      color: ${p => p.theme.primary};\n      border-color: rgb(199, 214, 238);\n      background: rgb(199, 214, 238);\n    }\n\n    .ant-tabs-tab-btn:focus,\n    .ant-tabs-tab-remove:focus,\n    .ant-tabs-tab-btn:active,\n    .ant-tabs-tab-remove:active,\n    .ant-tabs-tab.ant-tabs-tab-active .ant-tabs-tab-btn {\n      color: ${p => p.theme.secondary} !important;\n    }\n  }\n\n  &.ant-tabs-top > .ant-tabs-nav,\n  &.ant-tabs-top > div > .ant-tabs-nav {\n    margin-bottom: 0;\n  }\n`\n\nexport { StyledCollapse as Collapse, StyledTabs as Tabs }\n","import React from 'react'\nimport { Row, Col } from 'antd'\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons'\nimport { RouteComponentProps } from 'react-router-dom'\nimport {\n  pathOr,\n  keys,\n  filter,\n  map,\n  mergeAll,\n  omit,\n  sort,\n  last as Rlast,\n  inc,\n} from 'ramda'\nimport styled from 'styled-components'\nimport { Page } from '@/components/layout'\nimport Button from '@/components/button'\nimport Input from '@/components/input'\nimport useTitle from '@/hooks/useTitle'\nimport { useBreadcrumb, useHeaderContent } from '@/hooks/useApp'\nimport {\n  useSnippetCategory,\n  useReportSnippets,\n  useReportPreview,\n} from '@/hooks/useReportTemplate'\nimport { REPORT_TEMPLATE_LIST } from '@/constants/routes'\nimport { confirm } from '@/utils/message'\nimport { getNumberFromString } from '@/utils/webHelper'\nimport ReactDndProvider from '@/components/snippet-scrollable-container'\nimport SnippetListMenu from '@/components/snippet-list-menu'\nimport SnippetDragLayer from '@/components/snippet-drag-layer'\nimport SnippetsContainer from '@/components/snippets-container'\nimport SnippetPreviewModal from '@/components/snippet-preview-modal'\nimport { Collapse, Tabs } from './components'\nconst { compose } = require('ramda')\n\ninterface Props extends RouteComponentProps<{ id: string }> {}\n\nfunction ReportTemplateBuilder(props: Props) {\n  useTitle('結構式報告模版編輯')\n\n  useBreadcrumb([\n    { href: REPORT_TEMPLATE_LIST, name: '結構式報告' },\n    { name: '結構式報告模版編輯' },\n  ])\n\n  const { params } = props.match\n\n  const [category, setCategory] = useSnippetCategory()\n  const [snippetList, setSnippetList] = useReportSnippets(params.id)\n\n  const [, setTemplateInfo] = React.useState({})\n\n  // React.useEffect(() => {\n  //   console.log(\n  //     JSON.stringify(\n  //       compose(\n  //         mergeAll,\n  //         map((key: string) => ({\n  //           [key]: compose(\n  //             map(omit(['Component'])),\n  //             pathOr([], [key])\n  //           )(snippetList),\n  //         })),\n  //         keys\n  //       )(snippetList)\n  //     )\n  //   )\n  // }, [JSON.stringify(snippetList)]) // eslint-disable-line\n\n  const [isPreview, handlePreview] = useReportPreview()\n\n  const handleSave = () => {}\n\n  useHeaderContent(\n    <div className=\"inline-flex\">\n      <Button\n        color=\"outline\"\n        className=\"bg-transparent text-white border-white\">\n        發佈\n      </Button>\n      <Button\n        color=\"outline\"\n        className=\"ml-6 bg-transparent text-white border-white\"\n        onClick={handleSave}>\n        儲存\n      </Button>\n      <Button\n        color=\"outline\"\n        className=\"ml-6 bg-transparent text-white border-white\"\n        onClick={handlePreview}>\n        預覽\n      </Button>\n    </div>\n  )\n\n  const handleInputChange = (field: string) => (\n    evt: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setTemplateInfo(prev => ({ ...prev, [field]: evt.target.value }))\n  }\n\n  const handleUpdate = (data: any[]) => {\n    setSnippetList(prev => ({ ...prev, [category]: data }))\n  }\n\n  const handleTabChange = (activeKey: string) => {\n    setCategory(activeKey)\n  }\n\n  const handleEdit = (\n    e:\n      | string\n      | React.MouseEvent<Element, MouseEvent>\n      | React.KeyboardEvent<Element>,\n    action: 'add' | 'remove'\n  ) => {\n    const handler = action === 'add' ? handleTabAdd : handleTabRemove\n\n    handler(e as string)\n  }\n\n  const handleTabAdd = () => {\n    const last = compose(\n      inc,\n      pathOr(0, []),\n      getNumberFromString,\n      Rlast,\n      sort((a: any, b: any) => a - b),\n      keys\n    )(snippetList)\n\n    setSnippetList(prev => ({ ...prev, [`新標籤頁${last}`]: [] }))\n    setCategory(`新標籤頁${last}`)\n  }\n\n  const handleTabRemove = (targetKey: string) => {\n    confirm({\n      title: '確認要刪除此頁籤嗎？',\n      content: '刪除會連同模版資料一起刪除，確認繼續？',\n      onOk: () => {\n        setSnippetList(prev => omit([targetKey], prev))\n\n        if (category === targetKey) {\n          setCategory(\n            compose(\n              Rlast,\n              filter((key: string) => key !== targetKey),\n              keys\n            )(snippetList)\n          )\n        }\n      },\n    })\n  }\n\n  const handleTabNameChange = (targetKey: string) => (\n    evt: React.FocusEvent<HTMLSpanElement>\n  ) => {\n    const newTabName = evt.target.innerHTML\n\n    setSnippetList(prev =>\n      compose(\n        mergeAll,\n        map((key: string) => ({\n          [key === targetKey ? newTabName : key]: prev[key],\n        })),\n        keys\n      )(prev)\n    )\n    setCategory(newTabName)\n  }\n\n  return (\n    <ReactDndProvider>\n      {isPreview && (\n        <SnippetPreviewModal\n          snippetList={snippetList}\n          onCancel={handlePreview}\n        />\n      )}\n      <SnippetDragLayer />\n      <Page>\n        <RowM gutter={48} className=\"pt-2\">\n          <Col span={5}>\n            <Collapse\n              defaultActiveKey={[1, 2]}\n              expandIconPosition=\"right\"\n              className=\"shadow-2xl\"\n              expandIcon={({ isActive }) =>\n                isActive ? <MinusOutlined /> : <PlusOutlined />\n              }>\n              <Collapse.Panel header=\"模版資訊\" key={1}>\n                <Row className=\"mb-2 text-sm text-primary\">\n                  <Col span={24} className=\"mb-3\">\n                    <div className=\"inline-block\" css={{ width: 60 }}>\n                      名稱:\n                    </div>\n                    <Input\n                      className=\"w-2/3\"\n                      onChange={handleInputChange('name')}\n                    />\n                  </Col>\n                  <Col span={24} className=\"my-3\">\n                    <div className=\"inline-block\" css={{ width: 60 }}>\n                      描述:\n                    </div>\n                    <Input\n                      className=\"w-2/3\"\n                      onChange={handleInputChange('description')}\n                    />\n                  </Col>\n                  <Col span={24} className=\"my-3\">\n                    <div className=\"inline-block\" css={{ width: 60 }}>\n                      創作者:\n                    </div>\n                    <Input\n                      className=\"w-2/3\"\n                      onChange={handleInputChange('author')}\n                    />\n                  </Col>\n                </Row>\n              </Collapse.Panel>\n              <Collapse.Panel header=\"工具列\" key={2}>\n                <Row>\n                  <Col span={24}>\n                    <SnippetListMenu className=\"text-primary\" />\n                  </Col>\n                </Row>\n              </Collapse.Panel>\n            </Collapse>\n          </Col>\n          <Tabs\n            type=\"editable-card\"\n            activeKey={category}\n            onChange={handleTabChange}\n            onEdit={handleEdit}\n            className=\"flex-1\">\n            {compose(\n              map((key: string) => (\n                <Tabs.TabPane\n                  closable\n                  key={key}\n                  tab={\n                    <span\n                      contentEditable\n                      suppressContentEditableWarning\n                      spellCheck={false}\n                      className=\"outline-none\"\n                      css={{ whiteSpace: 'nowrap' }}\n                      onChange={handleTabNameChange(key)}\n                      // onBlur={handleTabNameChange(key)}\n                    >\n                      {key}\n                    </span>\n                  }>\n                  <Col\n                    span={19}\n                    className=\"report-template-builder__main-content\">\n                    <SnippetsContainer\n                      draggable={!isPreview}\n                      snippetList={snippetList[key]}\n                      onSnippetUpdate={handleUpdate}\n                    />\n                  </Col>\n                </Tabs.TabPane>\n              )),\n              keys\n            )(snippetList)}\n          </Tabs>\n        </RowM>\n      </Page>\n    </ReactDndProvider>\n  )\n}\n\nconst RowM = styled(Row)`\n  position: relative;\n\n  .report-template-builder {\n    &__main-content {\n      min-height: 371.25mm;\n      margin: 0 auto;\n      padding: 16px;\n      box-sizing: border-box;\n      max-width: 100%;\n      background: #fff;\n      border-top-right-radius: 16px;\n      border-bottom-left-radius: 16px;\n      border-bottom-right-radius: 16px;\n    }\n\n    &__contentarea {\n      min-height: 348.75mm;\n    }\n\n    &__contentarea--fixed-layout {\n      min-height: auto;\n    }\n\n    &__snippet-toolbar {\n      visibility: hidden;\n    }\n  }\n\n  .ui-draggable {\n    &:focus,\n    &:active {\n      outline: 0;\n\n      .course-builder__snippet-toolbar {\n        visibility: visible;\n        opacity: 1;\n        transition: visibility 0s, opacity 0.3s, max-height 0.6s linear;\n      }\n    }\n  }\n`\n\nexport default ReportTemplateBuilder\n","export default {\n  CARD: 'card',\n  BOARD: 'board',\n  SNIPPET: 'snippet',\n}\n","import { includes } from 'ramda'\nimport { isNil } from '@/utils/webHelper'\n\n/* prettier-ignore */\nconst REPORT_TEMPLATE_BUILDER_CLASSNAME = 'report-template-builder__main-content'\nconst UI_DRAGGABLE_CLASSNAME = 'ui-draggable'\n\nconst hasClassName = (nodes, className) => {\n  return nodes.find(\n    n => !isNil(n.className) && includes(className)(n.className)\n  )\n}\n\nexport function canMoveSnippet(\n  element,\n  className = REPORT_TEMPLATE_BUILDER_CLASSNAME\n) {\n  let elem = element\n\n  const nodes = []\n  nodes.push(elem)\n\n  while (elem.parentNode) {\n    nodes.unshift(elem.parentNode)\n    elem = elem.parentNode\n  }\n\n  if (\n    hasClassName(nodes, 'report-template-builder-contentarea--fixed-layout') ||\n    hasClassName(nodes, 'snippet-drawer-menu')\n  ) {\n    return false\n  }\n  if (\n    hasClassName(nodes, className) ||\n    hasClassName(nodes, UI_DRAGGABLE_CLASSNAME)\n  ) {\n    return true\n  }\n\n  return false\n}\n\nexport function findSnippet(element, className = UI_DRAGGABLE_CLASSNAME) {\n  if (element.classList.contains(className)) {\n    return element\n  }\n  return element.parentElement && findSnippet(element.parentElement, className)\n}\n\nexport function getPlaceHolderIndex(clientOffset) {\n  const hoverElement = document.elementFromPoint(clientOffset.x, clientOffset.y)\n\n  // find ui-draggable classname\n  const overSnippet = findSnippet(hoverElement)\n\n  const snippetIndex = overSnippet && overSnippet.dataset.index\n  const placeholderIndex = overSnippet ? +overSnippet.dataset.index : -1\n\n  const isOverSnippet = !isNil(snippetIndex)\n\n  return {\n    overSnippet,\n    placeholderIndex,\n    isOverSnippet: isOverSnippet,\n  }\n}\n\nexport default function getDisplayName(Component) {\n  return (\n    Component.displayName ||\n    Component.name ||\n    (typeof Component === 'string' && Component.length > 0\n      ? Component\n      : 'Unknown')\n  )\n}\n","import React from 'react'\nimport { Modal } from 'antd'\nimport { ModalProps, ModalFuncProps } from 'antd/lib/modal'\n\nexport const modalDefaultProps = (\n  content?: React.ReactNode,\n  props?: ModalProps\n): ModalFuncProps => ({\n  content: (\n    <div\n      className=\"text-primary font-medium\"\n      css={{ marginTop: 16, marginBottom: 30 }}>\n      {content}\n    </div>\n  ),\n  icon: null,\n  width: 440,\n  okText: '刪除',\n  cancelText: '取消',\n  centered: true,\n  // maskStyle: {\n  //   background: theme.modal.maskDarken,\n  // },\n  autoFocusButton: null,\n  okButtonProps: {\n    className: 'c-btn is--danger',\n    style: { minWidth: 80, marginRight: 24 },\n  },\n  cancelButtonProps: {\n    className: 'c-btn is--outline mr-0 float-right',\n    style: { minWidth: 80 },\n  },\n  ...props,\n})\n\nexport const confirm = ({\n  onOk,\n  onCancel,\n  content = '刪除後將無法還原，確認繼續？',\n  ...props\n}: ModalFuncProps) => {\n  Modal.confirm({\n    ...modalDefaultProps(content),\n    ...props,\n    onOk: () => {\n      if (onOk) {\n        onOk()\n      }\n    },\n    onCancel() {\n      if (onCancel) {\n        onCancel()\n      }\n    },\n  })\n}\n","import styled from 'styled-components'\nimport {\n  position,\n  color,\n  layout,\n  space,\n  flexbox,\n  background,\n  typography,\n  ColorProps,\n  border,\n  TypographyProps,\n  LayoutProps,\n  SpaceProps,\n  FlexboxProps,\n  BorderProps,\n  PositionProps,\n  BackgroundProps,\n} from 'styled-system'\n\nexport default styled.div<\n  ColorProps &\n    TypographyProps &\n    LayoutProps &\n    SpaceProps &\n    FlexboxProps &\n    BorderProps &\n    PositionProps &\n    BackgroundProps\n>`\n  ${color};\n  ${layout};\n  ${space};\n  ${flexbox};\n  ${typography};\n  ${border};\n  ${position};\n  ${background};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  // RightOutlined,\n  // LeftOutlined,\n} from '@ant-design/icons'\nimport cx from 'classnames'\nimport { Tooltip } from 'antd'\nimport Box from '@/components/box'\n\ntype Props = {\n  tabIndex: number\n  onEdit: () => void\n  onDelete: () => void\n}\n\nconst ToolbarWrapper = styled(Box)`\n  position: absolute;\n  top: 16px;\n  right: 24px;\n  visibility: hidden;\n  transition: visibility 0s, opacity 0.3s, max-height 0.6s linear;\n  opacity: 0;\n  z-index: 1;\n\n  &.is--over {\n    visibility: visible;\n    transition: visibility 0s, opacity 0.3s, max-height 0.6s linear;\n    opacity: 0.8;\n  }\n`\n\nexport default function SnippetToolbar({ tabIndex, onEdit, onDelete }: Props) {\n  return (\n    <ToolbarWrapper\n      className={cx('text-primary', { 'is--over': tabIndex === 1 })}>\n      {/* <Tooltip title=\"向左縮排\">\n        <LeftOutlined className=\"mr-2 cursor-pointer\" />\n      </Tooltip>\n      <Tooltip title=\"向右縮排\">\n        <RightOutlined className=\"mr-2 cursor-pointer\" />\n      </Tooltip> */}\n      <Tooltip title=\"編輯\">\n        <EditOutlined className=\"mr-2 cursor-pointer\" onClick={onEdit} />\n      </Tooltip>\n      <Tooltip title=\"刪除\">\n        <DeleteOutlined className=\"cursor-pointer\" onClick={onDelete} />\n      </Tooltip>\n    </ToolbarWrapper>\n  )\n}\n","import React from 'react'\nimport { DragSource, ConnectDragPreview, ConnectDragSource } from 'react-dnd'\nimport { getEmptyImage } from 'react-dnd-html5-backend'\nimport { mergeRight } from 'ramda'\nimport cx from 'classnames'\nimport { confirm } from '@/utils/message'\nimport theme from '@/theme'\nimport ItemTypes from '@/constants/item-types'\nimport SnippetToolbar from './snippet-toolbar'\n\ntype Props = {\n  id?: React.Key\n  wrapperId?: string\n  className?: string\n  style?: React.CSSProperties\n  index?: number\n  isDragging?: boolean\n  draggable?: boolean\n  fromMenu?: boolean\n  connectDragPreview: ConnectDragPreview\n  connectDragSource: ConnectDragSource\n  children?: React.ReactNode\n  findSnippet?(id: React.Key): any\n  removeSnippet?(index: number): void\n}\n\ntype State = {\n  top: number\n  tabIndex: number\n  editModalVisible: boolean\n}\n\nconst withDragSource = DragSource(\n  ItemTypes.BOARD,\n  {\n    beginDrag(props: Props) {\n      return {\n        ...props,\n        fromMenu: false,\n        originalIndex: (props as any).findSnippet(props.id).index,\n      }\n    },\n    canDrag(props: Props) {\n      return !!(props.draggable && !props.fromMenu)\n    },\n  },\n  (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging(),\n  })\n)\n\nclass Snippet extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      top: 0,\n      tabIndex: -1,\n      editModalVisible: false,\n    }\n  }\n\n  componentDidMount = () => {\n    const { connectDragPreview } = this.props\n    if (connectDragPreview) {\n      connectDragPreview(getEmptyImage() /* { anchorX: 0.2, anchorY: 0.1 } */)\n    }\n  }\n\n  handleRemove = () => {\n    confirm({\n      content: '刪除後將無法還原，確認繼續？',\n      title: '確認要刪除這個模版?',\n      onOk: () => {\n        ;(this.props as any).removeSnippet(this.props.index)\n      },\n      onCancel() {\n        console.log('Cancel')\n      },\n    })\n  }\n\n  handleEditModalVisible = () => {\n    this.setState(prev => ({ editModalVisible: !prev.editModalVisible }))\n  }\n\n  handleIndent = (align: 'left' | 'right') => () => {}\n\n  _onMouseOver = () => {\n    this.setState({ tabIndex: 1 })\n  }\n\n  _onMouseOut = () => {\n    this.setState({ tabIndex: -1 })\n  }\n\n  render() {\n    const {\n      props: {\n        connectDragSource,\n        connectDragPreview,\n        isDragging,\n        wrapperId,\n        index,\n        draggable,\n        style = {},\n        className = 'mb-3',\n      },\n      state: { tabIndex, editModalVisible },\n    } = this\n\n    const styles = mergeRight(\n      getItemStyles({ isDragging, tabIndex, draggable }),\n      style\n    )\n\n    return connectDragSource(\n      connectDragPreview(\n        <div\n          id={wrapperId}\n          style={styles}\n          className={cx(\n            'ui-sortable',\n            { 'ui-draggable': draggable },\n            className\n          )}\n          tabIndex={tabIndex}\n          onMouseOver={this._onMouseOver}\n          onMouseOut={this._onMouseOut}\n          data-index={index}>\n          {draggable && (\n            <SnippetToolbar\n              tabIndex={tabIndex}\n              onEdit={this.handleEditModalVisible}\n              onDelete={this.handleRemove}\n            />\n          )}\n          {React.Children.map(this.props.children, child =>\n            React.cloneElement(child as any, {\n              editModalVisible,\n              handleEditModalVisible: this.handleEditModalVisible,\n            })\n          )}\n        </div>\n      )\n    )\n  }\n}\n\nfunction getItemStyles(props: Partial<Props & State>): React.CSSProperties {\n  const { isDragging, tabIndex, draggable } = props\n\n  const isFocus = tabIndex === 1\n\n  return {\n    ...(isFocus ? { borderRadius: 3 } : {}),\n    ...(draggable\n      ? { border: `1px dashed ${draggable ? '#e7e7e7' : 'transparent'}` }\n      : {\n          outlineColor: isFocus ? theme.purple150 : 'transparent',\n        }),\n    cursor: 'default',\n    position: 'relative',\n    display: isDragging ? 'none' : 'block',\n  }\n}\n\nexport default withDragSource(Snippet)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { findDOMNode } from 'react-dom'\nimport { DndContext } from 'react-dnd'\nimport throttle from 'lodash.throttle'\nimport raf from 'raf'\nimport hoist from 'hoist-non-react-statics'\nimport getDisplayName from './snippet-utils'\n\nfunction noop() {}\n\nfunction intBetween(min, max, val) {\n  return Math.floor(Math.min(max, Math.max(min, val)))\n}\n\nfunction getCoords(evt) {\n  if (evt.type === 'touchmove') {\n    return {\n      x: evt.changedTouches[0].clientX,\n      y: evt.changedTouches[0].clientY,\n    }\n  }\n\n  return { x: evt.clientX, y: evt.clientY }\n}\n\nconst DEFAULT_BUFFER = 150\n\nexport function createHorizontalStrength(_buffer) {\n  return function defaultHorizontalStrength({ x, w, y, h }, point) {\n    const buffer = Math.min(w / 2, _buffer)\n    const inRange = point.x >= x && point.x <= x + w\n    const inBox = inRange && point.y >= y && point.y <= y + h\n\n    if (inBox) {\n      if (point.x < x + buffer) {\n        return (point.x - x - buffer) / buffer\n      } else if (point.x > x + w - buffer) {\n        return -(x + w - point.x - buffer) / buffer\n      }\n    }\n\n    return 0\n  }\n}\n\nexport function createVerticalStrength(_buffer) {\n  return function defaultVerticalStrength({ y, h, x, w }, point) {\n    const buffer = Math.min(h / 2, _buffer)\n    const inRange = point.y >= y && point.y <= y + h\n    const inBox = inRange && point.x >= x && point.x <= x + w\n\n    if (inBox) {\n      if (point.y < y + buffer) {\n        return (point.y - y - buffer) / buffer\n      } else if (point.y > y + h - buffer) {\n        return -(y + h - point.y - buffer) / buffer\n      }\n    }\n\n    return 0\n  }\n}\n\nexport const defaultHorizontalStrength = createHorizontalStrength(\n  DEFAULT_BUFFER\n)\n\nexport const defaultVerticalStrength = createVerticalStrength(DEFAULT_BUFFER)\n\nexport default function createScrollingComponent(WrappedComponent) {\n  class ScrollingComponent extends React.Component {\n    static displayName = `Scrolling(${getDisplayName(WrappedComponent)})`\n\n    static propTypes = {\n      onScrollChange: PropTypes.func,\n      verticalStrength: PropTypes.func,\n      horizontalStrength: PropTypes.func,\n      strengthMultiplier: PropTypes.number,\n    }\n\n    static defaultProps = {\n      useScroll: true,\n      onScrollChange: noop,\n      verticalStrength: defaultVerticalStrength,\n      horizontalStrength: defaultHorizontalStrength,\n      strengthMultiplier: 30,\n    }\n\n    static contextType = DndContext\n\n    constructor(props, ctx) {\n      super(props, ctx)\n\n      this.scaleX = 0\n      this.scaleY = 0\n      this.frame = null\n\n      this.attached = false\n      this.dragging = false\n    }\n\n    componentDidMount() {\n      if (this.props.useScroll) {\n        this._initial()\n      }\n    }\n\n    _initial() {\n      // window.document.body.addEventListener('dragover', this.handleEvent);\n      this.container = findDOMNode(this.wrappedInstance)\n      this.container.addEventListener('dragover', this.handleEvent)\n      // touchmove events don't seem to work across siblings, so we unfortunately\n      // have to attach the listeners to the body\n      window.document.body.addEventListener('touchmove', this.handleEvent)\n\n      this.clearMonitorSubscription = this.context.dragDropManager\n        .getMonitor()\n        .subscribeToStateChange(() => this.handleMonitorChange())\n    }\n\n    componentWillUnmount() {\n      if (this.props.useScroll) {\n        this._remove()\n      }\n    }\n\n    _remove() {\n      // window.document.body.removeEventListener('dragover', this.handleEvent);\n      this.container.removeEventListener('dragover', this.handleEvent)\n      window.document.body.removeEventListener('touchmove', this.handleEvent)\n      this.clearMonitorSubscription()\n      this.stopScrolling()\n    }\n\n    handleEvent = evt => {\n      if (this.dragging && !this.attached) {\n        this.attach()\n        this.updateScrolling(evt)\n      }\n    }\n\n    handleMonitorChange() {\n      const isDragging = this.context.dragDropManager.getMonitor().isDragging()\n\n      if (!this.dragging && isDragging) {\n        this.dragging = true\n      } else if (this.dragging && !isDragging) {\n        this.dragging = false\n        this.stopScrolling()\n      }\n    }\n\n    attach() {\n      this.attached = true\n      window.document.body.addEventListener('dragover', this.updateScrolling)\n      window.document.body.addEventListener('touchmove', this.updateScrolling)\n    }\n\n    detach() {\n      this.attached = false\n      window.document.body.removeEventListener('dragover', this.updateScrolling)\n      window.document.body.removeEventListener(\n        'touchmove',\n        this.updateScrolling\n      )\n    }\n\n    // Update scaleX and scaleY every 100ms or so\n    // and start scrolling if necessary\n    updateScrolling = throttle(\n      evt => {\n        const {\n          left: x,\n          top: y,\n          width: w,\n          height: h,\n        } = this.container.getBoundingClientRect()\n        const box = { x, y, w, h }\n        const coords = getCoords(evt)\n\n        // calculate strength\n        this.scaleX = this.props.horizontalStrength(box, coords)\n        this.scaleY = this.props.verticalStrength(box, coords)\n\n        // start scrolling if we need to\n        if (!this.frame && (this.scaleX || this.scaleY)) {\n          this.startScrolling()\n        }\n      },\n      100,\n      { trailing: false }\n    )\n\n    startScrolling() {\n      let i = 0\n      const tick = () => {\n        const { scaleX, scaleY, container } = this\n        const { strengthMultiplier, onScrollChange } = this.props\n\n        // stop scrolling if there's nothing to do\n        if (strengthMultiplier === 0 || scaleX + scaleY === 0) {\n          this.stopScrolling()\n          return\n        }\n\n        // there's a bug in safari where it seems like we can't get\n        // mousemove events from a container that also emits a scroll\n        // event that same frame. So we double the strengthMultiplier and only adjust\n        // the scroll position at 30fps\n        if (i++ % 2) {\n          const {\n            scrollLeft,\n            scrollTop,\n            scrollWidth,\n            scrollHeight,\n            clientWidth,\n            clientHeight,\n          } = container\n\n          const newLeft = scaleX\n            ? (container.scrollLeft = intBetween(\n                0,\n                scrollWidth - clientWidth,\n                scrollLeft + scaleX * strengthMultiplier\n              ))\n            : scrollLeft\n\n          const newTop = scaleY\n            ? (container.scrollTop = intBetween(\n                0,\n                scrollHeight - clientHeight,\n                scrollTop + scaleY * strengthMultiplier\n              ))\n            : scrollTop\n\n          onScrollChange(newLeft, newTop)\n        }\n        this.frame = raf(tick)\n      }\n\n      tick()\n    }\n\n    stopScrolling() {\n      this.detach()\n      this.scaleX = 0\n      this.scaleY = 0\n\n      if (this.frame) {\n        raf.cancel(this.frame)\n        this.frame = null\n      }\n    }\n\n    render() {\n      const {\n        // not passing down these props\n        strengthMultiplier,\n        verticalStrength,\n        horizontalStrength,\n        onScrollChange,\n        ...props\n      } = this.props\n\n      return (\n        <WrappedComponent\n          ref={ref => {\n            this.wrappedInstance = ref\n          }}\n          {...props}\n        />\n      )\n    }\n  }\n\n  return hoist(ScrollingComponent, WrappedComponent)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport cx from 'classnames'\nimport withScroll, { createVerticalStrength } from './withScroll'\n\ninterface Props {\n  className?: string\n  useScroll?: boolean\n}\n\nconst DndScrollableElement = styled.div`\n  height: 100vh;\n  padding-top: 0;\n  overflow-y: scroll;\n\n  &.is--preview {\n    height: auto;\n  }\n`\n\nconst ScrollableComponent = withScroll(DndScrollableElement)\n\nconst vStrength = createVerticalStrength(150)\n\nexport default class ReactDndProvider extends React.Component<Props> {\n  static defaultProps = {\n    useScroll: true,\n  }\n\n  render() {\n    const { className, useScroll } = this.props\n\n    return (\n      <ScrollableComponent\n        useScroll={useScroll}\n        verticalStrength={vStrength}\n        strengthMultiplier={100}\n        className={cx('report-template-builder', className)}>\n        {this.props.children}\n      </ScrollableComponent>\n    )\n  }\n}\n","import React from 'react'\nimport { ModalProps } from 'antd/lib/modal'\nimport { length, __, gt, keys, map, pathOr } from 'ramda'\nimport Modal from '@/components/modal'\nimport Snippet from '@/components/snippet'\nimport { mapIndexed } from '@/utils/webHelper'\nconst { compose } = require('ramda')\n\ninterface Props extends ModalProps {\n  snippetList?: { [key: string]: any[] }\n}\n\nexport default function SnippetPreviewModal({ onCancel, snippetList }: Props) {\n  return (\n    <Modal\n      visible\n      style={{ top: 30 }}\n      maskClosable={false}\n      className=\"ant-modal-header--border-none\"\n      keyboard={false}\n      width=\"85%\"\n      onCancel={onCancel}\n      footer={false}>\n      {compose(\n        map((key: string) => (\n          <div key={key}>\n            {compose(gt(__, 0), length, pathOr([], [key]))(snippetList) && (\n              <h2 className=\"mb-0\">{key}</h2>\n            )}\n            {compose(\n              mapIndexed((item: any, idx: number) => (\n                <Snippet key={item.id} draggable={false}>\n                  <item.Component\n                    id={item.id}\n                    className={item.id}\n                    item={item}\n                    index={idx}\n                  />\n                </Snippet>\n              )),\n              pathOr([], [key])\n            )(snippetList)}\n          </div>\n        )),\n        keys\n      )(snippetList)}\n    </Modal>\n  )\n}\n"],"sourceRoot":""}