{"version":3,"sources":["components/query-table.tsx","services/yellowCard.ts","containers/yellow-card-inquiry/yellow-card-inquiry.tsx"],"names":["QueryTable","columns","className","pageNum","dataSource","onChange","loading","rowSelection","pagination","props","paginationConfig","merge","current","pageSize","total","showSizeChanger","rowKey","content","compose","require","useYellowCards","React","useState","totalPages","data","setData","refetch","values","_data","map","_","id","uuid","workNo","faker","lorem","slug","HHISNUM","company","catchPhrase","patholInfo","name","firstName","age","random","number","sex","reportTime","moment","reportTimeStr","format","times","identity","length","Math","floor","locale","formItemLayout","createFormItemLayout","YellowCardInquiry","useTitle","useBreadcrumb","useForm","form","style","height","justify","md","xs","layout","hideRequiredMark","labelAlign","colon","gutter","Item","label","allowClear","Option","value","x","key","picker","color","width","onClick","title","dataIndex"],"mappings":"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","file":"static/js/11.1544d236.chunk.js","sourcesContent":["import React from 'react'\nimport { ColumnProps, TableProps, TablePaginationConfig } from 'antd/lib/table'\nimport { SpinProps } from 'antd/lib/spin'\nimport { merge } from 'ramda'\nimport { DataSource } from '@/constants/types'\nimport Table from '@/components/table'\n\ntype Props<T> = Omit<TableProps<T>, 'dataSource'> & {\n  columns: ColumnProps<T>[]\n  className?: string\n  pageNum?: number\n  dataSource: DataSource<T>\n  onChange?: (pagination: TablePaginationConfig) => any\n  loading?: boolean | SpinProps\n  rowSelection?: {\n    selectedRowKeys: any[]\n    onChange: (selectedRowKeys: any, selectedRows: any) => void\n  }\n}\n\nexport default function QueryTable<T>({\n  columns,\n  className,\n  pageNum = 1,\n  dataSource,\n  onChange,\n  loading = false,\n  rowSelection,\n  pagination,\n  ...props\n}: Props<T>) {\n  const handleTableChange = ({ current, pageSize }: TablePaginationConfig) => {\n    if (onChange) {\n      onChange({ current, pageSize })\n    }\n  }\n\n  const paginationConfig = merge<any, any>(pagination, {\n    current: pageNum,\n    pageSize: 10,\n    total: dataSource.total,\n    showSizeChanger: false,\n  }) as TablePaginationConfig\n\n  return (\n    <Table\n      rowKey=\"id\"\n      dataSource={dataSource.content}\n      columns={columns as any}\n      pagination={paginationConfig}\n      onChange={handleTableChange}\n      rowSelection={rowSelection}\n      loading={loading}\n      className={className}\n      {...props}\n    />\n  )\n}\n","import React from 'react'\nimport { length, times, identity, map } from 'ramda'\nimport moment from 'moment'\nimport { DataSource } from '@/constants/types'\nimport { uuid } from '@/utils/webHelper'\nimport faker from 'faker'\nconst { compose } = require('ramda')\n\nfaker.locale = 'zh_TW'\n\nexport function useYellowCards() {\n  const [data, setData] = React.useState<DataSource>({\n    content: [],\n    total: 0,\n    totalPages: 0,\n  })\n\n  const refetch = (values?: any) => {\n    const _data = compose(\n      map(_ => ({\n        id: uuid(),\n        workNo: faker.lorem.slug(),\n        HHISNUM: faker.company.catchPhrase(),\n        patholInfo: faker.company.catchPhrase(),\n        name: faker.name.firstName(),\n        age: faker.random.number(50),\n        sex: '男',\n        reportTime: moment(),\n        reportTimeStr: moment().format('YYYY.MM.DD HH:mm:ss'),\n      })),\n      times(identity)\n    )(100)\n\n    setData({\n      content: _data,\n      total: length(_data),\n      totalPages: Math.floor(length(_data) / 10) + 1,\n    })\n  }\n\n  return {\n    data,\n    refetch,\n    loading: false,\n  }\n}\n","import React from 'react'\nimport { length, compose, identity, times, map } from 'ramda'\nimport { Row, Col, Form } from 'antd'\nimport { ColumnProps } from 'antd/lib/table'\nimport useTitle from '@/hooks/useTitle'\nimport { useBreadcrumb } from '@/hooks/useApp'\nimport { useYellowCards } from '@/services/yellowCard'\nimport Select from '@/components/select'\nimport Input from '@/components/input'\nimport { RangePicker } from '@/components/datepicker'\nimport Table from '@/components/query-table'\nimport Button from '@/components/button'\nimport { Page } from '@/components/layout'\nimport { createFormItemLayout } from '@/utils/form'\n\nconst formItemLayout = createFormItemLayout(6)\n\nexport default function YellowCardInquiry() {\n  useTitle('黃卡新檢索')\n  useBreadcrumb([{ name: '清單查詢' }, { name: '黃卡新檢索' }])\n\n  const [form] = Form.useForm()\n\n  const { data, refetch } = useYellowCards()\n\n  const handleOk = () => {\n    refetch()\n  }\n\n  const columns: ColumnProps<any>[] = [\n    { title: '工作號', dataIndex: 'workNo' },\n    { title: '姓名', dataIndex: 'name' },\n    { title: '性別', dataIndex: 'sex' },\n    { title: '報告時間', dataIndex: 'reportTimeStr' },\n    { title: '病理資料', dataIndex: 'patholInfo' },\n    { title: '年齡', dataIndex: 'age' },\n  ]\n\n  return (\n    <Page style={{ height: 'calc(100vh - 203px)' }}>\n      <Row justify=\"center\">\n        <Col md={22} xs={24}>\n          <Form\n            form={form}\n            layout=\"horizontal\"\n            hideRequiredMark={true}\n            labelAlign=\"left\"\n            colon={false}>\n            <Row gutter={12} justify=\"space-between\">\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"資料庫\" name=\"no\">\n                  <Select allowClear>\n                    <Select.Option value={1}>黃卡資料庫</Select.Option>\n                    <Select.Option value={2}>...</Select.Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"病歷號\" name=\"no\">\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"病理號\" name=\"no\">\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"病理資料\" name=\"createAt\">\n                  <RangePicker className=\"w-full\" />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={12} justify=\"space-between\">\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"年齡\" name=\"doctor\">\n                  <Select allowClear>\n                    {compose(\n                      map((x: number) => (\n                        <Select.Option key={x} value={x}>\n                          {x}\n                        </Select.Option>\n                      )),\n                      times(identity)\n                    )(120)}\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"性別\" name=\"state\">\n                  <Select allowClear>\n                    <Select.Option value={1}>男</Select.Option>\n                    <Select.Option value={2}>女</Select.Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item {...formItemLayout} label=\"年度範圍\" name=\"state\">\n                  <RangePicker picker={'year' as any} />\n                </Form.Item>\n              </Col>\n              <Col md={6} xs={24}>\n                <Form.Item>\n                  <Button\n                    color=\"primary\"\n                    className=\"ml-3\"\n                    style={{ width: 120 }}\n                    onClick={handleOk}>\n                    搜尋\n                  </Button>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n      {length(data.content) > 0 && (\n        <>\n          <Row className=\"mb-2 mt-4\" justify=\"center\">\n            <Col md={22} xs={24} className=\"text-sm\">\n              檢索結果共 <span className=\"text-primary\">{data.total}</span> 筆\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col md={22} xs={24}>\n              <Table rowKey=\"id\" dataSource={data} columns={columns} />\n            </Col>\n          </Row>\n        </>\n      )}\n    </Page>\n  )\n}\n"],"sourceRoot":""}